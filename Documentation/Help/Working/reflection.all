<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="TalkingKeyboard.Shell">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="TalkingKeyboard.Modules.TextHolder">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="TalkingKeyboard.Modules.CoordinateProvider">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="TalkingKeyboard.Infrastructure">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="TalkingKeyboard.Modules.ByGazeTimePointProcessor">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="TalkingKeyboard.Modules.MicrosoftTextToSpeech">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="TalkingKeyboard.Modules.SuggestionsProvider">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="TalkingKeyboard.Modules.MultiKeyBoard">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="TalkingKeyboard.Modules.SingleKeyBoard">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="TalkingKeyboard.Modules.SuggestionBoard">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:TalkingKeyboard.Infrastructure">
      <apidata name="TalkingKeyboard.Infrastructure" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Infrastructure.Commands" />
        <element api="T:TalkingKeyboard.Infrastructure.Configuration" />
        <element api="T:TalkingKeyboard.Infrastructure.Events" />
        <element api="T:TalkingKeyboard.Infrastructure.Events.MultiTextUpdatedEvent" />
        <element api="T:TalkingKeyboard.Infrastructure.Events.NewCoordinateEvent" />
        <element api="T:TalkingKeyboard.Infrastructure.Events.TextUpdatedEvent" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Commands">
      <apidata name="Commands" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:TalkingKeyboard.Infrastructure.Commands.AddMultiCharacterTextCommand" />
        <element api="P:TalkingKeyboard.Infrastructure.Commands.WriteSuggestionCommand" />
        <element api="P:TalkingKeyboard.Infrastructure.Commands.RemoveLastCharacterCommand" />
        <element api="P:TalkingKeyboard.Infrastructure.Commands.RemoveLastMultiCharacterCommand" />
        <element api="P:TalkingKeyboard.Infrastructure.Commands.RemoveLastWordCommand" />
        <element api="P:TalkingKeyboard.Infrastructure.Commands.SetShiftDownCommand" />
        <element api="P:TalkingKeyboard.Infrastructure.Commands.AppendTextCommand" />
        <element api="P:TalkingKeyboard.Infrastructure.Commands.SpeechSynthesisCommand" />
        <element api="P:TalkingKeyboard.Infrastructure.Commands.ToggleShiftDownCommand" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Commands.AddMultiCharacterTextCommand">
      <apidata name="AddMultiCharacterTextCommand" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AddMultiCharacterTextCommand" />
      <setter name="set_AddMultiCharacterTextCommand" />
      <returns>
        <type api="T:Prism.Commands.CompositeCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Commands" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Commands.AppendTextCommand">
      <apidata name="AppendTextCommand" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AppendTextCommand" />
      <setter name="set_AppendTextCommand" />
      <returns>
        <type api="T:Prism.Commands.CompositeCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Commands" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Commands.RemoveLastCharacterCommand">
      <apidata name="RemoveLastCharacterCommand" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RemoveLastCharacterCommand" />
      <setter name="set_RemoveLastCharacterCommand" />
      <returns>
        <type api="T:Prism.Commands.CompositeCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Commands" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Commands.RemoveLastMultiCharacterCommand">
      <apidata name="RemoveLastMultiCharacterCommand" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RemoveLastMultiCharacterCommand" />
      <setter name="set_RemoveLastMultiCharacterCommand" />
      <returns>
        <type api="T:Prism.Commands.CompositeCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Commands" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Commands.RemoveLastWordCommand">
      <apidata name="RemoveLastWordCommand" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RemoveLastWordCommand" />
      <setter name="set_RemoveLastWordCommand" />
      <returns>
        <type api="T:Prism.Commands.CompositeCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Commands" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Commands.SetShiftDownCommand">
      <apidata name="SetShiftDownCommand" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SetShiftDownCommand" />
      <setter name="set_SetShiftDownCommand" />
      <returns>
        <type api="T:Prism.Commands.CompositeCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Commands" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Commands.SpeechSynthesisCommand">
      <apidata name="SpeechSynthesisCommand" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SpeechSynthesisCommand" />
      <setter name="set_SpeechSynthesisCommand" />
      <returns>
        <type api="T:Prism.Commands.CompositeCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Commands" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Commands.ToggleShiftDownCommand">
      <apidata name="ToggleShiftDownCommand" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ToggleShiftDownCommand" />
      <setter name="set_ToggleShiftDownCommand" />
      <returns>
        <type api="T:Prism.Commands.CompositeCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Commands" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Commands.WriteSuggestionCommand">
      <apidata name="WriteSuggestionCommand" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WriteSuggestionCommand" />
      <setter name="set_WriteSuggestionCommand" />
      <returns>
        <type api="T:Prism.Commands.CompositeCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Commands" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Configuration">
      <apidata name="Configuration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:TalkingKeyboard.Infrastructure.Configuration.DefaultDictionaryFilePath" />
        <element api="P:TalkingKeyboard.Infrastructure.Configuration.GazeKeepAliveTimeSpan" />
        <element api="P:TalkingKeyboard.Infrastructure.Configuration.GazeTimeSpanBeforeAnimationBegins" />
        <element api="P:TalkingKeyboard.Infrastructure.Configuration.GazeTimeSpanBeforeCooldownOccurs" />
        <element api="P:TalkingKeyboard.Infrastructure.Configuration.GazeTimeSpanBeforeSelectionOccurs" />
        <element api="P:TalkingKeyboard.Infrastructure.Configuration.InitialRequiredGazeTime" />
        <element api="P:TalkingKeyboard.Infrastructure.Configuration.PointKeepAliveTimeSpan" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Configuration.DefaultDictionaryFilePath">
      <apidata name="DefaultDictionaryFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultDictionaryFilePath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Configuration.GazeKeepAliveTimeSpan">
      <apidata name="GazeKeepAliveTimeSpan" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GazeKeepAliveTimeSpan" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Configuration.GazeTimeSpanBeforeAnimationBegins">
      <apidata name="GazeTimeSpanBeforeAnimationBegins" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GazeTimeSpanBeforeAnimationBegins" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Configuration.GazeTimeSpanBeforeCooldownOccurs">
      <apidata name="GazeTimeSpanBeforeCooldownOccurs" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GazeTimeSpanBeforeCooldownOccurs" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Configuration.GazeTimeSpanBeforeSelectionOccurs">
      <apidata name="GazeTimeSpanBeforeSelectionOccurs" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GazeTimeSpanBeforeSelectionOccurs" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Configuration.InitialRequiredGazeTime">
      <apidata name="InitialRequiredGazeTime" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InitialRequiredGazeTime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Configuration.PointKeepAliveTimeSpan">
      <apidata name="PointKeepAliveTimeSpan" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PointKeepAliveTimeSpan" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Configuration" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Events">
      <apidata name="Events" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.Events.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Events.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Events" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Events.MultiTextUpdatedEvent">
      <apidata name="MultiTextUpdatedEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Prism.Events.PubSubEvent" ref="true" />
          <type api="T:Prism.Events.EventBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.Events.MultiTextUpdatedEvent.#ctor" />
        <element api="M:Prism.Events.PubSubEvent.Subscribe(System.Action)">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent.Subscribe(System.Action,Prism.Events.ThreadOption)">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action" ref="true" />
            </parameter>
            <parameter name="threadOption">
              <type api="T:Prism.Events.ThreadOption" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent.Subscribe(System.Action,System.Boolean)">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action" ref="true" />
            </parameter>
            <parameter name="keepSubscriberReferenceAlive">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent.Subscribe(System.Action,Prism.Events.ThreadOption,System.Boolean)">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action" ref="true" />
            </parameter>
            <parameter name="threadOption">
              <type api="T:Prism.Events.ThreadOption" ref="false" />
            </parameter>
            <parameter name="keepSubscriberReferenceAlive">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent.Publish">
          <apidata name="Publish" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent.Unsubscribe(System.Action)">
          <apidata name="Unsubscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="subscriber">
              <type api="T:System.Action" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.EventBase.Unsubscribe(Prism.Events.SubscriptionToken)">
          <apidata name="Unsubscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="token">
              <type api="T:Prism.Events.SubscriptionToken" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent.Contains(System.Action)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="subscriber">
              <type api="T:System.Action" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.EventBase.Contains(Prism.Events.SubscriptionToken)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="token">
              <type api="T:Prism.Events.SubscriptionToken" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.EventBase.InternalSubscribe(Prism.Events.IEventSubscription)">
          <apidata name="InternalSubscribe" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="eventSubscription">
              <type api="T:Prism.Events.IEventSubscription" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.EventBase.InternalPublish(System.Object[])">
          <apidata name="InternalPublish" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="arguments" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="P:Prism.Events.EventBase.SynchronizationContext">
          <apidata name="SynchronizationContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SynchronizationContext" />
          <setter name="set_SynchronizationContext" />
          <returns>
            <type api="T:System.Threading.SynchronizationContext" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="P:Prism.Events.EventBase.Subscriptions">
          <apidata name="Subscriptions" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Subscriptions" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:Prism.Events.IEventSubscription" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Events" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Events.MultiTextUpdatedEvent.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Events.MultiTextUpdatedEvent" ref="true">
          <type api="T:TalkingKeyboard.Infrastructure.Events" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Events.NewCoordinateEvent">
      <apidata name="NewCoordinateEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Prism.Events.PubSubEvent`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Point" ref="false" />
            </specialization>
          </type>
          <type api="T:Prism.Events.EventBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.Events.NewCoordinateEvent.#ctor" />
        <element api="M:Prism.Events.PubSubEvent`1.Subscribe(System.Action{`0})">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent`1.Subscribe(System.Action{`0},Prism.Events.ThreadOption)">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="threadOption">
              <type api="T:Prism.Events.ThreadOption" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent`1.Subscribe(System.Action{`0},System.Boolean)">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="keepSubscriberReferenceAlive">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent`1.Subscribe(System.Action{`0},Prism.Events.ThreadOption,System.Boolean)">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="threadOption">
              <type api="T:Prism.Events.ThreadOption" ref="false" />
            </parameter>
            <parameter name="keepSubscriberReferenceAlive">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent`1.Subscribe(System.Action{`0},Prism.Events.ThreadOption,System.Boolean,System.Predicate{`0})">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="threadOption">
              <type api="T:Prism.Events.ThreadOption" ref="false" />
            </parameter>
            <parameter name="keepSubscriberReferenceAlive">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
            <parameter name="filter">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent`1.Publish(`0)">
          <apidata name="Publish" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="payload">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent`1.Unsubscribe(System.Action{`0})">
          <apidata name="Unsubscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="subscriber">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:Prism.Events.EventBase.Unsubscribe(Prism.Events.SubscriptionToken)">
          <apidata name="Unsubscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="token">
              <type api="T:Prism.Events.SubscriptionToken" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent`1.Contains(System.Action{`0})">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="subscriber">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:Prism.Events.EventBase.Contains(Prism.Events.SubscriptionToken)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="token">
              <type api="T:Prism.Events.SubscriptionToken" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.EventBase.InternalSubscribe(Prism.Events.IEventSubscription)">
          <apidata name="InternalSubscribe" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="eventSubscription">
              <type api="T:Prism.Events.IEventSubscription" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.EventBase.InternalPublish(System.Object[])">
          <apidata name="InternalPublish" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="arguments" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="P:Prism.Events.EventBase.SynchronizationContext">
          <apidata name="SynchronizationContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SynchronizationContext" />
          <setter name="set_SynchronizationContext" />
          <returns>
            <type api="T:System.Threading.SynchronizationContext" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="P:Prism.Events.EventBase.Subscriptions">
          <apidata name="Subscriptions" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Subscriptions" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:Prism.Events.IEventSubscription" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Events" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Events.NewCoordinateEvent.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Events.NewCoordinateEvent" ref="true">
          <type api="T:TalkingKeyboard.Infrastructure.Events" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Events.TextUpdatedEvent">
      <apidata name="TextUpdatedEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Prism.Events.PubSubEvent" ref="true" />
          <type api="T:Prism.Events.EventBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.Events.TextUpdatedEvent.#ctor" />
        <element api="M:Prism.Events.PubSubEvent.Subscribe(System.Action)">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent.Subscribe(System.Action,Prism.Events.ThreadOption)">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action" ref="true" />
            </parameter>
            <parameter name="threadOption">
              <type api="T:Prism.Events.ThreadOption" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent.Subscribe(System.Action,System.Boolean)">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action" ref="true" />
            </parameter>
            <parameter name="keepSubscriberReferenceAlive">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent.Subscribe(System.Action,Prism.Events.ThreadOption,System.Boolean)">
          <apidata name="Subscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action" ref="true" />
            </parameter>
            <parameter name="threadOption">
              <type api="T:Prism.Events.ThreadOption" ref="false" />
            </parameter>
            <parameter name="keepSubscriberReferenceAlive">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent.Publish">
          <apidata name="Publish" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent.Unsubscribe(System.Action)">
          <apidata name="Unsubscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="subscriber">
              <type api="T:System.Action" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.EventBase.Unsubscribe(Prism.Events.SubscriptionToken)">
          <apidata name="Unsubscribe" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="token">
              <type api="T:Prism.Events.SubscriptionToken" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.PubSubEvent.Contains(System.Action)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="subscriber">
              <type api="T:System.Action" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.PubSubEvent" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.EventBase.Contains(Prism.Events.SubscriptionToken)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="token">
              <type api="T:Prism.Events.SubscriptionToken" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.EventBase.InternalSubscribe(Prism.Events.IEventSubscription)">
          <apidata name="InternalSubscribe" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="eventSubscription">
              <type api="T:Prism.Events.IEventSubscription" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Prism.Events.SubscriptionToken" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Events.EventBase.InternalPublish(System.Object[])">
          <apidata name="InternalPublish" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="arguments" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="P:Prism.Events.EventBase.SynchronizationContext">
          <apidata name="SynchronizationContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SynchronizationContext" />
          <setter name="set_SynchronizationContext" />
          <returns>
            <type api="T:System.Threading.SynchronizationContext" ref="true" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="P:Prism.Events.EventBase.Subscriptions">
          <apidata name="Subscriptions" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Subscriptions" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:Prism.Events.IEventSubscription" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Events" />
            <type api="T:Prism.Events.EventBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Events" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Events.TextUpdatedEvent.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure" />
        <type api="T:TalkingKeyboard.Infrastructure.Events.TextUpdatedEvent" ref="true">
          <type api="T:TalkingKeyboard.Infrastructure.Events" ref="true" />
        </type>
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Infrastructure.Constants">
      <apidata name="TalkingKeyboard.Infrastructure.Constants" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Infrastructure.Constants.CharacterClasses" />
        <element api="T:TalkingKeyboard.Infrastructure.Constants.RegionNames" />
        <element api="T:TalkingKeyboard.Infrastructure.Constants.ResourceLocations" />
        <element api="T:TalkingKeyboard.Infrastructure.Constants.ViewNames" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Constants.CharacterClasses">
      <apidata name="CharacterClasses" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.FollowedByUppercase" />
        <element api="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.Whitespace" />
        <element api="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.ColonsAndCommas" />
        <element api="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.ClosingCharacters" />
        <element api="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.Accents" />
        <element api="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.PrecededByNonwhitespaceFollowedByWhitespace" />
        <element api="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.WordSeparators" />
        <element api="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.AccentLookup" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.AccentLookup">
      <apidata name="AccentLookup" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AccentLookup" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Char" ref="false" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.Char" ref="false" />
                <type api="T:System.Char" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.CharacterClasses" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.Accents">
      <apidata name="Accents" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Accents" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Char" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.CharacterClasses" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.ClosingCharacters">
      <apidata name="ClosingCharacters" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClosingCharacters" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Char" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.CharacterClasses" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.ColonsAndCommas">
      <apidata name="ColonsAndCommas" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ColonsAndCommas" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Char" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.CharacterClasses" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.FollowedByUppercase">
      <apidata name="FollowedByUppercase" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FollowedByUppercase" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Char" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.CharacterClasses" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.PrecededByNonwhitespaceFollowedByWhitespace">
      <apidata name="PrecededByNonwhitespaceFollowedByWhitespace" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PrecededByNonwhitespaceFollowedByWhitespace" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Char" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.CharacterClasses" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.Whitespace">
      <apidata name="Whitespace" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Whitespace" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Char" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.CharacterClasses" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.CharacterClasses.WordSeparators">
      <apidata name="WordSeparators" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WordSeparators" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Char" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.CharacterClasses" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Constants.RegionNames">
      <apidata name="RegionNames" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:TalkingKeyboard.Infrastructure.Constants.RegionNames.BoardViewRegion" />
        <element api="P:TalkingKeyboard.Infrastructure.Constants.RegionNames.SuggestionRegion" />
        <element api="P:TalkingKeyboard.Infrastructure.Constants.RegionNames.TextViewRegion" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.RegionNames.BoardViewRegion">
      <apidata name="BoardViewRegion" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BoardViewRegion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.RegionNames" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.RegionNames.SuggestionRegion">
      <apidata name="SuggestionRegion" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SuggestionRegion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.RegionNames" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.RegionNames.TextViewRegion">
      <apidata name="TextViewRegion" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TextViewRegion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.RegionNames" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Constants.ResourceLocations">
      <apidata name="ResourceLocations" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:TalkingKeyboard.Infrastructure.Constants.ResourceLocations.DefaultDictionaryLocation" />
        <element api="P:TalkingKeyboard.Infrastructure.Constants.ResourceLocations.SpanishDictionaryLocation" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.ResourceLocations.DefaultDictionaryLocation">
      <apidata name="DefaultDictionaryLocation" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultDictionaryLocation" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.ResourceLocations" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.ResourceLocations.SpanishDictionaryLocation">
      <apidata name="SpanishDictionaryLocation" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SpanishDictionaryLocation" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.ResourceLocations" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Constants.ViewNames">
      <apidata name="ViewNames" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:TalkingKeyboard.Infrastructure.Constants.ViewNames.QwertySpanishMultiKeyboard" />
        <element api="P:TalkingKeyboard.Infrastructure.Constants.ViewNames.QwertySpanishSingleKeyboard" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.ViewNames.QwertySpanishMultiKeyboard">
      <apidata name="QwertySpanishMultiKeyboard" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_QwertySpanishMultiKeyboard" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.ViewNames" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Constants.ViewNames.QwertySpanishSingleKeyboard">
      <apidata name="QwertySpanishSingleKeyboard" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_QwertySpanishSingleKeyboard" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Constants" />
        <type api="T:TalkingKeyboard.Infrastructure.Constants.ViewNames" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Infrastructure.Controls">
      <apidata name="TalkingKeyboard.Infrastructure.Controls" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" />
        <element api="T:TalkingKeyboard.Infrastructure.Controls.ITextModel" />
        <element api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButton" />
        <element api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" />
        <element api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel">
      <apidata name="ISelectableControlViewModel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Windows.Input.ICommandSource" ref="true" />
      </implements>
      <implementors>
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </implementors>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.Select" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.Animation" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.CurrentGazeTimeSpan" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.GazeKeepAliveTimeSpan" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.GazeTimeSpanBeforeAnimationBegins" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.GazeTimeSpanBeforeCooldown" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.GazeTimeSpanBeforeSelectionOccurs" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.LastSeenTime" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.LastSelectedTime" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.State" />
        <element api="P:System.Windows.Input.ICommandSource.Command">
          <apidata name="Command" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_Command" />
          <returns>
            <type api="T:System.Windows.Input.ICommand" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Input" />
            <type api="T:System.Windows.Input.ICommandSource" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Input.ICommandSource.CommandParameter">
          <apidata name="CommandParameter" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_CommandParameter" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Input" />
            <type api="T:System.Windows.Input.ICommandSource" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Input.ICommandSource.CommandTarget">
          <apidata name="CommandTarget" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_CommandTarget" />
          <returns>
            <type api="T:System.Windows.IInputElement" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Input" />
            <type api="T:System.Windows.Input.ICommandSource" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.Animation">
      <apidata name="Animation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Animation" />
      <setter name="set_Animation" />
      <returns>
        <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.CurrentGazeTimeSpan">
      <apidata name="CurrentGazeTimeSpan" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentGazeTimeSpan" />
      <setter name="set_CurrentGazeTimeSpan" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.GazeKeepAliveTimeSpan">
      <apidata name="GazeKeepAliveTimeSpan" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_GazeKeepAliveTimeSpan" />
      <setter name="set_GazeKeepAliveTimeSpan" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.GazeTimeSpanBeforeAnimationBegins">
      <apidata name="GazeTimeSpanBeforeAnimationBegins" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_GazeTimeSpanBeforeAnimationBegins" />
      <setter name="set_GazeTimeSpanBeforeAnimationBegins" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.GazeTimeSpanBeforeCooldown">
      <apidata name="GazeTimeSpanBeforeCooldown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_GazeTimeSpanBeforeCooldown" />
      <setter name="set_GazeTimeSpanBeforeCooldown" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.GazeTimeSpanBeforeSelectionOccurs">
      <apidata name="GazeTimeSpanBeforeSelectionOccurs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_GazeTimeSpanBeforeSelectionOccurs" />
      <setter name="set_GazeTimeSpanBeforeSelectionOccurs" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.LastSeenTime">
      <apidata name="LastSeenTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_LastSeenTime" />
      <setter name="set_LastSeenTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.LastSelectedTime">
      <apidata name="LastSelectedTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_LastSelectedTime" />
      <setter name="set_LastSelectedTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.Select">
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.State">
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Controls.ITextModel">
      <apidata name="ITextModel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel" ref="true" />
      </implementors>
      <elements>
        <element api="P:TalkingKeyboard.Infrastructure.Controls.ITextModel.CurrentText" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.ITextModel.CurrentText">
      <apidata name="CurrentText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentText" />
      <setter name="set_CurrentText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ITextModel" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Controls.SelectableButton">
      <apidata name="SelectableButton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:TalkingKeyboard.Infrastructure.Controls.SelectableButton.FontSizeProperty" />
        <element api="F:TalkingKeyboard.Infrastructure.Controls.SelectableButton.TextProperty" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableButton.#ctor" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableButton.InitializeComponent" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButton.FontSize" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButton.Text" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CompareTo(System.Object)" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.PauseAnimation" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.PlayAnimation" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.ResumeAnimation" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.Select" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.StopAnimation" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableControl.Animation" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableControl.Command" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CommandParameter" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CommandTarget" />
        <element api="M:System.Windows.Controls.ContentControl.ShouldSerializeContent">
          <apidata name="ShouldSerializeContent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
          <apidata name="AddChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddText(System.String)">
          <apidata name="AddText" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="text">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
          <apidata name="OnContentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
          <apidata name="OnContentTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
            <parameter name="newContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
          <apidata name="OnContentTemplateSelectorChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
            <parameter name="newContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)">
          <apidata name="OnContentStringFormatChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="newContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.LogicalChildren">
          <apidata name="LogicalChildren" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.FrameworkElement.LogicalChildren">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_LogicalChildren" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.HasContent">
          <apidata name="HasContent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_HasContent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplate">
          <apidata name="ContentTemplate" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplate" />
          <setter name="set_ContentTemplate" />
          <returns>
            <type api="T:System.Windows.DataTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplateSelector">
          <apidata name="ContentTemplateSelector" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplateSelector" />
          <setter name="set_ContentTemplateSelector" />
          <returns>
            <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentStringFormat">
          <apidata name="ContentStringFormat" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentStringFormat" />
          <setter name="set_ContentStringFormat" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
          <apidata name="OnTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
            <parameter name="newTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="constraint">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="arrangeBounds">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:System.Windows.Media.FontFamily" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:System.Windows.FontStretch" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:System.Windows.FontStyle" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:System.Windows.FontWeight" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HandlesScrolling">
          <apidata name="HandlesScrolling" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HandlesScrolling" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.PreviewMouseDoubleClick">
          <apidata name="PreviewMouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDoubleClick" />
          <remover name="remove_PreviewMouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.MouseDoubleClick">
          <apidata name="MouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDoubleClick" />
          <remover name="remove_MouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
          <apidata name="ShouldSerializeStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <apidata name="OnStyleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
            <parameter name="newStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <apidata name="ParentLayoutInvalidated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
            <parameter name="isControllable">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
          <apidata name="ShouldSerializeTriggers" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <apidata name="GetVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeResources">
          <apidata name="ShouldSerializeResources" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="childName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <apidata name="FindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <apidata name="TryFindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetResourceReference" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <apidata name="OnVisualParentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="oldParent">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding">
              <type api="T:System.Windows.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="path">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetUIParentCore">
          <apidata name="GetUIParentCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetUIParentCore">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="targetRectangle">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <apidata name="MeasureCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
          <apidata name="ArrangeCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <apidata name="OnRenderSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="sizeInfo">
              <type api="T:System.Windows.SizeChangedInfo" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <apidata name="GetLayoutClip" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="layoutSlotSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <apidata name="MoveFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="request">
              <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <apidata name="PredictFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="direction">
              <type api="T:System.Windows.Input.FocusNavigationDirection" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginInit">
          <apidata name="BeginInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.EndInit">
          <apidata name="EndInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <apidata name="OnInitialized" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <apidata name="RegisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="scopedElement">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
          <apidata name="UnregisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UpdateDefaultStyle">
          <apidata name="UpdateDefaultStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <apidata name="AddLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <apidata name="RemoveLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <apidata name="OverridesDefaultStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OverridesDefaultStyle" />
          <setter name="set_OverridesDefaultStyle" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:System.Windows.TriggerCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.TemplatedParent">
          <apidata name="TemplatedParent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TemplatedParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <apidata name="VisualChildrenCount" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.Media.Visual.VisualChildrenCount">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_VisualChildrenCount" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:System.Windows.ResourceDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <apidata name="InheritanceBehavior" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InheritanceBehavior" />
          <setter name="set_InheritanceBehavior" />
          <returns>
            <type api="T:System.Windows.InheritanceBehavior" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.BindingGroup">
          <apidata name="BindingGroup" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BindingGroup" />
          <setter name="set_BindingGroup" />
          <returns>
            <type api="T:System.Windows.Data.BindingGroup" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.Windows.Markup.XmlLanguage" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Windows.IFrameworkInputElement.Name">
              <type api="T:System.Windows.IFrameworkInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InputScope">
          <apidata name="InputScope" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InputScope" />
          <setter name="set_InputScope" />
          <returns>
            <type api="T:System.Windows.Input.InputScope" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.LayoutTransform">
          <apidata name="LayoutTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_LayoutTransform" />
          <setter name="set_LayoutTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:System.Windows.FlowDirection" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <apidata name="FocusVisualStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FocusVisualStyle" />
          <setter name="set_FocusVisualStyle" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Cursor">
          <apidata name="Cursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Cursor" />
          <setter name="set_Cursor" />
          <returns>
            <type api="T:System.Windows.Input.Cursor" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ForceCursor">
          <apidata name="ForceCursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ForceCursor" />
          <setter name="set_ForceCursor" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsInitialized">
          <apidata name="IsInitialized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInitialized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsLoaded">
          <apidata name="IsLoaded" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsLoaded" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ToolTip">
          <apidata name="ToolTip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ToolTip" />
          <setter name="set_ToolTip" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ContextMenu">
          <apidata name="ContextMenu" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContextMenu" />
          <setter name="set_ContextMenu" />
          <returns>
            <type api="T:System.Windows.Controls.ContextMenu" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.TargetUpdated">
          <apidata name="TargetUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TargetUpdated" />
          <remover name="remove_TargetUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SourceUpdated">
          <apidata name="SourceUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SourceUpdated" />
          <remover name="remove_SourceUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <apidata name="RequestBringIntoView" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_RequestBringIntoView" />
          <remover name="remove_RequestBringIntoView" />
          <eventhandler>
            <type api="T:System.Windows.RequestBringIntoViewEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RequestBringIntoViewEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:System.Windows.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Initialized">
          <apidata name="Initialized" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Initialized" />
          <remover name="remove_Initialized" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipOpening">
          <apidata name="ToolTipOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipOpening" />
          <remover name="remove_ToolTipOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipClosing">
          <apidata name="ToolTipClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipClosing" />
          <remover name="remove_ToolTipClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <apidata name="ContextMenuOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuOpening" />
          <remover name="remove_ContextMenuOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <apidata name="ContextMenuClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuClosing" />
          <remover name="remove_ContextMenuClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeInputBindings">
          <apidata name="ShouldSerializeInputBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeCommandBindings">
          <apidata name="ShouldSerializeCommandBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)">
          <apidata name="RaiseEvent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
            <parameter name="handledEventsToo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
          <apidata name="AddToEventRoute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="route">
              <type api="T:System.Windows.EventRoute" ref="true" />
            </parameter>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnPreviewMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnPreviewMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnGotMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnLostMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
          <apidata name="OnQueryCursor" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnPreviewStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnPreviewStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnGotStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnLostStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnPreviewTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnPreviewQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnPreviewGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnGotTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnLostTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateVisual">
          <apidata name="InvalidateVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)">
          <apidata name="OnChildDesiredSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)">
          <apidata name="OnRender" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="drawingContext">
              <type api="T:System.Windows.Media.DrawingContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)">
          <apidata name="TranslatePoint" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
            <parameter name="relativeTo">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)">
          <apidata name="InputHitTest" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.IInputElement" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureMouse">
          <apidata name="CaptureMouse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureMouse">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture">
          <apidata name="ReleaseMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureStylus">
          <apidata name="CaptureStylus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureStylus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseStylusCapture">
          <apidata name="ReleaseStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Focus">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.Focus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <apidata name="OnAccessKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.AccessKeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.PointHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.HitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.GeometryHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeometryHitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Windows.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <apidata name="OnManipulationBoundaryFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)">
          <apidata name="CaptureTouch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)">
          <apidata name="ReleaseTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseAllTouchCaptures">
          <apidata name="ReleaseAllTouchCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasAnimatedProperties">
          <apidata name="HasAnimatedProperties" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_HasAnimatedProperties" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.InputBindings">
          <apidata name="InputBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InputBindings" />
          <returns>
            <type api="T:System.Windows.Input.InputBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.CommandBindings">
          <apidata name="CommandBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_CommandBindings" />
          <returns>
            <type api="T:System.Windows.Input.CommandBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.StylusPlugIns">
          <apidata name="StylusPlugIns" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_StylusPlugIns" />
          <returns>
            <type api="T:System.Windows.Input.StylusPlugIns.StylusPlugInCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMeasureValid">
          <apidata name="IsMeasureValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMeasureValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsArrangeValid">
          <apidata name="IsArrangeValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsArrangeValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderSize" />
          <setter name="set_RenderSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseDirectlyOver">
          <apidata name="IsMouseDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseOver">
          <apidata name="IsMouseOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusOver">
          <apidata name="IsStylusOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocusWithin">
          <apidata name="IsKeyboardFocusWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocusWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocusWithin">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptured">
          <apidata name="IsMouseCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptureWithin">
          <apidata name="IsMouseCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusDirectlyOver">
          <apidata name="IsStylusDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptured">
          <apidata name="IsStylusCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptureWithin">
          <apidata name="IsStylusCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocused">
          <apidata name="IsKeyboardFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocused">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsInputMethodEnabled">
          <apidata name="IsInputMethodEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInputMethodEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.OpacityMask">
          <apidata name="OpacityMask" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OpacityMask" />
          <setter name="set_OpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffect">
          <apidata name="BitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffect" />
          <setter name="set_BitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.Effect">
          <apidata name="Effect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Effect" />
          <setter name="set_Effect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffectInput">
          <apidata name="BitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffectInput" />
          <setter name="set_BitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Uid">
          <apidata name="Uid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Uid" />
          <setter name="set_Uid" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:System.Windows.Visibility" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.ClipToBounds">
          <apidata name="ClipToBounds" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ClipToBounds" />
          <setter name="set_ClipToBounds" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.SnapsToDevicePixels">
          <apidata name="SnapsToDevicePixels" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SnapsToDevicePixels" />
          <setter name="set_SnapsToDevicePixels" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasEffectiveKeyboardFocus">
          <apidata name="HasEffectiveKeyboardFocus" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HasEffectiveKeyboardFocus" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsFocused">
          <apidata name="IsFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsEnabled">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabledCore">
          <apidata name="IsEnabledCore" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsEnabledCore" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsVisible">
          <apidata name="IsVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Focusable">
          <apidata name="Focusable" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Focusable" />
          <setter name="set_Focusable" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.Focusable">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.PersistId">
          <apidata name="PersistId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_PersistId" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.IsManipulationEnabled">
          <apidata name="IsManipulationEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsManipulationEnabled" />
          <setter name="set_IsManipulationEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesOver">
          <apidata name="AreAnyTouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver">
          <apidata name="AreAnyTouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin">
          <apidata name="AreAnyTouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCapturedWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCaptured">
          <apidata name="AreAnyTouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCaptured">
          <apidata name="TouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCaptured" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCapturedWithin">
          <apidata name="TouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCapturedWithin" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesOver">
          <apidata name="TouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesDirectlyOver">
          <apidata name="TouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesDirectlyOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseDown">
          <apidata name="PreviewMouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDown" />
          <remover name="remove_PreviewMouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseDown">
          <apidata name="MouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDown" />
          <remover name="remove_MouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseUp">
          <apidata name="PreviewMouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseUp" />
          <remover name="remove_PreviewMouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseUp">
          <apidata name="MouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseUp" />
          <remover name="remove_MouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonDown">
          <apidata name="PreviewMouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonDown" />
          <remover name="remove_PreviewMouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown">
          <apidata name="MouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonDown" />
          <remover name="remove_MouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonUp">
          <apidata name="PreviewMouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonUp" />
          <remover name="remove_PreviewMouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp">
          <apidata name="MouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonUp" />
          <remover name="remove_MouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonDown">
          <apidata name="PreviewMouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonDown" />
          <remover name="remove_PreviewMouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonDown">
          <apidata name="MouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonDown" />
          <remover name="remove_MouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonUp">
          <apidata name="PreviewMouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonUp" />
          <remover name="remove_PreviewMouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonUp">
          <apidata name="MouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonUp" />
          <remover name="remove_MouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseMove">
          <apidata name="PreviewMouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseMove" />
          <remover name="remove_PreviewMouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseMove">
          <apidata name="MouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseMove" />
          <remover name="remove_MouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseWheel">
          <apidata name="PreviewMouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseWheel" />
          <remover name="remove_PreviewMouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseWheel">
          <apidata name="MouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseWheel" />
          <remover name="remove_MouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseEnter">
          <apidata name="MouseEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseEnter" />
          <remover name="remove_MouseEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeave">
          <apidata name="MouseLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeave" />
          <remover name="remove_MouseLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotMouseCapture">
          <apidata name="GotMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotMouseCapture" />
          <remover name="remove_GotMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostMouseCapture">
          <apidata name="LostMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostMouseCapture" />
          <remover name="remove_LostMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryCursor">
          <apidata name="QueryCursor" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryCursor" />
          <remover name="remove_QueryCursor" />
          <eventhandler>
            <type api="T:System.Windows.Input.QueryCursorEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusDown">
          <apidata name="PreviewStylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusDown" />
          <remover name="remove_PreviewStylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusDown">
          <apidata name="StylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusDown" />
          <remover name="remove_StylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusUp">
          <apidata name="PreviewStylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusUp" />
          <remover name="remove_PreviewStylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusUp">
          <apidata name="StylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusUp" />
          <remover name="remove_StylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusMove">
          <apidata name="PreviewStylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusMove" />
          <remover name="remove_PreviewStylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusMove">
          <apidata name="StylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusMove" />
          <remover name="remove_StylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInAirMove">
          <apidata name="PreviewStylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInAirMove" />
          <remover name="remove_PreviewStylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInAirMove">
          <apidata name="StylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInAirMove" />
          <remover name="remove_StylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusEnter">
          <apidata name="StylusEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusEnter" />
          <remover name="remove_StylusEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusLeave">
          <apidata name="StylusLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusLeave" />
          <remover name="remove_StylusLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInRange">
          <apidata name="PreviewStylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInRange" />
          <remover name="remove_PreviewStylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInRange">
          <apidata name="StylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInRange" />
          <remover name="remove_StylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusOutOfRange">
          <apidata name="PreviewStylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusOutOfRange" />
          <remover name="remove_PreviewStylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusOutOfRange">
          <apidata name="StylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusOutOfRange" />
          <remover name="remove_StylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusSystemGesture">
          <apidata name="PreviewStylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusSystemGesture" />
          <remover name="remove_PreviewStylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusSystemGesture">
          <apidata name="StylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusSystemGesture" />
          <remover name="remove_StylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotStylusCapture">
          <apidata name="GotStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotStylusCapture" />
          <remover name="remove_GotStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostStylusCapture">
          <apidata name="LostStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostStylusCapture" />
          <remover name="remove_LostStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonDown">
          <apidata name="StylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonDown" />
          <remover name="remove_StylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonUp">
          <apidata name="StylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonUp" />
          <remover name="remove_StylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonDown">
          <apidata name="PreviewStylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonDown" />
          <remover name="remove_PreviewStylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonUp">
          <apidata name="PreviewStylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonUp" />
          <remover name="remove_PreviewStylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyDown">
          <apidata name="PreviewKeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyDown" />
          <remover name="remove_PreviewKeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyUp">
          <apidata name="PreviewKeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyUp" />
          <remover name="remove_PreviewKeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGotKeyboardFocus">
          <apidata name="PreviewGotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGotKeyboardFocus" />
          <remover name="remove_PreviewGotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewGotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotKeyboardFocus">
          <apidata name="GotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotKeyboardFocus" />
          <remover name="remove_GotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewLostKeyboardFocus">
          <apidata name="PreviewLostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewLostKeyboardFocus" />
          <remover name="remove_PreviewLostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewLostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostKeyboardFocus">
          <apidata name="LostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostKeyboardFocus" />
          <remover name="remove_LostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTextInput">
          <apidata name="PreviewTextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTextInput" />
          <remover name="remove_PreviewTextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewTextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TextInput">
          <apidata name="TextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_TextInput" />
          <remover name="remove_TextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.TextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewQueryContinueDrag">
          <apidata name="PreviewQueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewQueryContinueDrag" />
          <remover name="remove_PreviewQueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryContinueDrag">
          <apidata name="QueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryContinueDrag" />
          <remover name="remove_QueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGiveFeedback">
          <apidata name="PreviewGiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGiveFeedback" />
          <remover name="remove_PreviewGiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GiveFeedback">
          <apidata name="GiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GiveFeedback" />
          <remover name="remove_GiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragEnter">
          <apidata name="PreviewDragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragEnter" />
          <remover name="remove_PreviewDragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragOver">
          <apidata name="PreviewDragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragOver" />
          <remover name="remove_PreviewDragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragLeave">
          <apidata name="PreviewDragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragLeave" />
          <remover name="remove_PreviewDragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDrop">
          <apidata name="PreviewDrop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDrop" />
          <remover name="remove_PreviewDrop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchDown">
          <apidata name="PreviewTouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchDown" />
          <remover name="remove_PreviewTouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchDown">
          <apidata name="TouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchDown" />
          <remover name="remove_TouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchMove">
          <apidata name="PreviewTouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchMove" />
          <remover name="remove_PreviewTouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchMove">
          <apidata name="TouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchMove" />
          <remover name="remove_TouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchUp">
          <apidata name="PreviewTouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchUp" />
          <remover name="remove_PreviewTouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchUp">
          <apidata name="TouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchUp" />
          <remover name="remove_TouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotTouchCapture">
          <apidata name="GotTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotTouchCapture" />
          <remover name="remove_GotTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostTouchCapture">
          <apidata name="LostTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostTouchCapture" />
          <remover name="remove_LostTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchEnter">
          <apidata name="TouchEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchEnter" />
          <remover name="remove_TouchEnter" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchLeave">
          <apidata name="TouchLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchLeave" />
          <remover name="remove_TouchLeave" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseDirectlyOverChanged">
          <apidata name="IsMouseDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseDirectlyOverChanged" />
          <remover name="remove_IsMouseDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged">
          <apidata name="IsKeyboardFocusWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusWithinChanged" />
          <remover name="remove_IsKeyboardFocusWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCapturedChanged">
          <apidata name="IsMouseCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCapturedChanged" />
          <remover name="remove_IsMouseCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCaptureWithinChanged">
          <apidata name="IsMouseCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCaptureWithinChanged" />
          <remover name="remove_IsMouseCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusDirectlyOverChanged">
          <apidata name="IsStylusDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusDirectlyOverChanged" />
          <remover name="remove_IsStylusDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCapturedChanged">
          <apidata name="IsStylusCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCapturedChanged" />
          <remover name="remove_IsStylusCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCaptureWithinChanged">
          <apidata name="IsStylusCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCaptureWithinChanged" />
          <remover name="remove_IsStylusCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusedChanged">
          <apidata name="IsKeyboardFocusedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusedChanged" />
          <remover name="remove_IsKeyboardFocusedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsHitTestVisibleChanged">
          <apidata name="IsHitTestVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsHitTestVisibleChanged" />
          <remover name="remove_IsHitTestVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsVisibleChanged">
          <apidata name="IsVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsVisibleChanged" />
          <remover name="remove_IsVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.FocusableChanged">
          <apidata name="FocusableChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_FocusableChanged" />
          <remover name="remove_FocusableChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationBoundaryFeedback">
          <apidata name="ManipulationBoundaryFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationBoundaryFeedback" />
          <remover name="remove_ManipulationBoundaryFeedback" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <apidata name="AddVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <apidata name="RemoveVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <apidata name="OnVisualChildrenChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="visualAdded">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
            <parameter name="visualRemoved">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)">
          <apidata name="IsAncestorOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)">
          <apidata name="IsDescendantOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
          <apidata name="FindCommonVisualAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="otherVisual">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Media3D.Visual3D" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Media3D.GeneralTransform2DTo3D" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <apidata name="TransformToDescendant" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="visual">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
          <apidata name="PointToScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
          <apidata name="PointFromScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualParent">
          <apidata name="VisualParent" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_VisualParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTransform">
          <apidata name="VisualTransform" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTransform" />
          <setter name="set_VisualTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEffect">
          <apidata name="VisualEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEffect" />
          <setter name="set_VisualEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffect">
          <apidata name="VisualBitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffect" />
          <setter name="set_VisualBitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffectInput">
          <apidata name="VisualBitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffectInput" />
          <setter name="set_VisualBitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualCacheMode">
          <apidata name="VisualCacheMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualCacheMode" />
          <setter name="set_VisualCacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <apidata name="VisualScrollableAreaClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualScrollableAreaClip" />
          <setter name="set_VisualScrollableAreaClip" />
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Windows.Rect" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClip">
          <apidata name="VisualClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClip" />
          <setter name="set_VisualClip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOffset">
          <apidata name="VisualOffset" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOffset" />
          <setter name="set_VisualOffset" />
          <returns>
            <type api="T:System.Windows.Vector" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacity">
          <apidata name="VisualOpacity" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacity" />
          <setter name="set_VisualOpacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEdgeMode">
          <apidata name="VisualEdgeMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEdgeMode" />
          <setter name="set_VisualEdgeMode" />
          <returns>
            <type api="T:System.Windows.Media.EdgeMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapScalingMode">
          <apidata name="VisualBitmapScalingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapScalingMode" />
          <setter name="set_VisualBitmapScalingMode" />
          <returns>
            <type api="T:System.Windows.Media.BitmapScalingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClearTypeHint">
          <apidata name="VisualClearTypeHint" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClearTypeHint" />
          <setter name="set_VisualClearTypeHint" />
          <returns>
            <type api="T:System.Windows.Media.ClearTypeHint" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextRenderingMode">
          <apidata name="VisualTextRenderingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextRenderingMode" />
          <setter name="set_VisualTextRenderingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextRenderingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextHintingMode">
          <apidata name="VisualTextHintingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextHintingMode" />
          <setter name="set_VisualTextHintingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextHintingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacityMask">
          <apidata name="VisualOpacityMask" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacityMask" />
          <setter name="set_VisualOpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <apidata name="VisualXSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualXSnappingGuidelines" />
          <setter name="set_VisualXSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <apidata name="VisualYSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualYSnappingGuidelines" />
          <setter name="set_VisualYSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetCurrentValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <apidata name="CoerceValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <apidata name="InvalidateProperty" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <apidata name="ShouldSerializeProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <apidata name="GetLocalValueEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Windows.LocalValueEnumerator" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType">
          <apidata name="DependencyObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DependencyObjectType" />
          <returns>
            <type api="T:System.Windows.DependencyObjectType" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.IsSealed">
          <apidata name="IsSealed" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsSealed" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <apidata name="CheckAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <apidata name="VerifyAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:System.Windows.Threading.Dispatcher" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.SelectableButton.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButton" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButton.FontSize">
      <apidata name="FontSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FontSize" />
      <setter name="set_FontSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButton" ref="true" />
      </containers>
    </api>
    <api id="F:TalkingKeyboard.Infrastructure.Controls.SelectableButton.FontSizeProperty">
      <apidata name="FontSizeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButton" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.SelectableButton.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButton" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButton.Text">
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Text" />
      <setter name="set_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButton" ref="true" />
      </containers>
    </api>
    <api id="F:TalkingKeyboard.Infrastructure.Controls.SelectableButton.TextProperty">
      <apidata name="TextProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButton" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel">
      <apidata name="SelectableButtonViewModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
        <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.Select" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.OnPropertyChanged(System.String)" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.#ctor" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.Animation" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.AnimationBeginTime" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.AnimationEndTime" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.ButtonText" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.Command" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.CommandParameter" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.CommandTarget" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.CurrentGazeTimeSpan" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.FontSize" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.GazeKeepAliveTimeSpan" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.GazeTimeSpanBeforeAnimationBegins" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.GazeTimeSpanBeforeCooldown" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.GazeTimeSpanBeforeSelectionOccurs" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.LastSeenTime" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.LastSelectedTime" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.State" />
        <element api="E:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.PropertyChanged" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.Animation">
      <apidata name="Animation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Animation" />
      <setter name="set_Animation" />
      <returns>
        <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
      </returns>
      <implements>
        <member api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.Animation">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.AnimationBeginTime">
      <apidata name="AnimationBeginTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AnimationBeginTime" />
      <setter name="set_AnimationBeginTime" />
      <returns>
        <type api="T:System.Windows.Media.Animation.KeyTime" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.AnimationEndTime">
      <apidata name="AnimationEndTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AnimationEndTime" />
      <setter name="set_AnimationEndTime" />
      <returns>
        <type api="T:System.Windows.Media.Animation.KeyTime" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.ButtonText">
      <apidata name="ButtonText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ButtonText" />
      <setter name="set_ButtonText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.Command">
      <apidata name="Command" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Command" />
      <setter name="set_Command" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Windows.Input.ICommandSource.Command">
          <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.CommandParameter">
      <apidata name="CommandParameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandParameter" />
      <setter name="set_CommandParameter" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Windows.Input.ICommandSource.CommandParameter">
          <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.CommandTarget">
      <apidata name="CommandTarget" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandTarget" />
      <setter name="set_CommandTarget" />
      <returns>
        <type api="T:System.Windows.IInputElement" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Windows.Input.ICommandSource.CommandTarget">
          <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.CurrentGazeTimeSpan">
      <apidata name="CurrentGazeTimeSpan" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentGazeTimeSpan" />
      <setter name="set_CurrentGazeTimeSpan" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <implements>
        <member api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.CurrentGazeTimeSpan">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.FontSize">
      <apidata name="FontSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FontSize" />
      <setter name="set_FontSize" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.GazeKeepAliveTimeSpan">
      <apidata name="GazeKeepAliveTimeSpan" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_GazeKeepAliveTimeSpan" />
      <setter name="set_GazeKeepAliveTimeSpan" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <implements>
        <member api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.GazeKeepAliveTimeSpan">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.GazeTimeSpanBeforeAnimationBegins">
      <apidata name="GazeTimeSpanBeforeAnimationBegins" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_GazeTimeSpanBeforeAnimationBegins" />
      <setter name="set_GazeTimeSpanBeforeAnimationBegins" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <implements>
        <member api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.GazeTimeSpanBeforeAnimationBegins">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.GazeTimeSpanBeforeCooldown">
      <apidata name="GazeTimeSpanBeforeCooldown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_GazeTimeSpanBeforeCooldown" />
      <setter name="set_GazeTimeSpanBeforeCooldown" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <implements>
        <member api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.GazeTimeSpanBeforeCooldown">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.GazeTimeSpanBeforeSelectionOccurs">
      <apidata name="GazeTimeSpanBeforeSelectionOccurs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_GazeTimeSpanBeforeSelectionOccurs" />
      <setter name="set_GazeTimeSpanBeforeSelectionOccurs" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <implements>
        <member api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.GazeTimeSpanBeforeSelectionOccurs">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.LastSeenTime">
      <apidata name="LastSeenTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_LastSeenTime" />
      <setter name="set_LastSeenTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <implements>
        <member api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.LastSeenTime">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.LastSelectedTime">
      <apidata name="LastSelectedTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_LastSelectedTime" />
      <setter name="set_LastSelectedTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <implements>
        <member api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.LastSelectedTime">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.OnPropertyChanged(System.String)">
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="propertyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="E:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.PropertyChanged">
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.Select">
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.Select">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel.State">
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" ref="false" />
      </returns>
      <implements>
        <member api="P:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel.State">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ISelectableControlViewModel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButtonViewModel" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl">
      <apidata name="SelectableControl" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableButton" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        <type api="T:System.IComparable" ref="true" />
      </implements>
      <elements>
        <element api="F:TalkingKeyboard.Infrastructure.Controls.SelectableControl.AnimationProperty" />
        <element api="F:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CommandParameterProperty" />
        <element api="F:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CommandProperty" />
        <element api="F:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CommandTargetProperty" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CompareTo(System.Object)" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.PauseAnimation" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.PlayAnimation" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.ResumeAnimation" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.Select" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.StopAnimation" />
        <element api="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.#ctor" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableControl.Animation" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableControl.Command" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CommandParameter" />
        <element api="P:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CommandTarget" />
        <element api="M:System.Windows.Controls.ContentControl.ShouldSerializeContent">
          <apidata name="ShouldSerializeContent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
          <apidata name="AddChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddText(System.String)">
          <apidata name="AddText" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="text">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
          <apidata name="OnContentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
          <apidata name="OnContentTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
            <parameter name="newContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
          <apidata name="OnContentTemplateSelectorChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
            <parameter name="newContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)">
          <apidata name="OnContentStringFormatChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="newContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.LogicalChildren">
          <apidata name="LogicalChildren" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.FrameworkElement.LogicalChildren">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_LogicalChildren" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.HasContent">
          <apidata name="HasContent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_HasContent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplate">
          <apidata name="ContentTemplate" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplate" />
          <setter name="set_ContentTemplate" />
          <returns>
            <type api="T:System.Windows.DataTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplateSelector">
          <apidata name="ContentTemplateSelector" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplateSelector" />
          <setter name="set_ContentTemplateSelector" />
          <returns>
            <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentStringFormat">
          <apidata name="ContentStringFormat" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentStringFormat" />
          <setter name="set_ContentStringFormat" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
          <apidata name="OnTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
            <parameter name="newTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="constraint">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="arrangeBounds">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:System.Windows.Media.FontFamily" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.FontSizeConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:System.Windows.FontStretch" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:System.Windows.FontStyle" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:System.Windows.FontWeight" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HandlesScrolling">
          <apidata name="HandlesScrolling" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HandlesScrolling" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.PreviewMouseDoubleClick">
          <apidata name="PreviewMouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDoubleClick" />
          <remover name="remove_PreviewMouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.MouseDoubleClick">
          <apidata name="MouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDoubleClick" />
          <remover name="remove_MouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
          <apidata name="ShouldSerializeStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <apidata name="OnStyleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
            <parameter name="newStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <apidata name="ParentLayoutInvalidated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
            <parameter name="isControllable">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
          <apidata name="ShouldSerializeTriggers" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <apidata name="GetVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeResources">
          <apidata name="ShouldSerializeResources" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="childName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <apidata name="FindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <apidata name="TryFindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetResourceReference" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <apidata name="OnVisualParentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="oldParent">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding">
              <type api="T:System.Windows.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="path">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetUIParentCore">
          <apidata name="GetUIParentCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetUIParentCore">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="targetRectangle">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <apidata name="MeasureCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
          <apidata name="ArrangeCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <apidata name="OnRenderSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="sizeInfo">
              <type api="T:System.Windows.SizeChangedInfo" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <apidata name="GetLayoutClip" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="layoutSlotSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <apidata name="MoveFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="request">
              <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <apidata name="PredictFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="direction">
              <type api="T:System.Windows.Input.FocusNavigationDirection" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginInit">
          <apidata name="BeginInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.EndInit">
          <apidata name="EndInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <apidata name="OnInitialized" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <apidata name="RegisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="scopedElement">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
          <apidata name="UnregisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UpdateDefaultStyle">
          <apidata name="UpdateDefaultStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <apidata name="AddLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <apidata name="RemoveLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <apidata name="OverridesDefaultStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OverridesDefaultStyle" />
          <setter name="set_OverridesDefaultStyle" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:System.Windows.TriggerCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.TemplatedParent">
          <apidata name="TemplatedParent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TemplatedParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <apidata name="VisualChildrenCount" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.Media.Visual.VisualChildrenCount">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_VisualChildrenCount" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:System.Windows.ResourceDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <apidata name="InheritanceBehavior" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InheritanceBehavior" />
          <setter name="set_InheritanceBehavior" />
          <returns>
            <type api="T:System.Windows.InheritanceBehavior" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.BindingGroup">
          <apidata name="BindingGroup" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BindingGroup" />
          <setter name="set_BindingGroup" />
          <returns>
            <type api="T:System.Windows.Data.BindingGroup" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.Windows.Markup.XmlLanguage" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Windows.IFrameworkInputElement.Name">
              <type api="T:System.Windows.IFrameworkInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InputScope">
          <apidata name="InputScope" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InputScope" />
          <setter name="set_InputScope" />
          <returns>
            <type api="T:System.Windows.Input.InputScope" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.LayoutTransform">
          <apidata name="LayoutTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_LayoutTransform" />
          <setter name="set_LayoutTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:System.Windows.FlowDirection" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <apidata name="FocusVisualStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FocusVisualStyle" />
          <setter name="set_FocusVisualStyle" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Cursor">
          <apidata name="Cursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Cursor" />
          <setter name="set_Cursor" />
          <returns>
            <type api="T:System.Windows.Input.Cursor" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ForceCursor">
          <apidata name="ForceCursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ForceCursor" />
          <setter name="set_ForceCursor" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsInitialized">
          <apidata name="IsInitialized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInitialized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsLoaded">
          <apidata name="IsLoaded" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsLoaded" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ToolTip">
          <apidata name="ToolTip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ToolTip" />
          <setter name="set_ToolTip" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ContextMenu">
          <apidata name="ContextMenu" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContextMenu" />
          <setter name="set_ContextMenu" />
          <returns>
            <type api="T:System.Windows.Controls.ContextMenu" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.TargetUpdated">
          <apidata name="TargetUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TargetUpdated" />
          <remover name="remove_TargetUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SourceUpdated">
          <apidata name="SourceUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SourceUpdated" />
          <remover name="remove_SourceUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <apidata name="RequestBringIntoView" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_RequestBringIntoView" />
          <remover name="remove_RequestBringIntoView" />
          <eventhandler>
            <type api="T:System.Windows.RequestBringIntoViewEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RequestBringIntoViewEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:System.Windows.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Initialized">
          <apidata name="Initialized" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Initialized" />
          <remover name="remove_Initialized" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipOpening">
          <apidata name="ToolTipOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipOpening" />
          <remover name="remove_ToolTipOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipClosing">
          <apidata name="ToolTipClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipClosing" />
          <remover name="remove_ToolTipClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <apidata name="ContextMenuOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuOpening" />
          <remover name="remove_ContextMenuOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <apidata name="ContextMenuClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuClosing" />
          <remover name="remove_ContextMenuClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeInputBindings">
          <apidata name="ShouldSerializeInputBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeCommandBindings">
          <apidata name="ShouldSerializeCommandBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)">
          <apidata name="RaiseEvent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
            <parameter name="handledEventsToo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
          <apidata name="AddToEventRoute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="route">
              <type api="T:System.Windows.EventRoute" ref="true" />
            </parameter>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnPreviewMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnPreviewMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnGotMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnLostMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
          <apidata name="OnQueryCursor" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnPreviewStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnPreviewStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnGotStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnLostStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnPreviewTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnPreviewQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnPreviewGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnGotTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnLostTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateVisual">
          <apidata name="InvalidateVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)">
          <apidata name="OnChildDesiredSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)">
          <apidata name="OnRender" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="drawingContext">
              <type api="T:System.Windows.Media.DrawingContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)">
          <apidata name="TranslatePoint" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
            <parameter name="relativeTo">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)">
          <apidata name="InputHitTest" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.IInputElement" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureMouse">
          <apidata name="CaptureMouse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureMouse">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture">
          <apidata name="ReleaseMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureStylus">
          <apidata name="CaptureStylus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureStylus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseStylusCapture">
          <apidata name="ReleaseStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Focus">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.Focus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <apidata name="OnAccessKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.AccessKeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.PointHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.HitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.GeometryHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeometryHitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Windows.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <apidata name="OnManipulationBoundaryFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)">
          <apidata name="CaptureTouch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)">
          <apidata name="ReleaseTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseAllTouchCaptures">
          <apidata name="ReleaseAllTouchCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasAnimatedProperties">
          <apidata name="HasAnimatedProperties" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_HasAnimatedProperties" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.InputBindings">
          <apidata name="InputBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InputBindings" />
          <returns>
            <type api="T:System.Windows.Input.InputBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.CommandBindings">
          <apidata name="CommandBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_CommandBindings" />
          <returns>
            <type api="T:System.Windows.Input.CommandBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.StylusPlugIns">
          <apidata name="StylusPlugIns" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_StylusPlugIns" />
          <returns>
            <type api="T:System.Windows.Input.StylusPlugIns.StylusPlugInCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMeasureValid">
          <apidata name="IsMeasureValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMeasureValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsArrangeValid">
          <apidata name="IsArrangeValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsArrangeValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderSize" />
          <setter name="set_RenderSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseDirectlyOver">
          <apidata name="IsMouseDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseOver">
          <apidata name="IsMouseOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusOver">
          <apidata name="IsStylusOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocusWithin">
          <apidata name="IsKeyboardFocusWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocusWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocusWithin">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptured">
          <apidata name="IsMouseCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptureWithin">
          <apidata name="IsMouseCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusDirectlyOver">
          <apidata name="IsStylusDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptured">
          <apidata name="IsStylusCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptureWithin">
          <apidata name="IsStylusCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocused">
          <apidata name="IsKeyboardFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocused">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsInputMethodEnabled">
          <apidata name="IsInputMethodEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInputMethodEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.OpacityMask">
          <apidata name="OpacityMask" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OpacityMask" />
          <setter name="set_OpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffect">
          <apidata name="BitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffect" />
          <setter name="set_BitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.Effect">
          <apidata name="Effect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Effect" />
          <setter name="set_Effect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffectInput">
          <apidata name="BitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffectInput" />
          <setter name="set_BitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Uid">
          <apidata name="Uid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Uid" />
          <setter name="set_Uid" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:System.Windows.Visibility" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.ClipToBounds">
          <apidata name="ClipToBounds" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ClipToBounds" />
          <setter name="set_ClipToBounds" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.SnapsToDevicePixels">
          <apidata name="SnapsToDevicePixels" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SnapsToDevicePixels" />
          <setter name="set_SnapsToDevicePixels" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasEffectiveKeyboardFocus">
          <apidata name="HasEffectiveKeyboardFocus" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HasEffectiveKeyboardFocus" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsFocused">
          <apidata name="IsFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsEnabled">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabledCore">
          <apidata name="IsEnabledCore" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsEnabledCore" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsVisible">
          <apidata name="IsVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Focusable">
          <apidata name="Focusable" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Focusable" />
          <setter name="set_Focusable" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.Focusable">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.PersistId">
          <apidata name="PersistId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_PersistId" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.IsManipulationEnabled">
          <apidata name="IsManipulationEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsManipulationEnabled" />
          <setter name="set_IsManipulationEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesOver">
          <apidata name="AreAnyTouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver">
          <apidata name="AreAnyTouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin">
          <apidata name="AreAnyTouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCapturedWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCaptured">
          <apidata name="AreAnyTouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCaptured">
          <apidata name="TouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCaptured" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCapturedWithin">
          <apidata name="TouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCapturedWithin" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesOver">
          <apidata name="TouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesDirectlyOver">
          <apidata name="TouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesDirectlyOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseDown">
          <apidata name="PreviewMouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDown" />
          <remover name="remove_PreviewMouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseDown">
          <apidata name="MouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDown" />
          <remover name="remove_MouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseUp">
          <apidata name="PreviewMouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseUp" />
          <remover name="remove_PreviewMouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseUp">
          <apidata name="MouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseUp" />
          <remover name="remove_MouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonDown">
          <apidata name="PreviewMouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonDown" />
          <remover name="remove_PreviewMouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown">
          <apidata name="MouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonDown" />
          <remover name="remove_MouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonUp">
          <apidata name="PreviewMouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonUp" />
          <remover name="remove_PreviewMouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp">
          <apidata name="MouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonUp" />
          <remover name="remove_MouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonDown">
          <apidata name="PreviewMouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonDown" />
          <remover name="remove_PreviewMouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonDown">
          <apidata name="MouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonDown" />
          <remover name="remove_MouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonUp">
          <apidata name="PreviewMouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonUp" />
          <remover name="remove_PreviewMouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonUp">
          <apidata name="MouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonUp" />
          <remover name="remove_MouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseMove">
          <apidata name="PreviewMouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseMove" />
          <remover name="remove_PreviewMouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseMove">
          <apidata name="MouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseMove" />
          <remover name="remove_MouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseWheel">
          <apidata name="PreviewMouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseWheel" />
          <remover name="remove_PreviewMouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseWheel">
          <apidata name="MouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseWheel" />
          <remover name="remove_MouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseEnter">
          <apidata name="MouseEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseEnter" />
          <remover name="remove_MouseEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeave">
          <apidata name="MouseLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeave" />
          <remover name="remove_MouseLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotMouseCapture">
          <apidata name="GotMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotMouseCapture" />
          <remover name="remove_GotMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostMouseCapture">
          <apidata name="LostMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostMouseCapture" />
          <remover name="remove_LostMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryCursor">
          <apidata name="QueryCursor" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryCursor" />
          <remover name="remove_QueryCursor" />
          <eventhandler>
            <type api="T:System.Windows.Input.QueryCursorEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusDown">
          <apidata name="PreviewStylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusDown" />
          <remover name="remove_PreviewStylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusDown">
          <apidata name="StylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusDown" />
          <remover name="remove_StylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusUp">
          <apidata name="PreviewStylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusUp" />
          <remover name="remove_PreviewStylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusUp">
          <apidata name="StylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusUp" />
          <remover name="remove_StylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusMove">
          <apidata name="PreviewStylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusMove" />
          <remover name="remove_PreviewStylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusMove">
          <apidata name="StylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusMove" />
          <remover name="remove_StylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInAirMove">
          <apidata name="PreviewStylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInAirMove" />
          <remover name="remove_PreviewStylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInAirMove">
          <apidata name="StylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInAirMove" />
          <remover name="remove_StylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusEnter">
          <apidata name="StylusEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusEnter" />
          <remover name="remove_StylusEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusLeave">
          <apidata name="StylusLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusLeave" />
          <remover name="remove_StylusLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInRange">
          <apidata name="PreviewStylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInRange" />
          <remover name="remove_PreviewStylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInRange">
          <apidata name="StylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInRange" />
          <remover name="remove_StylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusOutOfRange">
          <apidata name="PreviewStylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusOutOfRange" />
          <remover name="remove_PreviewStylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusOutOfRange">
          <apidata name="StylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusOutOfRange" />
          <remover name="remove_StylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusSystemGesture">
          <apidata name="PreviewStylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusSystemGesture" />
          <remover name="remove_PreviewStylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusSystemGesture">
          <apidata name="StylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusSystemGesture" />
          <remover name="remove_StylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotStylusCapture">
          <apidata name="GotStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotStylusCapture" />
          <remover name="remove_GotStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostStylusCapture">
          <apidata name="LostStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostStylusCapture" />
          <remover name="remove_LostStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonDown">
          <apidata name="StylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonDown" />
          <remover name="remove_StylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonUp">
          <apidata name="StylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonUp" />
          <remover name="remove_StylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonDown">
          <apidata name="PreviewStylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonDown" />
          <remover name="remove_PreviewStylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonUp">
          <apidata name="PreviewStylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonUp" />
          <remover name="remove_PreviewStylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyDown">
          <apidata name="PreviewKeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyDown" />
          <remover name="remove_PreviewKeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyUp">
          <apidata name="PreviewKeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyUp" />
          <remover name="remove_PreviewKeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGotKeyboardFocus">
          <apidata name="PreviewGotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGotKeyboardFocus" />
          <remover name="remove_PreviewGotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewGotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotKeyboardFocus">
          <apidata name="GotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotKeyboardFocus" />
          <remover name="remove_GotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewLostKeyboardFocus">
          <apidata name="PreviewLostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewLostKeyboardFocus" />
          <remover name="remove_PreviewLostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewLostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostKeyboardFocus">
          <apidata name="LostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostKeyboardFocus" />
          <remover name="remove_LostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTextInput">
          <apidata name="PreviewTextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTextInput" />
          <remover name="remove_PreviewTextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewTextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TextInput">
          <apidata name="TextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_TextInput" />
          <remover name="remove_TextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.TextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewQueryContinueDrag">
          <apidata name="PreviewQueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewQueryContinueDrag" />
          <remover name="remove_PreviewQueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryContinueDrag">
          <apidata name="QueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryContinueDrag" />
          <remover name="remove_QueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGiveFeedback">
          <apidata name="PreviewGiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGiveFeedback" />
          <remover name="remove_PreviewGiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GiveFeedback">
          <apidata name="GiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GiveFeedback" />
          <remover name="remove_GiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragEnter">
          <apidata name="PreviewDragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragEnter" />
          <remover name="remove_PreviewDragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragOver">
          <apidata name="PreviewDragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragOver" />
          <remover name="remove_PreviewDragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragLeave">
          <apidata name="PreviewDragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragLeave" />
          <remover name="remove_PreviewDragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDrop">
          <apidata name="PreviewDrop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDrop" />
          <remover name="remove_PreviewDrop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchDown">
          <apidata name="PreviewTouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchDown" />
          <remover name="remove_PreviewTouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchDown">
          <apidata name="TouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchDown" />
          <remover name="remove_TouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchMove">
          <apidata name="PreviewTouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchMove" />
          <remover name="remove_PreviewTouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchMove">
          <apidata name="TouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchMove" />
          <remover name="remove_TouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchUp">
          <apidata name="PreviewTouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchUp" />
          <remover name="remove_PreviewTouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchUp">
          <apidata name="TouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchUp" />
          <remover name="remove_TouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotTouchCapture">
          <apidata name="GotTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotTouchCapture" />
          <remover name="remove_GotTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostTouchCapture">
          <apidata name="LostTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostTouchCapture" />
          <remover name="remove_LostTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchEnter">
          <apidata name="TouchEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchEnter" />
          <remover name="remove_TouchEnter" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchLeave">
          <apidata name="TouchLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchLeave" />
          <remover name="remove_TouchLeave" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseDirectlyOverChanged">
          <apidata name="IsMouseDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseDirectlyOverChanged" />
          <remover name="remove_IsMouseDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged">
          <apidata name="IsKeyboardFocusWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusWithinChanged" />
          <remover name="remove_IsKeyboardFocusWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCapturedChanged">
          <apidata name="IsMouseCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCapturedChanged" />
          <remover name="remove_IsMouseCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCaptureWithinChanged">
          <apidata name="IsMouseCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCaptureWithinChanged" />
          <remover name="remove_IsMouseCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusDirectlyOverChanged">
          <apidata name="IsStylusDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusDirectlyOverChanged" />
          <remover name="remove_IsStylusDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCapturedChanged">
          <apidata name="IsStylusCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCapturedChanged" />
          <remover name="remove_IsStylusCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCaptureWithinChanged">
          <apidata name="IsStylusCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCaptureWithinChanged" />
          <remover name="remove_IsStylusCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusedChanged">
          <apidata name="IsKeyboardFocusedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusedChanged" />
          <remover name="remove_IsKeyboardFocusedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsHitTestVisibleChanged">
          <apidata name="IsHitTestVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsHitTestVisibleChanged" />
          <remover name="remove_IsHitTestVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsVisibleChanged">
          <apidata name="IsVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsVisibleChanged" />
          <remover name="remove_IsVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.FocusableChanged">
          <apidata name="FocusableChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_FocusableChanged" />
          <remover name="remove_FocusableChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationBoundaryFeedback">
          <apidata name="ManipulationBoundaryFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationBoundaryFeedback" />
          <remover name="remove_ManipulationBoundaryFeedback" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <apidata name="AddVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <apidata name="RemoveVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <apidata name="OnVisualChildrenChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="visualAdded">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
            <parameter name="visualRemoved">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)">
          <apidata name="IsAncestorOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)">
          <apidata name="IsDescendantOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
          <apidata name="FindCommonVisualAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="otherVisual">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Media3D.Visual3D" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Media3D.GeneralTransform2DTo3D" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <apidata name="TransformToDescendant" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="visual">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
          <apidata name="PointToScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
          <apidata name="PointFromScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualParent">
          <apidata name="VisualParent" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_VisualParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTransform">
          <apidata name="VisualTransform" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTransform" />
          <setter name="set_VisualTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEffect">
          <apidata name="VisualEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEffect" />
          <setter name="set_VisualEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffect">
          <apidata name="VisualBitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffect" />
          <setter name="set_VisualBitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffectInput">
          <apidata name="VisualBitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffectInput" />
          <setter name="set_VisualBitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualCacheMode">
          <apidata name="VisualCacheMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualCacheMode" />
          <setter name="set_VisualCacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <apidata name="VisualScrollableAreaClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualScrollableAreaClip" />
          <setter name="set_VisualScrollableAreaClip" />
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Windows.Rect" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClip">
          <apidata name="VisualClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClip" />
          <setter name="set_VisualClip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOffset">
          <apidata name="VisualOffset" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOffset" />
          <setter name="set_VisualOffset" />
          <returns>
            <type api="T:System.Windows.Vector" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacity">
          <apidata name="VisualOpacity" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacity" />
          <setter name="set_VisualOpacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEdgeMode">
          <apidata name="VisualEdgeMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEdgeMode" />
          <setter name="set_VisualEdgeMode" />
          <returns>
            <type api="T:System.Windows.Media.EdgeMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapScalingMode">
          <apidata name="VisualBitmapScalingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapScalingMode" />
          <setter name="set_VisualBitmapScalingMode" />
          <returns>
            <type api="T:System.Windows.Media.BitmapScalingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClearTypeHint">
          <apidata name="VisualClearTypeHint" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClearTypeHint" />
          <setter name="set_VisualClearTypeHint" />
          <returns>
            <type api="T:System.Windows.Media.ClearTypeHint" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextRenderingMode">
          <apidata name="VisualTextRenderingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextRenderingMode" />
          <setter name="set_VisualTextRenderingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextRenderingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextHintingMode">
          <apidata name="VisualTextHintingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextHintingMode" />
          <setter name="set_VisualTextHintingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextHintingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacityMask">
          <apidata name="VisualOpacityMask" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacityMask" />
          <setter name="set_VisualOpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <apidata name="VisualXSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualXSnappingGuidelines" />
          <setter name="set_VisualXSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <apidata name="VisualYSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualYSnappingGuidelines" />
          <setter name="set_VisualYSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetCurrentValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <apidata name="CoerceValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <apidata name="InvalidateProperty" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <apidata name="ShouldSerializeProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <apidata name="GetLocalValueEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Windows.LocalValueEnumerator" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType">
          <apidata name="DependencyObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DependencyObjectType" />
          <returns>
            <type api="T:System.Windows.DependencyObjectType" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.IsSealed">
          <apidata name="IsSealed" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsSealed" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <apidata name="CheckAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <apidata name="VerifyAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:System.Windows.Threading.Dispatcher" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableControl.Animation">
      <apidata name="Animation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Animation" />
      <setter name="set_Animation" />
      <returns>
        <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="F:TalkingKeyboard.Infrastructure.Controls.SelectableControl.AnimationProperty">
      <apidata name="AnimationProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableControl.Command">
      <apidata name="Command" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Command" />
      <setter name="set_Command" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Windows.Input.ICommandSource.Command">
          <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CommandParameter">
      <apidata name="CommandParameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandParameter" />
      <setter name="set_CommandParameter" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Windows.Input.ICommandSource.CommandParameter">
          <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="F:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CommandParameterProperty">
      <apidata name="CommandParameterProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="F:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CommandProperty">
      <apidata name="CommandProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CommandTarget">
      <apidata name="CommandTarget" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandTarget" />
      <setter name="set_CommandTarget" />
      <returns>
        <type api="T:System.Windows.IInputElement" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Windows.Input.ICommandSource.CommandTarget">
          <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="F:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CommandTargetProperty">
      <apidata name="CommandTargetProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.PauseAnimation">
      <apidata name="PauseAnimation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.PlayAnimation">
      <apidata name="PlayAnimation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.ResumeAnimation">
      <apidata name="ResumeAnimation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.Select">
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Controls.SelectableControl.StopAnimation">
      <apidata name="StopAnimation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Controls" />
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Infrastructure.DataContainers">
      <apidata name="TalkingKeyboard.Infrastructure.DataContainers" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Infrastructure.DataContainers.IMaintainable" />
        <element api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
        <element api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint" />
        <element api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" />
        <element api="T:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.DataContainers.IMaintainable">
      <apidata name="IMaintainable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.IMaintainable.Maintain" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.IMaintainable.Maintain">
      <apidata name="Maintain" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.IMaintainable" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2">
      <apidata name="MaintainablePointCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint" ref="true" />
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <implements>
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.IMaintainable" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.#ctor(System.TimeSpan)" />
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.#ctor" />
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.AddPoint(System.Windows.Point)" />
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.Maintain" />
        <element api="P:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.LastMaintainedTime" />
        <element api="P:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.PointKeepAliveTimeSpan" />
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <apidata name="TryAdd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
            <parameter name="value">
              <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
          <apidata name="ContainsKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <apidata name="TryRemove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
            <parameter name="value" out="true">
              <referenceTo>
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </referenceTo>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <apidata name="TryGetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
            <parameter name="value" out="true">
              <referenceTo>
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </referenceTo>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <apidata name="TryUpdate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
            <parameter name="newValue">
              <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
            <parameter name="comparisonValue">
              <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Clear">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                      <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IDictionary.Clear">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                    <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                      <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <apidata name="GetOrAdd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
            <parameter name="valueFactory">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <apidata name="GetOrAdd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
            <parameter name="value">
              <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
          </parameters>
          <returns>
            <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <apidata name="AddOrUpdate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
            <parameter name="addValueFactory">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                </specialization>
              </type>
            </parameter>
            <parameter name="updateValueFactory">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <apidata name="AddOrUpdate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
            <parameter name="addValue">
              <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
            <parameter name="updateValueFactory">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" default="true" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item" />
          <setter name="set_Item" />
          <parameters>
            <parameter name="key">
              <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
            </parameter>
          </parameters>
          <returns>
            <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Item(`0)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.Count">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                      <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty">
          <apidata name="IsEmpty" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsEmpty" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Keys" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Keys">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values">
          <apidata name="Values" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Values" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Values">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                  <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
                <template name="T2" index="1" api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.#ctor(System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="pointKeepAliveTimeSpan">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.AddPoint(System.Windows.Point)">
      <apidata name="AddPoint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="point">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.LastMaintainedTime">
      <apidata name="LastMaintainedTime" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LastMaintainedTime" />
      <setter name="set_LastMaintainedTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.Maintain">
      <apidata name="Maintain" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.DataContainers.IMaintainable.Maintain">
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.IMaintainable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.PointKeepAliveTimeSpan">
      <apidata name="PointKeepAliveTimeSpan" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PointKeepAliveTimeSpan" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint">
      <apidata name="TimedControlsWithPoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true">
            <specialization>
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
              <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
            <specialization>
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
              <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint.#ctor(System.TimeSpan,System.Windows.Window)" />
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint.AddPoint(System.Windows.Point)" />
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint.Maintain" />
        <element api="P:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.LastMaintainedTime" />
        <element api="P:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.PointKeepAliveTimeSpan" />
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <apidata name="TryAdd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
          <apidata name="ContainsKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                  <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <apidata name="TryRemove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
            </parameter>
            <parameter name="value" out="true">
              <referenceTo>
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </referenceTo>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <apidata name="TryGetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
            </parameter>
            <parameter name="value" out="true">
              <referenceTo>
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </referenceTo>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                  <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <apidata name="TryUpdate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
            </parameter>
            <parameter name="newValue">
              <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
            </parameter>
            <parameter name="comparisonValue">
              <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Clear">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                      <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IDictionary.Clear">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                  <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                    <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                      <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <apidata name="GetOrAdd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
            </parameter>
            <parameter name="valueFactory">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                  <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <apidata name="GetOrAdd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <apidata name="AddOrUpdate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
            </parameter>
            <parameter name="addValueFactory">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                  <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="updateValueFactory">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                  <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                  <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <apidata name="AddOrUpdate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
            </parameter>
            <parameter name="addValue">
              <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
            </parameter>
            <parameter name="updateValueFactory">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                  <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                  <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" default="true" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item" />
          <setter name="set_Item" />
          <parameters>
            <parameter name="key">
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Item(`0)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                  <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.Count">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                      <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty">
          <apidata name="IsEmpty" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsEmpty" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Keys" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Keys">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                  <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values">
          <apidata name="Values" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Values" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Values">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                  <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
                <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint.#ctor(System.TimeSpan,System.Windows.Window)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="pointKeepAliveTimeSpan">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="window">
          <type api="T:System.Windows.Window" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint.AddPoint(System.Windows.Point)">
      <apidata name="AddPoint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.AddPoint(System.Windows.Point)">
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true">
            <specialization>
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
              <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="point">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint.Maintain">
      <apidata name="Maintain" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.Maintain">
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true">
            <specialization>
              <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
              <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.DataContainers.IMaintainable.Maintain">
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.IMaintainable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints">
      <apidata name="TimedPoints" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
              <type api="T:System.Windows.Point" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
              <type api="T:System.Windows.Point" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints.#ctor(System.TimeSpan)" />
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints.AddPoint(System.Windows.Point)" />
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints.Maintain" />
        <element api="P:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.LastMaintainedTime" />
        <element api="P:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.PointKeepAliveTimeSpan" />
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <apidata name="TryAdd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.DateTime" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
          <apidata name="ContainsKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.DateTime" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.DateTime" ref="false" />
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <apidata name="TryRemove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.DateTime" ref="false" />
            </parameter>
            <parameter name="value" out="true">
              <referenceTo>
                <type api="T:System.Windows.Point" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <apidata name="TryGetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.DateTime" ref="false" />
            </parameter>
            <parameter name="value" out="true">
              <referenceTo>
                <type api="T:System.Windows.Point" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.DateTime" ref="false" />
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <apidata name="TryUpdate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.DateTime" ref="false" />
            </parameter>
            <parameter name="newValue">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
            <parameter name="comparisonValue">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Clear">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.DateTime" ref="false" />
                      <type api="T:System.Windows.Point" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IDictionary.Clear">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.DateTime" ref="false" />
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.DateTime" ref="false" />
                    <type api="T:System.Windows.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.DateTime" ref="false" />
                      <type api="T:System.Windows.Point" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <apidata name="GetOrAdd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.DateTime" ref="false" />
            </parameter>
            <parameter name="valueFactory">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.DateTime" ref="false" />
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <apidata name="GetOrAdd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.DateTime" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <apidata name="AddOrUpdate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.DateTime" ref="false" />
            </parameter>
            <parameter name="addValueFactory">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.DateTime" ref="false" />
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="updateValueFactory">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.DateTime" ref="false" />
                  <type api="T:System.Windows.Point" ref="false" />
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <apidata name="AddOrUpdate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.DateTime" ref="false" />
            </parameter>
            <parameter name="addValue">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
            <parameter name="updateValueFactory">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.DateTime" ref="false" />
                  <type api="T:System.Windows.Point" ref="false" />
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" default="true" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item" />
          <setter name="set_Item" />
          <parameters>
            <parameter name="key">
              <type api="T:System.DateTime" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Item(`0)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.DateTime" ref="false" />
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.Count">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.DateTime" ref="false" />
                      <type api="T:System.Windows.Point" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty">
          <apidata name="IsEmpty" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsEmpty" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Keys" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Keys">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.DateTime" ref="false" />
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values">
          <apidata name="Values" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Values" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Values">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.DateTime" ref="false" />
                  <type api="T:System.Windows.Point" ref="false" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Concurrent" />
            <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true">
              <specialization>
                <type api="T:System.DateTime" ref="false" />
                <type api="T:System.Windows.Point" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints.#ctor(System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="pointKeepAliveTimeSpan">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints.AddPoint(System.Windows.Point)">
      <apidata name="AddPoint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.AddPoint(System.Windows.Point)">
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
              <type api="T:System.Windows.Point" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="point">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints.Maintain">
      <apidata name="Maintain" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2.Maintain">
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.MaintainablePointCollection`2" ref="true">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
              <type api="T:System.Windows.Point" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.DataContainers.IMaintainable.Maintain">
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.IMaintainable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair">
      <apidata name="TimePointPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair.#ctor(System.DateTime,System.Windows.Point)" />
        <element api="M:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair.#ctor(System.Windows.Point)" />
        <element api="P:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair.Point" />
        <element api="P:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair.Time" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair.#ctor(System.DateTime,System.Windows.Point)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="time">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="point">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair.#ctor(System.Windows.Point)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="point">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair.Point">
      <apidata name="Point" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Point" />
      <setter name="set_Point" />
      <returns>
        <type api="T:System.Windows.Point" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair.Time">
      <apidata name="Time" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Time" />
      <setter name="set_Time" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.DataContainers" />
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimePointPair" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Infrastructure.Enums">
      <apidata name="TalkingKeyboard.Infrastructure.Enums" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Enums.SelectableState">
      <apidata name="SelectableState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:TalkingKeyboard.Infrastructure.Enums.SelectableState.Idle" />
        <element api="F:TalkingKeyboard.Infrastructure.Enums.SelectableState.SeenButWaiting" />
        <element api="F:TalkingKeyboard.Infrastructure.Enums.SelectableState.AnimationRunning" />
        <element api="F:TalkingKeyboard.Infrastructure.Enums.SelectableState.AnimationOnHold" />
        <element api="F:TalkingKeyboard.Infrastructure.Enums.SelectableState.RecentlySelected" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Enums" />
      </containers>
    </api>
    <api id="F:TalkingKeyboard.Infrastructure.Enums.SelectableState.AnimationOnHold">
      <apidata name="AnimationOnHold" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Enums" />
        <type api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" ref="false" />
      </containers>
    </api>
    <api id="F:TalkingKeyboard.Infrastructure.Enums.SelectableState.AnimationRunning">
      <apidata name="AnimationRunning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Enums" />
        <type api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" ref="false" />
      </containers>
    </api>
    <api id="F:TalkingKeyboard.Infrastructure.Enums.SelectableState.Idle">
      <apidata name="Idle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Enums" />
        <type api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" ref="false" />
      </containers>
    </api>
    <api id="F:TalkingKeyboard.Infrastructure.Enums.SelectableState.RecentlySelected">
      <apidata name="RecentlySelected" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Enums" />
        <type api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" ref="false" />
      </containers>
    </api>
    <api id="F:TalkingKeyboard.Infrastructure.Enums.SelectableState.SeenButWaiting">
      <apidata name="SeenButWaiting" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Enums" />
        <type api="T:TalkingKeyboard.Infrastructure.Enums.SelectableState" ref="false" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Infrastructure.Helpers">
      <apidata name="TalkingKeyboard.Infrastructure.Helpers" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Infrastructure.Helpers.HitTestHelper" />
        <element api="T:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Helpers.HitTestHelper">
      <apidata name="HitTestHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.Helpers.HitTestHelper.FindSelectableControlSeen(System.Windows.Media.HitTestResult)" />
        <element api="M:TalkingKeyboard.Infrastructure.Helpers.HitTestHelper.SelectableControlUnderPoint(System.Windows.Point,System.Windows.Window)" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Helpers" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Helpers.HitTestHelper.FindSelectableControlSeen(System.Windows.Media.HitTestResult)">
      <apidata name="FindSelectableControlSeen" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.Windows.Media.HitTestResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Media.HitTestResultBehavior" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Helpers" />
        <type api="T:TalkingKeyboard.Infrastructure.Helpers.HitTestHelper" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Helpers.HitTestHelper.SelectableControlUnderPoint(System.Windows.Point,System.Windows.Window)">
      <apidata name="SelectableControlUnderPoint" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="point">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
        <parameter name="window">
          <type api="T:System.Windows.Window" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:TalkingKeyboard.Infrastructure.Controls.SelectableControl" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Helpers" />
        <type api="T:TalkingKeyboard.Infrastructure.Helpers.HitTestHelper" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper">
      <apidata name="StringEditHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper.GetLastWord(System.String)" />
        <element api="M:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper.RemoveLastWord(System.String)" />
        <element api="M:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper.SplitStringPrefixAndLastWord(System.String,System.String@,System.String@)" />
        <element api="M:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper.ConvertToDefaultEncodingFromUtf8(System.String)" />
        <element api="M:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper.ConvertToUtf8FromDefaultEncoding(System.String)" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Helpers" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper.ConvertToDefaultEncodingFromUtf8(System.String)">
      <apidata name="ConvertToDefaultEncodingFromUtf8" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Helpers" />
        <type api="T:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper.ConvertToUtf8FromDefaultEncoding(System.String)">
      <apidata name="ConvertToUtf8FromDefaultEncoding" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Helpers" />
        <type api="T:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper.GetLastWord(System.String)">
      <apidata name="GetLastWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Helpers" />
        <type api="T:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper.RemoveLastWord(System.String)">
      <apidata name="RemoveLastWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Helpers" />
        <type api="T:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper.SplitStringPrefixAndLastWord(System.String,System.String@,System.String@)">
      <apidata name="SplitStringPrefixAndLastWord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="prefix" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="lastWord" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Helpers" />
        <type api="T:TalkingKeyboard.Infrastructure.Helpers.StringEditHelper" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Infrastructure.MarkupExtensions">
      <apidata name="TalkingKeyboard.Infrastructure.MarkupExtensions" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension">
      <apidata name="SwitchBindingExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Data.Binding" ref="true" />
          <type api="T:System.Windows.Data.BindingBase" ref="true" />
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension.#ctor" />
        <element api="M:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension.#ctor(System.String)" />
        <element api="M:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension.#ctor(System.String,System.Object,System.Object)" />
        <element api="M:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension.#ctor(System.Windows.Data.RelativeSource,System.String,System.Object,System.Object)" />
        <element api="P:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension.ValueIfFalse" />
        <element api="P:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension.ValueIfTrue" />
        <element api="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
          <apidata name="ShouldSerializeValidationRules" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Data.Binding.ShouldSerializePath">
          <apidata name="ShouldSerializePath" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Data.Binding.ShouldSerializeSource">
          <apidata name="ShouldSerializeSource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.ValidationRules">
          <apidata name="ValidationRules" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ValidationRules" />
          <returns>
            <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Controls.ValidationRule" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <apidata name="ValidatesOnExceptions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ValidatesOnExceptions" />
          <setter name="set_ValidatesOnExceptions" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <apidata name="ValidatesOnDataErrors" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ValidatesOnDataErrors" />
          <setter name="set_ValidatesOnDataErrors" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
          <apidata name="ValidatesOnNotifyDataErrors" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ValidatesOnNotifyDataErrors" />
          <setter name="set_ValidatesOnNotifyDataErrors" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.Path">
          <apidata name="Path" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Path" />
          <setter name="set_Path" />
          <returns>
            <type api="T:System.Windows.PropertyPath" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.XPath">
          <apidata name="XPath" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_XPath" />
          <setter name="set_XPath" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.Mode">
          <apidata name="Mode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Mode" />
          <setter name="set_Mode" />
          <returns>
            <type api="T:System.Windows.Data.BindingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <apidata name="UpdateSourceTrigger" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_UpdateSourceTrigger" />
          <setter name="set_UpdateSourceTrigger" />
          <returns>
            <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
          <apidata name="NotifyOnSourceUpdated" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_NotifyOnSourceUpdated" />
          <setter name="set_NotifyOnSourceUpdated" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
          <apidata name="NotifyOnTargetUpdated" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_NotifyOnTargetUpdated" />
          <setter name="set_NotifyOnTargetUpdated" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <apidata name="NotifyOnValidationError" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_NotifyOnValidationError" />
          <setter name="set_NotifyOnValidationError" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.Converter">
          <apidata name="Converter" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Converter" />
          <setter name="set_Converter" />
          <returns>
            <type api="T:System.Windows.Data.IValueConverter" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.ConverterParameter">
          <apidata name="ConverterParameter" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ConverterParameter" />
          <setter name="set_ConverterParameter" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.ConverterCulture">
          <apidata name="ConverterCulture" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ConverterCulture" />
          <setter name="set_ConverterCulture" />
          <returns>
            <type api="T:System.Globalization.CultureInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.CultureInfoIetfLanguageTagConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Data.Binding.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.RelativeSource">
          <apidata name="RelativeSource" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RelativeSource" />
          <setter name="set_RelativeSource" />
          <returns>
            <type api="T:System.Windows.Data.RelativeSource" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.ElementName">
          <apidata name="ElementName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ElementName" />
          <setter name="set_ElementName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.IsAsync">
          <apidata name="IsAsync" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsAsync" />
          <setter name="set_IsAsync" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.AsyncState">
          <apidata name="AsyncState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_AsyncState" />
          <setter name="set_AsyncState" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <apidata name="BindsDirectlyToSource" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BindsDirectlyToSource" />
          <setter name="set_BindsDirectlyToSource" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <apidata name="UpdateSourceExceptionFilter" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_UpdateSourceExceptionFilter" />
          <setter name="set_UpdateSourceExceptionFilter" />
          <returns>
            <type api="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
          <apidata name="ShouldSerializeFallbackValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.BindingBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue">
          <apidata name="ShouldSerializeTargetNullValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.BindingBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <apidata name="ProvideValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
              <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="serviceProvider">
              <type api="T:System.IServiceProvider" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.BindingBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.BindingBase.FallbackValue">
          <apidata name="FallbackValue" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FallbackValue" />
          <setter name="set_FallbackValue" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.BindingBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.BindingBase.StringFormat">
          <apidata name="StringFormat" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_StringFormat" />
          <setter name="set_StringFormat" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.BindingBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.BindingBase.TargetNullValue">
          <apidata name="TargetNullValue" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TargetNullValue" />
          <setter name="set_TargetNullValue" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.BindingBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.BindingBase.BindingGroupName">
          <apidata name="BindingGroupName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BindingGroupName" />
          <setter name="set_BindingGroupName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.BindingBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Data.BindingBase.Delay">
          <apidata name="Delay" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Delay" />
          <setter name="set_Delay" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Data" />
            <type api="T:System.Windows.Data.BindingBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.MarkupExtensions" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.MarkupExtensions" />
        <type api="T:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.MarkupExtensions" />
        <type api="T:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension.#ctor(System.String,System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="valueIfTrue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="valueIfFalse">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.MarkupExtensions" />
        <type api="T:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension.#ctor(System.Windows.Data.RelativeSource,System.String,System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="relativeSource">
          <type api="T:System.Windows.Data.RelativeSource" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="valueIfTrue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="valueIfFalse">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.MarkupExtensions" />
        <type api="T:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension.ValueIfFalse">
      <apidata name="ValueIfFalse" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValueIfFalse" />
      <setter name="set_ValueIfFalse" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.MarkupExtensions" />
        <type api="T:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension.ValueIfTrue">
      <apidata name="ValueIfTrue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValueIfTrue" />
      <setter name="set_ValueIfTrue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.MarkupExtensions" />
        <type api="T:TalkingKeyboard.Infrastructure.MarkupExtensions.SwitchBindingExtension" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Infrastructure.Models">
      <apidata name="TalkingKeyboard.Infrastructure.Models" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Infrastructure.Models.IMultiKeyTextModel" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.Models.IMultiKeyTextModel">
      <apidata name="IMultiKeyTextModel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:TalkingKeyboard.Modules.MultiKeyBoard.Model.MultikeyTextModel" ref="true" />
      </implementors>
      <elements>
        <element api="P:TalkingKeyboard.Infrastructure.Models.IMultiKeyTextModel.CurrentMultiCharacterText" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Models" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.Models.IMultiKeyTextModel.CurrentMultiCharacterText">
      <apidata name="CurrentMultiCharacterText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentMultiCharacterText" />
      <setter name="set_CurrentMultiCharacterText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.Models" />
        <type api="T:TalkingKeyboard.Infrastructure.Models.IMultiKeyTextModel" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Infrastructure.ServiceInterfaces">
      <apidata name="TalkingKeyboard.Infrastructure.ServiceInterfaces" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IControlActivationService" />
        <element api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IPointHandler" />
        <element api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" />
        <element api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionSource" />
        <element api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService" />
        <element api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IWindowKnower" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IControlActivationService">
      <apidata name="IControlActivationService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IPointHandler" ref="true" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IWindowKnower" ref="true" />
      </implements>
      <implementors>
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService" ref="true" />
      </implementors>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.IPointHandler.ProcessPoint(System.Windows.Point)" />
        <element api="P:TalkingKeyboard.Infrastructure.ServiceInterfaces.IWindowKnower.KnownWindows" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IPointHandler">
      <apidata name="IPointHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IControlActivationService" ref="true" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService" ref="true" />
      </implementors>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.IPointHandler.ProcessPoint(System.Windows.Point)" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.IPointHandler.ProcessPoint(System.Windows.Point)">
      <apidata name="ProcessPoint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="point">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IPointHandler" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService">
      <apidata name="ISuggestionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService" ref="true" />
      </implementors>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.AddMultiCharacterText(System.String)" />
        <element api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.ClearMultiCharacterBuffer" />
        <element api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.ProvideMultiCharacterSuggestions" />
        <element api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.ProvideSuggestions" />
        <element api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.RemoveLastMultiCharacter" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.AddMultiCharacterText(System.String)">
      <apidata name="AddMultiCharacterText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.ClearMultiCharacterBuffer">
      <apidata name="ClearMultiCharacterBuffer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.ProvideMultiCharacterSuggestions">
      <apidata name="ProvideMultiCharacterSuggestions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.ProvideSuggestions">
      <apidata name="ProvideSuggestions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.RemoveLastMultiCharacter">
      <apidata name="RemoveLastMultiCharacter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionSource">
      <apidata name="ISuggestionSource" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource" ref="true" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.PresageSuggestionSource" ref="true" />
      </implementors>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionSource.GetSuggestions(System.Object)" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionSource.GetSuggestions(System.Object)">
      <apidata name="GetSuggestions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="basedOn" optional="true">
          <type api="T:System.Object" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionSource" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService">
      <apidata name="ITextToSpeechService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService" ref="true" />
      </implementors>
      <elements>
        <element api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService.Say(System.String)" />
        <element api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService.SayCurrentText" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService.Say(System.String)">
      <apidata name="Say" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService.SayCurrentText">
      <apidata name="SayCurrentText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IWindowKnower">
      <apidata name="IWindowKnower" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IControlActivationService" ref="true" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService" ref="true" />
      </implementors>
      <elements>
        <element api="P:TalkingKeyboard.Infrastructure.ServiceInterfaces.IWindowKnower.KnownWindows" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Infrastructure.ServiceInterfaces.IWindowKnower.KnownWindows">
      <apidata name="KnownWindows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_KnownWindows" />
      <setter name="set_KnownWindows" />
      <returns>
        <type api="T:System.Collections.Concurrent.ConcurrentBag`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Window" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Infrastructure.ServiceInterfaces" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IWindowKnower" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor">
      <apidata name="TalkingKeyboard.Modules.ByGazeTimePointProcessor" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.ByGazeTimePointProcessorModule" />
        <element api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.ByGazeTimePointProcessorModule">
      <apidata name="ByGazeTimePointProcessorModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Prism.Modularity.IModule" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.ByGazeTimePointProcessorModule.#ctor(Microsoft.Practices.Unity.IUnityContainer)" />
        <element api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.ByGazeTimePointProcessorModule.Initialize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.ByGazeTimePointProcessorModule.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="unityContainer">
          <type api="T:Microsoft.Practices.Unity.IUnityContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.ByGazeTimePointProcessorModule" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.ByGazeTimePointProcessorModule.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Prism.Modularity.IModule.Initialize">
          <type api="T:Prism.Modularity.IModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.ByGazeTimePointProcessorModule" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService">
      <apidata name="GazeSelectionService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IControlActivationService" ref="true" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IPointHandler" ref="true" />
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IWindowKnower" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService.#ctor(Prism.Events.IEventAggregator)" />
        <element api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService.ProcessPoint(System.Windows.Point)" />
        <element api="P:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService.KnownWindows" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService.#ctor(Prism.Events.IEventAggregator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="eventAggregator">
          <type api="T:Prism.Events.IEventAggregator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService.KnownWindows">
      <apidata name="KnownWindows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_KnownWindows" />
      <setter name="set_KnownWindows" />
      <returns>
        <type api="T:System.Collections.Concurrent.ConcurrentBag`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Window" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:TalkingKeyboard.Infrastructure.ServiceInterfaces.IWindowKnower.KnownWindows">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IWindowKnower" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService.ProcessPoint(System.Windows.Point)">
      <apidata name="ProcessPoint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="p">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.IPointHandler.ProcessPoint(System.Windows.Point)">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.IPointHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.GazeSelectionService" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters">
      <apidata name="TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingFilter" />
        <element api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingLastNpointsWithinTimeSpanFilter" />
        <element api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1" />
        <element api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.TimeSpanWithMinimumSelectionsDuringTimeFrameSelectionFilter" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingFilter">
      <apidata name="AveragingFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingLastNpointsWithinTimeSpanFilter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingFilter.Filter(TalkingKeyboard.Infrastructure.DataContainers.TimedPoints)" />
        <element api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingFilter.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingFilter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingFilter" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingFilter.Filter(TalkingKeyboard.Infrastructure.DataContainers.TimedPoints)">
      <apidata name="Filter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timedPoints">
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Windows.Point" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingFilter" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingLastNpointsWithinTimeSpanFilter">
      <apidata name="AveragingLastNpointsWithinTimeSpanFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingFilter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingLastNpointsWithinTimeSpanFilter.#ctor(System.Int32,System.TimeSpan)" />
        <element api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingLastNpointsWithinTimeSpanFilter.Filter(TalkingKeyboard.Infrastructure.DataContainers.TimedPoints)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingLastNpointsWithinTimeSpanFilter.#ctor(System.Int32,System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="numberOfPoints">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="timeSpan">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingLastNpointsWithinTimeSpanFilter" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingLastNpointsWithinTimeSpanFilter.Filter(TalkingKeyboard.Infrastructure.DataContainers.TimedPoints)">
      <apidata name="Filter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingFilter.Filter(TalkingKeyboard.Infrastructure.DataContainers.TimedPoints)">
          <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timedPoints">
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedPoints" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Windows.Point" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.AveragingLastNpointsWithinTimeSpanFilter" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1">
      <apidata name="SelectionFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.TimeSpanWithMinimumSelectionsDuringTimeFrameSelectionFilter" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1.#ctor(System.Windows.Window)" />
        <element api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1.SelectAndUpdate(`0)" />
        <element api="P:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1.Window" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1.#ctor(System.Windows.Window)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="window">
          <type api="T:System.Windows.Window" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1.SelectAndUpdate(`0)">
      <apidata name="SelectAndUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="pointCollection">
          <template name="T" index="0" api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1.Window">
      <apidata name="Window" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Window" />
      <setter name="set_Window" />
      <returns>
        <type api="T:System.Windows.Window" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.TimeSpanWithMinimumSelectionsDuringTimeFrameSelectionFilter">
      <apidata name="TimeSpanWithMinimumSelectionsDuringTimeFrameSelectionFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1" ref="true">
            <specialization>
              <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.TimeSpanWithMinimumSelectionsDuringTimeFrameSelectionFilter.#ctor(System.Windows.Window,System.TimeSpan,System.Int32)" />
        <element api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.TimeSpanWithMinimumSelectionsDuringTimeFrameSelectionFilter.SelectAndUpdate(TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint)" />
        <element api="P:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1.Window" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.TimeSpanWithMinimumSelectionsDuringTimeFrameSelectionFilter.#ctor(System.Windows.Window,System.TimeSpan,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="window">
          <type api="T:System.Windows.Window" ref="true" />
        </parameter>
        <parameter name="timeFrame">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="pointsRequired">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.TimeSpanWithMinimumSelectionsDuringTimeFrameSelectionFilter" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.TimeSpanWithMinimumSelectionsDuringTimeFrameSelectionFilter.SelectAndUpdate(TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint)">
      <apidata name="SelectAndUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1.SelectAndUpdate(`0)">
          <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.SelectionFilter`1" ref="true">
            <specialization>
              <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="c">
          <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:TalkingKeyboard.Infrastructure.DataContainers.TimedControlsWithPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.ByGazeTimePointProcessor" module="TalkingKeyboard.Modules.ByGazeTimePointProcessor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters" />
        <type api="T:TalkingKeyboard.Modules.ByGazeTimePointProcessor.Filters.TimeSpanWithMinimumSelectionsDuringTimeFrameSelectionFilter" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.CentralTextModule">
      <apidata name="TalkingKeyboard.Modules.CentralTextModule" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.CentralTextModule.TextHolderModule" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.CentralTextModule.TextHolderModule">
      <apidata name="TextHolderModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Prism.Modularity.IModule" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.CentralTextModule.TextHolderModule.#ctor(Prism.Regions.IRegionManager,Microsoft.Practices.Unity.IUnityContainer)" />
        <element api="M:TalkingKeyboard.Modules.CentralTextModule.TextHolderModule.Initialize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.TextHolder" module="TalkingKeyboard.Modules.TextHolder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CentralTextModule" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.CentralTextModule.TextHolderModule.#ctor(Prism.Regions.IRegionManager,Microsoft.Practices.Unity.IUnityContainer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="regionManager">
          <type api="T:Prism.Regions.IRegionManager" ref="true" />
        </parameter>
        <parameter name="unityContainer">
          <type api="T:Microsoft.Practices.Unity.IUnityContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.TextHolder" module="TalkingKeyboard.Modules.TextHolder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CentralTextModule" />
        <type api="T:TalkingKeyboard.Modules.CentralTextModule.TextHolderModule" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.CentralTextModule.TextHolderModule.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Prism.Modularity.IModule.Initialize">
          <type api="T:Prism.Modularity.IModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.TextHolder" module="TalkingKeyboard.Modules.TextHolder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CentralTextModule" />
        <type api="T:TalkingKeyboard.Modules.CentralTextModule.TextHolderModule" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.CentralTextModule.ViewModels">
      <apidata name="TalkingKeyboard.Modules.CentralTextModule.ViewModels" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel">
      <apidata name="TextViewModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:TalkingKeyboard.Infrastructure.Controls.ITextModel" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel.#ctor(Prism.Events.IEventAggregator)" />
        <element api="P:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel.AppendTextCommand" />
        <element api="P:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel.CurrentText" />
        <element api="P:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel.RemoveLastCharacterCommand" />
        <element api="P:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel.RemoveLastWordCommand" />
        <element api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)">
          <apidata name="SetProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="storage">
              <referenceTo>
                <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)" />
              </referenceTo>
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)" />
            </parameter>
            <parameter name="propertyName" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Mvvm.BindableBase.OnPropertyChanged(System.String)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="propertyName" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Mvvm.BindableBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="propertyExpression">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="E:Prism.Mvvm.BindableBase.PropertyChanged">
          <apidata name="PropertyChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PropertyChanged" />
          <remover name="remove_PropertyChanged" />
          <eventhandler>
            <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
              <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.TextHolder" module="TalkingKeyboard.Modules.TextHolder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CentralTextModule.ViewModels" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel.#ctor(Prism.Events.IEventAggregator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="eventAggregator">
          <type api="T:Prism.Events.IEventAggregator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.TextHolder" module="TalkingKeyboard.Modules.TextHolder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CentralTextModule.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel.AppendTextCommand">
      <apidata name="AppendTextCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AppendTextCommand" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.TextHolder" module="TalkingKeyboard.Modules.TextHolder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CentralTextModule.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel.CurrentText">
      <apidata name="CurrentText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentText" />
      <setter name="set_CurrentText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:TalkingKeyboard.Infrastructure.Controls.ITextModel.CurrentText">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ITextModel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.TextHolder" module="TalkingKeyboard.Modules.TextHolder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CentralTextModule.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel.RemoveLastCharacterCommand">
      <apidata name="RemoveLastCharacterCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RemoveLastCharacterCommand" />
      <setter name="set_RemoveLastCharacterCommand" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.TextHolder" module="TalkingKeyboard.Modules.TextHolder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CentralTextModule.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel.RemoveLastWordCommand">
      <apidata name="RemoveLastWordCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RemoveLastWordCommand" />
      <setter name="set_RemoveLastWordCommand" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.TextHolder" module="TalkingKeyboard.Modules.TextHolder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CentralTextModule.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.CentralTextModule.ViewModels.TextViewModel" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.CentralTextModule.Views">
      <apidata name="TalkingKeyboard.Modules.CentralTextModule.Views" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.CentralTextModule.Views.TextView" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.CentralTextModule.Views.TextView">
      <apidata name="TextView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.CentralTextModule.Views.TextView.#ctor" />
        <element api="M:TalkingKeyboard.Modules.CentralTextModule.Views.TextView.InitializeComponent" />
        <element api="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnCreateAutomationPeer">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.ShouldSerializeContent">
          <apidata name="ShouldSerializeContent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
          <apidata name="AddChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddText(System.String)">
          <apidata name="AddText" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="text">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
          <apidata name="OnContentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
          <apidata name="OnContentTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
            <parameter name="newContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
          <apidata name="OnContentTemplateSelectorChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
            <parameter name="newContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)">
          <apidata name="OnContentStringFormatChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="newContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.LogicalChildren">
          <apidata name="LogicalChildren" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.FrameworkElement.LogicalChildren">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_LogicalChildren" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.HasContent">
          <apidata name="HasContent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_HasContent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplate">
          <apidata name="ContentTemplate" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplate" />
          <setter name="set_ContentTemplate" />
          <returns>
            <type api="T:System.Windows.DataTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplateSelector">
          <apidata name="ContentTemplateSelector" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplateSelector" />
          <setter name="set_ContentTemplateSelector" />
          <returns>
            <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentStringFormat">
          <apidata name="ContentStringFormat" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentStringFormat" />
          <setter name="set_ContentStringFormat" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
          <apidata name="OnTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
            <parameter name="newTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="constraint">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="arrangeBounds">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:System.Windows.Media.FontFamily" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.FontSizeConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:System.Windows.FontStretch" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:System.Windows.FontStyle" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:System.Windows.FontWeight" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HandlesScrolling">
          <apidata name="HandlesScrolling" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HandlesScrolling" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.PreviewMouseDoubleClick">
          <apidata name="PreviewMouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDoubleClick" />
          <remover name="remove_PreviewMouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.MouseDoubleClick">
          <apidata name="MouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDoubleClick" />
          <remover name="remove_MouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
          <apidata name="ShouldSerializeStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <apidata name="OnStyleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
            <parameter name="newStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <apidata name="ParentLayoutInvalidated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
            <parameter name="isControllable">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
          <apidata name="ShouldSerializeTriggers" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <apidata name="GetVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeResources">
          <apidata name="ShouldSerializeResources" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="childName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <apidata name="FindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <apidata name="TryFindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetResourceReference" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <apidata name="OnVisualParentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="oldParent">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding">
              <type api="T:System.Windows.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="path">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetUIParentCore">
          <apidata name="GetUIParentCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetUIParentCore">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="targetRectangle">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <apidata name="MeasureCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
          <apidata name="ArrangeCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <apidata name="OnRenderSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="sizeInfo">
              <type api="T:System.Windows.SizeChangedInfo" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <apidata name="GetLayoutClip" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="layoutSlotSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <apidata name="MoveFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="request">
              <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <apidata name="PredictFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="direction">
              <type api="T:System.Windows.Input.FocusNavigationDirection" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginInit">
          <apidata name="BeginInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.EndInit">
          <apidata name="EndInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <apidata name="OnInitialized" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <apidata name="RegisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="scopedElement">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
          <apidata name="UnregisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UpdateDefaultStyle">
          <apidata name="UpdateDefaultStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <apidata name="AddLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <apidata name="RemoveLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <apidata name="OverridesDefaultStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OverridesDefaultStyle" />
          <setter name="set_OverridesDefaultStyle" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:System.Windows.TriggerCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.TemplatedParent">
          <apidata name="TemplatedParent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TemplatedParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <apidata name="VisualChildrenCount" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.Media.Visual.VisualChildrenCount">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_VisualChildrenCount" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:System.Windows.ResourceDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <apidata name="InheritanceBehavior" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InheritanceBehavior" />
          <setter name="set_InheritanceBehavior" />
          <returns>
            <type api="T:System.Windows.InheritanceBehavior" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.BindingGroup">
          <apidata name="BindingGroup" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BindingGroup" />
          <setter name="set_BindingGroup" />
          <returns>
            <type api="T:System.Windows.Data.BindingGroup" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.Windows.Markup.XmlLanguage" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Windows.IFrameworkInputElement.Name">
              <type api="T:System.Windows.IFrameworkInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InputScope">
          <apidata name="InputScope" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InputScope" />
          <setter name="set_InputScope" />
          <returns>
            <type api="T:System.Windows.Input.InputScope" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.LayoutTransform">
          <apidata name="LayoutTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_LayoutTransform" />
          <setter name="set_LayoutTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:System.Windows.FlowDirection" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <apidata name="FocusVisualStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FocusVisualStyle" />
          <setter name="set_FocusVisualStyle" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Cursor">
          <apidata name="Cursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Cursor" />
          <setter name="set_Cursor" />
          <returns>
            <type api="T:System.Windows.Input.Cursor" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ForceCursor">
          <apidata name="ForceCursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ForceCursor" />
          <setter name="set_ForceCursor" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsInitialized">
          <apidata name="IsInitialized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInitialized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsLoaded">
          <apidata name="IsLoaded" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsLoaded" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ToolTip">
          <apidata name="ToolTip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ToolTip" />
          <setter name="set_ToolTip" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ContextMenu">
          <apidata name="ContextMenu" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContextMenu" />
          <setter name="set_ContextMenu" />
          <returns>
            <type api="T:System.Windows.Controls.ContextMenu" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.TargetUpdated">
          <apidata name="TargetUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TargetUpdated" />
          <remover name="remove_TargetUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SourceUpdated">
          <apidata name="SourceUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SourceUpdated" />
          <remover name="remove_SourceUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <apidata name="RequestBringIntoView" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_RequestBringIntoView" />
          <remover name="remove_RequestBringIntoView" />
          <eventhandler>
            <type api="T:System.Windows.RequestBringIntoViewEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RequestBringIntoViewEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:System.Windows.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Initialized">
          <apidata name="Initialized" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Initialized" />
          <remover name="remove_Initialized" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipOpening">
          <apidata name="ToolTipOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipOpening" />
          <remover name="remove_ToolTipOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipClosing">
          <apidata name="ToolTipClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipClosing" />
          <remover name="remove_ToolTipClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <apidata name="ContextMenuOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuOpening" />
          <remover name="remove_ContextMenuOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <apidata name="ContextMenuClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuClosing" />
          <remover name="remove_ContextMenuClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeInputBindings">
          <apidata name="ShouldSerializeInputBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeCommandBindings">
          <apidata name="ShouldSerializeCommandBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)">
          <apidata name="RaiseEvent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
            <parameter name="handledEventsToo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
          <apidata name="AddToEventRoute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="route">
              <type api="T:System.Windows.EventRoute" ref="true" />
            </parameter>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnPreviewMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnPreviewMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnGotMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnLostMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
          <apidata name="OnQueryCursor" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnPreviewStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnPreviewStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnGotStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnLostStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnPreviewTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnPreviewQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnPreviewGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnGotTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnLostTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateVisual">
          <apidata name="InvalidateVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)">
          <apidata name="OnChildDesiredSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)">
          <apidata name="OnRender" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="drawingContext">
              <type api="T:System.Windows.Media.DrawingContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)">
          <apidata name="TranslatePoint" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
            <parameter name="relativeTo">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)">
          <apidata name="InputHitTest" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.IInputElement" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureMouse">
          <apidata name="CaptureMouse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureMouse">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture">
          <apidata name="ReleaseMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureStylus">
          <apidata name="CaptureStylus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureStylus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseStylusCapture">
          <apidata name="ReleaseStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Focus">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.Focus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <apidata name="OnAccessKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.AccessKeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.PointHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.HitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.GeometryHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeometryHitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <apidata name="OnManipulationBoundaryFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)">
          <apidata name="CaptureTouch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)">
          <apidata name="ReleaseTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseAllTouchCaptures">
          <apidata name="ReleaseAllTouchCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasAnimatedProperties">
          <apidata name="HasAnimatedProperties" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_HasAnimatedProperties" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.InputBindings">
          <apidata name="InputBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InputBindings" />
          <returns>
            <type api="T:System.Windows.Input.InputBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.CommandBindings">
          <apidata name="CommandBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_CommandBindings" />
          <returns>
            <type api="T:System.Windows.Input.CommandBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.StylusPlugIns">
          <apidata name="StylusPlugIns" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_StylusPlugIns" />
          <returns>
            <type api="T:System.Windows.Input.StylusPlugIns.StylusPlugInCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMeasureValid">
          <apidata name="IsMeasureValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMeasureValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsArrangeValid">
          <apidata name="IsArrangeValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsArrangeValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderSize" />
          <setter name="set_RenderSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseDirectlyOver">
          <apidata name="IsMouseDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseOver">
          <apidata name="IsMouseOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusOver">
          <apidata name="IsStylusOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocusWithin">
          <apidata name="IsKeyboardFocusWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocusWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocusWithin">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptured">
          <apidata name="IsMouseCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptureWithin">
          <apidata name="IsMouseCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusDirectlyOver">
          <apidata name="IsStylusDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptured">
          <apidata name="IsStylusCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptureWithin">
          <apidata name="IsStylusCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocused">
          <apidata name="IsKeyboardFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocused">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsInputMethodEnabled">
          <apidata name="IsInputMethodEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInputMethodEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.OpacityMask">
          <apidata name="OpacityMask" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OpacityMask" />
          <setter name="set_OpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffect">
          <apidata name="BitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffect" />
          <setter name="set_BitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.Effect">
          <apidata name="Effect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Effect" />
          <setter name="set_Effect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffectInput">
          <apidata name="BitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffectInput" />
          <setter name="set_BitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Uid">
          <apidata name="Uid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Uid" />
          <setter name="set_Uid" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:System.Windows.Visibility" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.ClipToBounds">
          <apidata name="ClipToBounds" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ClipToBounds" />
          <setter name="set_ClipToBounds" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.SnapsToDevicePixels">
          <apidata name="SnapsToDevicePixels" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SnapsToDevicePixels" />
          <setter name="set_SnapsToDevicePixels" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasEffectiveKeyboardFocus">
          <apidata name="HasEffectiveKeyboardFocus" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HasEffectiveKeyboardFocus" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsFocused">
          <apidata name="IsFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsEnabled">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabledCore">
          <apidata name="IsEnabledCore" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsEnabledCore" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsVisible">
          <apidata name="IsVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Focusable">
          <apidata name="Focusable" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Focusable" />
          <setter name="set_Focusable" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.Focusable">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.PersistId">
          <apidata name="PersistId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_PersistId" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.IsManipulationEnabled">
          <apidata name="IsManipulationEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsManipulationEnabled" />
          <setter name="set_IsManipulationEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesOver">
          <apidata name="AreAnyTouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver">
          <apidata name="AreAnyTouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin">
          <apidata name="AreAnyTouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCapturedWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCaptured">
          <apidata name="AreAnyTouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCaptured">
          <apidata name="TouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCaptured" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCapturedWithin">
          <apidata name="TouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCapturedWithin" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesOver">
          <apidata name="TouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesDirectlyOver">
          <apidata name="TouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesDirectlyOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseDown">
          <apidata name="PreviewMouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDown" />
          <remover name="remove_PreviewMouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseDown">
          <apidata name="MouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDown" />
          <remover name="remove_MouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseUp">
          <apidata name="PreviewMouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseUp" />
          <remover name="remove_PreviewMouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseUp">
          <apidata name="MouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseUp" />
          <remover name="remove_MouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonDown">
          <apidata name="PreviewMouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonDown" />
          <remover name="remove_PreviewMouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown">
          <apidata name="MouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonDown" />
          <remover name="remove_MouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonUp">
          <apidata name="PreviewMouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonUp" />
          <remover name="remove_PreviewMouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp">
          <apidata name="MouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonUp" />
          <remover name="remove_MouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonDown">
          <apidata name="PreviewMouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonDown" />
          <remover name="remove_PreviewMouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonDown">
          <apidata name="MouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonDown" />
          <remover name="remove_MouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonUp">
          <apidata name="PreviewMouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonUp" />
          <remover name="remove_PreviewMouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonUp">
          <apidata name="MouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonUp" />
          <remover name="remove_MouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseMove">
          <apidata name="PreviewMouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseMove" />
          <remover name="remove_PreviewMouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseMove">
          <apidata name="MouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseMove" />
          <remover name="remove_MouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseWheel">
          <apidata name="PreviewMouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseWheel" />
          <remover name="remove_PreviewMouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseWheel">
          <apidata name="MouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseWheel" />
          <remover name="remove_MouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseEnter">
          <apidata name="MouseEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseEnter" />
          <remover name="remove_MouseEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeave">
          <apidata name="MouseLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeave" />
          <remover name="remove_MouseLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotMouseCapture">
          <apidata name="GotMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotMouseCapture" />
          <remover name="remove_GotMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostMouseCapture">
          <apidata name="LostMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostMouseCapture" />
          <remover name="remove_LostMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryCursor">
          <apidata name="QueryCursor" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryCursor" />
          <remover name="remove_QueryCursor" />
          <eventhandler>
            <type api="T:System.Windows.Input.QueryCursorEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusDown">
          <apidata name="PreviewStylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusDown" />
          <remover name="remove_PreviewStylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusDown">
          <apidata name="StylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusDown" />
          <remover name="remove_StylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusUp">
          <apidata name="PreviewStylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusUp" />
          <remover name="remove_PreviewStylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusUp">
          <apidata name="StylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusUp" />
          <remover name="remove_StylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusMove">
          <apidata name="PreviewStylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusMove" />
          <remover name="remove_PreviewStylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusMove">
          <apidata name="StylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusMove" />
          <remover name="remove_StylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInAirMove">
          <apidata name="PreviewStylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInAirMove" />
          <remover name="remove_PreviewStylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInAirMove">
          <apidata name="StylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInAirMove" />
          <remover name="remove_StylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusEnter">
          <apidata name="StylusEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusEnter" />
          <remover name="remove_StylusEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusLeave">
          <apidata name="StylusLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusLeave" />
          <remover name="remove_StylusLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInRange">
          <apidata name="PreviewStylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInRange" />
          <remover name="remove_PreviewStylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInRange">
          <apidata name="StylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInRange" />
          <remover name="remove_StylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusOutOfRange">
          <apidata name="PreviewStylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusOutOfRange" />
          <remover name="remove_PreviewStylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusOutOfRange">
          <apidata name="StylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusOutOfRange" />
          <remover name="remove_StylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusSystemGesture">
          <apidata name="PreviewStylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusSystemGesture" />
          <remover name="remove_PreviewStylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusSystemGesture">
          <apidata name="StylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusSystemGesture" />
          <remover name="remove_StylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotStylusCapture">
          <apidata name="GotStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotStylusCapture" />
          <remover name="remove_GotStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostStylusCapture">
          <apidata name="LostStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostStylusCapture" />
          <remover name="remove_LostStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonDown">
          <apidata name="StylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonDown" />
          <remover name="remove_StylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonUp">
          <apidata name="StylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonUp" />
          <remover name="remove_StylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonDown">
          <apidata name="PreviewStylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonDown" />
          <remover name="remove_PreviewStylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonUp">
          <apidata name="PreviewStylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonUp" />
          <remover name="remove_PreviewStylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyDown">
          <apidata name="PreviewKeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyDown" />
          <remover name="remove_PreviewKeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyUp">
          <apidata name="PreviewKeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyUp" />
          <remover name="remove_PreviewKeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGotKeyboardFocus">
          <apidata name="PreviewGotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGotKeyboardFocus" />
          <remover name="remove_PreviewGotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewGotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotKeyboardFocus">
          <apidata name="GotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotKeyboardFocus" />
          <remover name="remove_GotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewLostKeyboardFocus">
          <apidata name="PreviewLostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewLostKeyboardFocus" />
          <remover name="remove_PreviewLostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewLostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostKeyboardFocus">
          <apidata name="LostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostKeyboardFocus" />
          <remover name="remove_LostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTextInput">
          <apidata name="PreviewTextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTextInput" />
          <remover name="remove_PreviewTextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewTextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TextInput">
          <apidata name="TextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_TextInput" />
          <remover name="remove_TextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.TextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewQueryContinueDrag">
          <apidata name="PreviewQueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewQueryContinueDrag" />
          <remover name="remove_PreviewQueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryContinueDrag">
          <apidata name="QueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryContinueDrag" />
          <remover name="remove_QueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGiveFeedback">
          <apidata name="PreviewGiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGiveFeedback" />
          <remover name="remove_PreviewGiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GiveFeedback">
          <apidata name="GiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GiveFeedback" />
          <remover name="remove_GiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragEnter">
          <apidata name="PreviewDragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragEnter" />
          <remover name="remove_PreviewDragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragOver">
          <apidata name="PreviewDragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragOver" />
          <remover name="remove_PreviewDragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragLeave">
          <apidata name="PreviewDragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragLeave" />
          <remover name="remove_PreviewDragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDrop">
          <apidata name="PreviewDrop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDrop" />
          <remover name="remove_PreviewDrop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchDown">
          <apidata name="PreviewTouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchDown" />
          <remover name="remove_PreviewTouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchDown">
          <apidata name="TouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchDown" />
          <remover name="remove_TouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchMove">
          <apidata name="PreviewTouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchMove" />
          <remover name="remove_PreviewTouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchMove">
          <apidata name="TouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchMove" />
          <remover name="remove_TouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchUp">
          <apidata name="PreviewTouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchUp" />
          <remover name="remove_PreviewTouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchUp">
          <apidata name="TouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchUp" />
          <remover name="remove_TouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotTouchCapture">
          <apidata name="GotTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotTouchCapture" />
          <remover name="remove_GotTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostTouchCapture">
          <apidata name="LostTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostTouchCapture" />
          <remover name="remove_LostTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchEnter">
          <apidata name="TouchEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchEnter" />
          <remover name="remove_TouchEnter" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchLeave">
          <apidata name="TouchLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchLeave" />
          <remover name="remove_TouchLeave" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseDirectlyOverChanged">
          <apidata name="IsMouseDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseDirectlyOverChanged" />
          <remover name="remove_IsMouseDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged">
          <apidata name="IsKeyboardFocusWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusWithinChanged" />
          <remover name="remove_IsKeyboardFocusWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCapturedChanged">
          <apidata name="IsMouseCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCapturedChanged" />
          <remover name="remove_IsMouseCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCaptureWithinChanged">
          <apidata name="IsMouseCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCaptureWithinChanged" />
          <remover name="remove_IsMouseCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusDirectlyOverChanged">
          <apidata name="IsStylusDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusDirectlyOverChanged" />
          <remover name="remove_IsStylusDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCapturedChanged">
          <apidata name="IsStylusCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCapturedChanged" />
          <remover name="remove_IsStylusCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCaptureWithinChanged">
          <apidata name="IsStylusCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCaptureWithinChanged" />
          <remover name="remove_IsStylusCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusedChanged">
          <apidata name="IsKeyboardFocusedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusedChanged" />
          <remover name="remove_IsKeyboardFocusedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsHitTestVisibleChanged">
          <apidata name="IsHitTestVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsHitTestVisibleChanged" />
          <remover name="remove_IsHitTestVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsVisibleChanged">
          <apidata name="IsVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsVisibleChanged" />
          <remover name="remove_IsVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.FocusableChanged">
          <apidata name="FocusableChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_FocusableChanged" />
          <remover name="remove_FocusableChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationBoundaryFeedback">
          <apidata name="ManipulationBoundaryFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationBoundaryFeedback" />
          <remover name="remove_ManipulationBoundaryFeedback" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <apidata name="AddVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <apidata name="RemoveVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <apidata name="OnVisualChildrenChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="visualAdded">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
            <parameter name="visualRemoved">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)">
          <apidata name="IsAncestorOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)">
          <apidata name="IsDescendantOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
          <apidata name="FindCommonVisualAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="otherVisual">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Media3D.Visual3D" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Media3D.GeneralTransform2DTo3D" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <apidata name="TransformToDescendant" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="visual">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
          <apidata name="PointToScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
          <apidata name="PointFromScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualParent">
          <apidata name="VisualParent" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_VisualParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTransform">
          <apidata name="VisualTransform" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTransform" />
          <setter name="set_VisualTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEffect">
          <apidata name="VisualEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEffect" />
          <setter name="set_VisualEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffect">
          <apidata name="VisualBitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffect" />
          <setter name="set_VisualBitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffectInput">
          <apidata name="VisualBitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffectInput" />
          <setter name="set_VisualBitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualCacheMode">
          <apidata name="VisualCacheMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualCacheMode" />
          <setter name="set_VisualCacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <apidata name="VisualScrollableAreaClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualScrollableAreaClip" />
          <setter name="set_VisualScrollableAreaClip" />
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Windows.Rect" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClip">
          <apidata name="VisualClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClip" />
          <setter name="set_VisualClip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOffset">
          <apidata name="VisualOffset" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOffset" />
          <setter name="set_VisualOffset" />
          <returns>
            <type api="T:System.Windows.Vector" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacity">
          <apidata name="VisualOpacity" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacity" />
          <setter name="set_VisualOpacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEdgeMode">
          <apidata name="VisualEdgeMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEdgeMode" />
          <setter name="set_VisualEdgeMode" />
          <returns>
            <type api="T:System.Windows.Media.EdgeMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapScalingMode">
          <apidata name="VisualBitmapScalingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapScalingMode" />
          <setter name="set_VisualBitmapScalingMode" />
          <returns>
            <type api="T:System.Windows.Media.BitmapScalingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClearTypeHint">
          <apidata name="VisualClearTypeHint" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClearTypeHint" />
          <setter name="set_VisualClearTypeHint" />
          <returns>
            <type api="T:System.Windows.Media.ClearTypeHint" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextRenderingMode">
          <apidata name="VisualTextRenderingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextRenderingMode" />
          <setter name="set_VisualTextRenderingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextRenderingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextHintingMode">
          <apidata name="VisualTextHintingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextHintingMode" />
          <setter name="set_VisualTextHintingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextHintingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacityMask">
          <apidata name="VisualOpacityMask" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacityMask" />
          <setter name="set_VisualOpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <apidata name="VisualXSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualXSnappingGuidelines" />
          <setter name="set_VisualXSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <apidata name="VisualYSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualYSnappingGuidelines" />
          <setter name="set_VisualYSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetCurrentValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <apidata name="CoerceValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <apidata name="InvalidateProperty" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <apidata name="ShouldSerializeProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <apidata name="GetLocalValueEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Windows.LocalValueEnumerator" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType">
          <apidata name="DependencyObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DependencyObjectType" />
          <returns>
            <type api="T:System.Windows.DependencyObjectType" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.IsSealed">
          <apidata name="IsSealed" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsSealed" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <apidata name="CheckAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <apidata name="VerifyAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:System.Windows.Threading.Dispatcher" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.TextHolder" module="TalkingKeyboard.Modules.TextHolder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CentralTextModule.Views" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.CentralTextModule.Views.TextView.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.TextHolder" module="TalkingKeyboard.Modules.TextHolder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CentralTextModule.Views" />
        <type api="T:TalkingKeyboard.Modules.CentralTextModule.Views.TextView" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.CentralTextModule.Views.TextView.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.TextHolder" module="TalkingKeyboard.Modules.TextHolder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CentralTextModule.Views" />
        <type api="T:TalkingKeyboard.Modules.CentralTextModule.Views.TextView" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.CoordinateProvider">
      <apidata name="TalkingKeyboard.Modules.CoordinateProvider" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.CoordinateProvider.CoordinateProviderModule" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.CoordinateProvider.CoordinateProviderModule">
      <apidata name="CoordinateProviderModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Prism.Modularity.IModule" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.CoordinateProvider.CoordinateProviderModule.#ctor(Microsoft.Practices.Unity.IUnityContainer)" />
        <element api="M:TalkingKeyboard.Modules.CoordinateProvider.CoordinateProviderModule.Initialize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.CoordinateProvider" module="TalkingKeyboard.Modules.CoordinateProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CoordinateProvider" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.CoordinateProvider.CoordinateProviderModule.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="unityContainer">
          <type api="T:Microsoft.Practices.Unity.IUnityContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.CoordinateProvider" module="TalkingKeyboard.Modules.CoordinateProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CoordinateProvider" />
        <type api="T:TalkingKeyboard.Modules.CoordinateProvider.CoordinateProviderModule" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.CoordinateProvider.CoordinateProviderModule.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Prism.Modularity.IModule.Initialize">
          <type api="T:Prism.Modularity.IModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.CoordinateProvider" module="TalkingKeyboard.Modules.CoordinateProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CoordinateProvider" />
        <type api="T:TalkingKeyboard.Modules.CoordinateProvider.CoordinateProviderModule" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.CoordinateProvider.Services">
      <apidata name="TalkingKeyboard.Modules.CoordinateProvider.Services" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService">
      <apidata name="EyeXGazeCoordinateService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService.#ctor(Prism.Events.IEventAggregator)" />
        <element api="M:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService.Finalize" />
        <element api="M:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService.Dispose" />
        <element api="M:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService.Dispose(System.Boolean)" />
        <element api="P:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService.EyeXHost" />
        <element api="P:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService.GazePointDataStream" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.CoordinateProvider" module="TalkingKeyboard.Modules.CoordinateProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CoordinateProvider.Services" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService.#ctor(Prism.Events.IEventAggregator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="eventAggregator">
          <type api="T:Prism.Events.IEventAggregator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.CoordinateProvider" module="TalkingKeyboard.Modules.CoordinateProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CoordinateProvider.Services" />
        <type api="T:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.CoordinateProvider" module="TalkingKeyboard.Modules.CoordinateProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CoordinateProvider.Services" />
        <type api="T:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.CoordinateProvider" module="TalkingKeyboard.Modules.CoordinateProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CoordinateProvider.Services" />
        <type api="T:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService.EyeXHost">
      <apidata name="EyeXHost" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EyeXHost" />
      <setter name="set_EyeXHost" />
      <returns>
        <type api="T:EyeXFramework.EyeXHost" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.CoordinateProvider" module="TalkingKeyboard.Modules.CoordinateProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CoordinateProvider.Services" />
        <type api="T:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.CoordinateProvider" module="TalkingKeyboard.Modules.CoordinateProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CoordinateProvider.Services" />
        <type api="T:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService.GazePointDataStream">
      <apidata name="GazePointDataStream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GazePointDataStream" />
      <setter name="set_GazePointDataStream" />
      <returns>
        <type api="T:EyeXFramework.GazePointDataStream" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.CoordinateProvider" module="TalkingKeyboard.Modules.CoordinateProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.CoordinateProvider.Services" />
        <type api="T:TalkingKeyboard.Modules.CoordinateProvider.Services.EyeXGazeCoordinateService" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.MicrosoftTextToSpeech">
      <apidata name="TalkingKeyboard.Modules.MicrosoftTextToSpeech" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.MicrosoftTextToSpeechModule" />
        <element api="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.MicrosoftTextToSpeechModule">
      <apidata name="MicrosoftTextToSpeechModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Prism.Modularity.IModule" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.MicrosoftTextToSpeechModule.#ctor(Microsoft.Practices.Unity.IUnityContainer)" />
        <element api="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.MicrosoftTextToSpeechModule.Initialize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MicrosoftTextToSpeech" module="TalkingKeyboard.Modules.MicrosoftTextToSpeech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MicrosoftTextToSpeech" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.MicrosoftTextToSpeechModule.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="unityContainer">
          <type api="T:Microsoft.Practices.Unity.IUnityContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MicrosoftTextToSpeech" module="TalkingKeyboard.Modules.MicrosoftTextToSpeech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MicrosoftTextToSpeech" />
        <type api="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.MicrosoftTextToSpeechModule" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.MicrosoftTextToSpeechModule.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Prism.Modularity.IModule.Initialize">
          <type api="T:Prism.Modularity.IModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MicrosoftTextToSpeech" module="TalkingKeyboard.Modules.MicrosoftTextToSpeech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MicrosoftTextToSpeech" />
        <type api="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.MicrosoftTextToSpeechModule" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService">
      <apidata name="TextToSpeechService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.#ctor(TalkingKeyboard.Infrastructure.Controls.ITextModel,Prism.Events.IEventAggregator)" />
        <element api="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.Dispose" />
        <element api="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.Dispose(System.Boolean)" />
        <element api="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.Say(System.String)" />
        <element api="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.SayCurrentText" />
        <element api="P:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.CurrentText" />
        <element api="P:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.SpeechSynthesisCommand" />
        <element api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)">
          <apidata name="SetProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="storage">
              <referenceTo>
                <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)" />
              </referenceTo>
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)" />
            </parameter>
            <parameter name="propertyName" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Mvvm.BindableBase.OnPropertyChanged(System.String)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="propertyName" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Mvvm.BindableBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="propertyExpression">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="E:Prism.Mvvm.BindableBase.PropertyChanged">
          <apidata name="PropertyChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PropertyChanged" />
          <remover name="remove_PropertyChanged" />
          <eventhandler>
            <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
              <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MicrosoftTextToSpeech" module="TalkingKeyboard.Modules.MicrosoftTextToSpeech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MicrosoftTextToSpeech" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.#ctor(TalkingKeyboard.Infrastructure.Controls.ITextModel,Prism.Events.IEventAggregator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="textModel">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ITextModel" ref="true" />
        </parameter>
        <parameter name="eventAggregator">
          <type api="T:Prism.Events.IEventAggregator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MicrosoftTextToSpeech" module="TalkingKeyboard.Modules.MicrosoftTextToSpeech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MicrosoftTextToSpeech" />
        <type api="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.CurrentText">
      <apidata name="CurrentText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentText" />
      <setter name="set_CurrentText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MicrosoftTextToSpeech" module="TalkingKeyboard.Modules.MicrosoftTextToSpeech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MicrosoftTextToSpeech" />
        <type api="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MicrosoftTextToSpeech" module="TalkingKeyboard.Modules.MicrosoftTextToSpeech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MicrosoftTextToSpeech" />
        <type api="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MicrosoftTextToSpeech" module="TalkingKeyboard.Modules.MicrosoftTextToSpeech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MicrosoftTextToSpeech" />
        <type api="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.Say(System.String)">
      <apidata name="Say" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService.Say(System.String)">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MicrosoftTextToSpeech" module="TalkingKeyboard.Modules.MicrosoftTextToSpeech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MicrosoftTextToSpeech" />
        <type api="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.SayCurrentText">
      <apidata name="SayCurrentText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService.SayCurrentText">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ITextToSpeechService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MicrosoftTextToSpeech" module="TalkingKeyboard.Modules.MicrosoftTextToSpeech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MicrosoftTextToSpeech" />
        <type api="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService.SpeechSynthesisCommand">
      <apidata name="SpeechSynthesisCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SpeechSynthesisCommand" />
      <setter name="set_SpeechSynthesisCommand" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MicrosoftTextToSpeech" module="TalkingKeyboard.Modules.MicrosoftTextToSpeech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MicrosoftTextToSpeech" />
        <type api="T:TalkingKeyboard.Modules.MicrosoftTextToSpeech.TextToSpeechService" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.MultiKeyBoard">
      <apidata name="TalkingKeyboard.Modules.MultiKeyBoard" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.MultiKeyBoard.MultiKeyBoardModule" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.MultiKeyBoard.MultiKeyBoardModule">
      <apidata name="MultiKeyBoardModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Prism.Modularity.IModule" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.MultiKeyBoard.MultiKeyBoardModule.#ctor(Prism.Regions.IRegionManager,Microsoft.Practices.Unity.IUnityContainer)" />
        <element api="M:TalkingKeyboard.Modules.MultiKeyBoard.MultiKeyBoardModule.Initialize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MultiKeyBoard.MultiKeyBoardModule.#ctor(Prism.Regions.IRegionManager,Microsoft.Practices.Unity.IUnityContainer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="regionManager">
          <type api="T:Prism.Regions.IRegionManager" ref="true" />
        </parameter>
        <parameter name="unityContainer">
          <type api="T:Microsoft.Practices.Unity.IUnityContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard" />
        <type api="T:TalkingKeyboard.Modules.MultiKeyBoard.MultiKeyBoardModule" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MultiKeyBoard.MultiKeyBoardModule.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Prism.Modularity.IModule.Initialize">
          <type api="T:Prism.Modularity.IModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard" />
        <type api="T:TalkingKeyboard.Modules.MultiKeyBoard.MultiKeyBoardModule" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.MultiKeyBoard.Model">
      <apidata name="TalkingKeyboard.Modules.MultiKeyBoard.Model" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.MultiKeyBoard.Model.MultikeyTextModel" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.MultiKeyBoard.Model.MultikeyTextModel">
      <apidata name="MultikeyTextModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:TalkingKeyboard.Infrastructure.Models.IMultiKeyTextModel" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.MultiKeyBoard.Model.MultikeyTextModel.#ctor" />
        <element api="P:TalkingKeyboard.Modules.MultiKeyBoard.Model.MultikeyTextModel.CurrentMultiCharacterText" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard.Model" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MultiKeyBoard.Model.MultikeyTextModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard.Model" />
        <type api="T:TalkingKeyboard.Modules.MultiKeyBoard.Model.MultikeyTextModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.MultiKeyBoard.Model.MultikeyTextModel.CurrentMultiCharacterText">
      <apidata name="CurrentMultiCharacterText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentMultiCharacterText" />
      <setter name="set_CurrentMultiCharacterText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:TalkingKeyboard.Infrastructure.Models.IMultiKeyTextModel.CurrentMultiCharacterText">
          <type api="T:TalkingKeyboard.Infrastructure.Models.IMultiKeyTextModel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard.Model" />
        <type api="T:TalkingKeyboard.Modules.MultiKeyBoard.Model.MultikeyTextModel" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels">
      <apidata name="TalkingKeyboard.Modules.MultiKeyBoard.ViewModels" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels.QwertySpanishMultiKeyboardViewModel" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels.QwertySpanishMultiKeyboardViewModel">
      <apidata name="QwertySpanishMultiKeyboardViewModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels.QwertySpanishMultiKeyboardViewModel.#ctor(Prism.Events.IEventAggregator,TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService)" />
        <element api="P:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels.QwertySpanishMultiKeyboardViewModel.AddMultiCharacterCommand" />
        <element api="P:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels.QwertySpanishMultiKeyboardViewModel.RemoveLastMultiCharacterCommand" />
        <element api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)">
          <apidata name="SetProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="storage">
              <referenceTo>
                <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)" />
              </referenceTo>
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)" />
            </parameter>
            <parameter name="propertyName" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Mvvm.BindableBase.OnPropertyChanged(System.String)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="propertyName" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Mvvm.BindableBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="propertyExpression">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="E:Prism.Mvvm.BindableBase.PropertyChanged">
          <apidata name="PropertyChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PropertyChanged" />
          <remover name="remove_PropertyChanged" />
          <eventhandler>
            <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
              <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels.QwertySpanishMultiKeyboardViewModel.#ctor(Prism.Events.IEventAggregator,TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="eventAggregator">
          <type api="T:Prism.Events.IEventAggregator" ref="true" />
        </parameter>
        <parameter name="suggestionService">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels.QwertySpanishMultiKeyboardViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels.QwertySpanishMultiKeyboardViewModel.AddMultiCharacterCommand">
      <apidata name="AddMultiCharacterCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AddMultiCharacterCommand" />
      <setter name="set_AddMultiCharacterCommand" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels.QwertySpanishMultiKeyboardViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels.QwertySpanishMultiKeyboardViewModel.RemoveLastMultiCharacterCommand">
      <apidata name="RemoveLastMultiCharacterCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RemoveLastMultiCharacterCommand" />
      <setter name="set_RemoveLastMultiCharacterCommand" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.MultiKeyBoard.ViewModels.QwertySpanishMultiKeyboardViewModel" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.MultiKeyBoard.Views">
      <apidata name="TalkingKeyboard.Modules.MultiKeyBoard.Views" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.MultiKeyBoard.Views.QwertySpanishMultiKeyboard" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.MultiKeyBoard.Views.QwertySpanishMultiKeyboard">
      <apidata name="QwertySpanishMultiKeyboard" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.MultiKeyBoard.Views.QwertySpanishMultiKeyboard.#ctor" />
        <element api="M:TalkingKeyboard.Modules.MultiKeyBoard.Views.QwertySpanishMultiKeyboard.InitializeComponent" />
        <element api="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnCreateAutomationPeer">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.ShouldSerializeContent">
          <apidata name="ShouldSerializeContent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
          <apidata name="AddChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddText(System.String)">
          <apidata name="AddText" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="text">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
          <apidata name="OnContentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
          <apidata name="OnContentTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
            <parameter name="newContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
          <apidata name="OnContentTemplateSelectorChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
            <parameter name="newContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)">
          <apidata name="OnContentStringFormatChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="newContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.LogicalChildren">
          <apidata name="LogicalChildren" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.FrameworkElement.LogicalChildren">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_LogicalChildren" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.HasContent">
          <apidata name="HasContent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_HasContent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplate">
          <apidata name="ContentTemplate" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplate" />
          <setter name="set_ContentTemplate" />
          <returns>
            <type api="T:System.Windows.DataTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplateSelector">
          <apidata name="ContentTemplateSelector" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplateSelector" />
          <setter name="set_ContentTemplateSelector" />
          <returns>
            <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentStringFormat">
          <apidata name="ContentStringFormat" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentStringFormat" />
          <setter name="set_ContentStringFormat" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
          <apidata name="OnTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
            <parameter name="newTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="constraint">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="arrangeBounds">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:System.Windows.Media.FontFamily" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.FontSizeConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:System.Windows.FontStretch" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:System.Windows.FontStyle" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:System.Windows.FontWeight" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HandlesScrolling">
          <apidata name="HandlesScrolling" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HandlesScrolling" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.PreviewMouseDoubleClick">
          <apidata name="PreviewMouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDoubleClick" />
          <remover name="remove_PreviewMouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.MouseDoubleClick">
          <apidata name="MouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDoubleClick" />
          <remover name="remove_MouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
          <apidata name="ShouldSerializeStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <apidata name="OnStyleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
            <parameter name="newStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <apidata name="ParentLayoutInvalidated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
            <parameter name="isControllable">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
          <apidata name="ShouldSerializeTriggers" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <apidata name="GetVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeResources">
          <apidata name="ShouldSerializeResources" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="childName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <apidata name="FindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <apidata name="TryFindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetResourceReference" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <apidata name="OnVisualParentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="oldParent">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding">
              <type api="T:System.Windows.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="path">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetUIParentCore">
          <apidata name="GetUIParentCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetUIParentCore">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="targetRectangle">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <apidata name="MeasureCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
          <apidata name="ArrangeCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <apidata name="OnRenderSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="sizeInfo">
              <type api="T:System.Windows.SizeChangedInfo" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <apidata name="GetLayoutClip" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="layoutSlotSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <apidata name="MoveFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="request">
              <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <apidata name="PredictFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="direction">
              <type api="T:System.Windows.Input.FocusNavigationDirection" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginInit">
          <apidata name="BeginInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.EndInit">
          <apidata name="EndInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <apidata name="OnInitialized" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <apidata name="RegisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="scopedElement">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
          <apidata name="UnregisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UpdateDefaultStyle">
          <apidata name="UpdateDefaultStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <apidata name="AddLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <apidata name="RemoveLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <apidata name="OverridesDefaultStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OverridesDefaultStyle" />
          <setter name="set_OverridesDefaultStyle" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:System.Windows.TriggerCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.TemplatedParent">
          <apidata name="TemplatedParent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TemplatedParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <apidata name="VisualChildrenCount" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.Media.Visual.VisualChildrenCount">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_VisualChildrenCount" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:System.Windows.ResourceDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <apidata name="InheritanceBehavior" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InheritanceBehavior" />
          <setter name="set_InheritanceBehavior" />
          <returns>
            <type api="T:System.Windows.InheritanceBehavior" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.BindingGroup">
          <apidata name="BindingGroup" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BindingGroup" />
          <setter name="set_BindingGroup" />
          <returns>
            <type api="T:System.Windows.Data.BindingGroup" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.Windows.Markup.XmlLanguage" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Windows.IFrameworkInputElement.Name">
              <type api="T:System.Windows.IFrameworkInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InputScope">
          <apidata name="InputScope" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InputScope" />
          <setter name="set_InputScope" />
          <returns>
            <type api="T:System.Windows.Input.InputScope" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.LayoutTransform">
          <apidata name="LayoutTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_LayoutTransform" />
          <setter name="set_LayoutTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:System.Windows.FlowDirection" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <apidata name="FocusVisualStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FocusVisualStyle" />
          <setter name="set_FocusVisualStyle" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Cursor">
          <apidata name="Cursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Cursor" />
          <setter name="set_Cursor" />
          <returns>
            <type api="T:System.Windows.Input.Cursor" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ForceCursor">
          <apidata name="ForceCursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ForceCursor" />
          <setter name="set_ForceCursor" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsInitialized">
          <apidata name="IsInitialized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInitialized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsLoaded">
          <apidata name="IsLoaded" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsLoaded" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ToolTip">
          <apidata name="ToolTip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ToolTip" />
          <setter name="set_ToolTip" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ContextMenu">
          <apidata name="ContextMenu" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContextMenu" />
          <setter name="set_ContextMenu" />
          <returns>
            <type api="T:System.Windows.Controls.ContextMenu" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.TargetUpdated">
          <apidata name="TargetUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TargetUpdated" />
          <remover name="remove_TargetUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SourceUpdated">
          <apidata name="SourceUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SourceUpdated" />
          <remover name="remove_SourceUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <apidata name="RequestBringIntoView" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_RequestBringIntoView" />
          <remover name="remove_RequestBringIntoView" />
          <eventhandler>
            <type api="T:System.Windows.RequestBringIntoViewEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RequestBringIntoViewEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:System.Windows.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Initialized">
          <apidata name="Initialized" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Initialized" />
          <remover name="remove_Initialized" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipOpening">
          <apidata name="ToolTipOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipOpening" />
          <remover name="remove_ToolTipOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipClosing">
          <apidata name="ToolTipClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipClosing" />
          <remover name="remove_ToolTipClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <apidata name="ContextMenuOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuOpening" />
          <remover name="remove_ContextMenuOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <apidata name="ContextMenuClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuClosing" />
          <remover name="remove_ContextMenuClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeInputBindings">
          <apidata name="ShouldSerializeInputBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeCommandBindings">
          <apidata name="ShouldSerializeCommandBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)">
          <apidata name="RaiseEvent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
            <parameter name="handledEventsToo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
          <apidata name="AddToEventRoute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="route">
              <type api="T:System.Windows.EventRoute" ref="true" />
            </parameter>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnPreviewMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnPreviewMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnGotMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnLostMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
          <apidata name="OnQueryCursor" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnPreviewStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnPreviewStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnGotStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnLostStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnPreviewTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnPreviewQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnPreviewGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnGotTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnLostTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateVisual">
          <apidata name="InvalidateVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)">
          <apidata name="OnChildDesiredSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)">
          <apidata name="OnRender" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="drawingContext">
              <type api="T:System.Windows.Media.DrawingContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)">
          <apidata name="TranslatePoint" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
            <parameter name="relativeTo">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)">
          <apidata name="InputHitTest" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.IInputElement" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureMouse">
          <apidata name="CaptureMouse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureMouse">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture">
          <apidata name="ReleaseMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureStylus">
          <apidata name="CaptureStylus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureStylus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseStylusCapture">
          <apidata name="ReleaseStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Focus">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.Focus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <apidata name="OnAccessKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.AccessKeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.PointHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.HitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.GeometryHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeometryHitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <apidata name="OnManipulationBoundaryFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)">
          <apidata name="CaptureTouch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)">
          <apidata name="ReleaseTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseAllTouchCaptures">
          <apidata name="ReleaseAllTouchCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasAnimatedProperties">
          <apidata name="HasAnimatedProperties" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_HasAnimatedProperties" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.InputBindings">
          <apidata name="InputBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InputBindings" />
          <returns>
            <type api="T:System.Windows.Input.InputBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.CommandBindings">
          <apidata name="CommandBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_CommandBindings" />
          <returns>
            <type api="T:System.Windows.Input.CommandBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.StylusPlugIns">
          <apidata name="StylusPlugIns" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_StylusPlugIns" />
          <returns>
            <type api="T:System.Windows.Input.StylusPlugIns.StylusPlugInCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMeasureValid">
          <apidata name="IsMeasureValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMeasureValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsArrangeValid">
          <apidata name="IsArrangeValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsArrangeValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderSize" />
          <setter name="set_RenderSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseDirectlyOver">
          <apidata name="IsMouseDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseOver">
          <apidata name="IsMouseOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusOver">
          <apidata name="IsStylusOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocusWithin">
          <apidata name="IsKeyboardFocusWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocusWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocusWithin">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptured">
          <apidata name="IsMouseCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptureWithin">
          <apidata name="IsMouseCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusDirectlyOver">
          <apidata name="IsStylusDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptured">
          <apidata name="IsStylusCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptureWithin">
          <apidata name="IsStylusCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocused">
          <apidata name="IsKeyboardFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocused">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsInputMethodEnabled">
          <apidata name="IsInputMethodEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInputMethodEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.OpacityMask">
          <apidata name="OpacityMask" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OpacityMask" />
          <setter name="set_OpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffect">
          <apidata name="BitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffect" />
          <setter name="set_BitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.Effect">
          <apidata name="Effect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Effect" />
          <setter name="set_Effect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffectInput">
          <apidata name="BitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffectInput" />
          <setter name="set_BitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Uid">
          <apidata name="Uid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Uid" />
          <setter name="set_Uid" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:System.Windows.Visibility" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.ClipToBounds">
          <apidata name="ClipToBounds" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ClipToBounds" />
          <setter name="set_ClipToBounds" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.SnapsToDevicePixels">
          <apidata name="SnapsToDevicePixels" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SnapsToDevicePixels" />
          <setter name="set_SnapsToDevicePixels" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasEffectiveKeyboardFocus">
          <apidata name="HasEffectiveKeyboardFocus" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HasEffectiveKeyboardFocus" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsFocused">
          <apidata name="IsFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsEnabled">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabledCore">
          <apidata name="IsEnabledCore" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsEnabledCore" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsVisible">
          <apidata name="IsVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Focusable">
          <apidata name="Focusable" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Focusable" />
          <setter name="set_Focusable" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.Focusable">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.PersistId">
          <apidata name="PersistId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_PersistId" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.IsManipulationEnabled">
          <apidata name="IsManipulationEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsManipulationEnabled" />
          <setter name="set_IsManipulationEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesOver">
          <apidata name="AreAnyTouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver">
          <apidata name="AreAnyTouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin">
          <apidata name="AreAnyTouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCapturedWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCaptured">
          <apidata name="AreAnyTouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCaptured">
          <apidata name="TouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCaptured" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCapturedWithin">
          <apidata name="TouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCapturedWithin" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesOver">
          <apidata name="TouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesDirectlyOver">
          <apidata name="TouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesDirectlyOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseDown">
          <apidata name="PreviewMouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDown" />
          <remover name="remove_PreviewMouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseDown">
          <apidata name="MouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDown" />
          <remover name="remove_MouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseUp">
          <apidata name="PreviewMouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseUp" />
          <remover name="remove_PreviewMouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseUp">
          <apidata name="MouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseUp" />
          <remover name="remove_MouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonDown">
          <apidata name="PreviewMouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonDown" />
          <remover name="remove_PreviewMouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown">
          <apidata name="MouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonDown" />
          <remover name="remove_MouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonUp">
          <apidata name="PreviewMouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonUp" />
          <remover name="remove_PreviewMouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp">
          <apidata name="MouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonUp" />
          <remover name="remove_MouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonDown">
          <apidata name="PreviewMouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonDown" />
          <remover name="remove_PreviewMouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonDown">
          <apidata name="MouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonDown" />
          <remover name="remove_MouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonUp">
          <apidata name="PreviewMouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonUp" />
          <remover name="remove_PreviewMouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonUp">
          <apidata name="MouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonUp" />
          <remover name="remove_MouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseMove">
          <apidata name="PreviewMouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseMove" />
          <remover name="remove_PreviewMouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseMove">
          <apidata name="MouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseMove" />
          <remover name="remove_MouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseWheel">
          <apidata name="PreviewMouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseWheel" />
          <remover name="remove_PreviewMouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseWheel">
          <apidata name="MouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseWheel" />
          <remover name="remove_MouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseEnter">
          <apidata name="MouseEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseEnter" />
          <remover name="remove_MouseEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeave">
          <apidata name="MouseLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeave" />
          <remover name="remove_MouseLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotMouseCapture">
          <apidata name="GotMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotMouseCapture" />
          <remover name="remove_GotMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostMouseCapture">
          <apidata name="LostMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostMouseCapture" />
          <remover name="remove_LostMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryCursor">
          <apidata name="QueryCursor" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryCursor" />
          <remover name="remove_QueryCursor" />
          <eventhandler>
            <type api="T:System.Windows.Input.QueryCursorEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusDown">
          <apidata name="PreviewStylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusDown" />
          <remover name="remove_PreviewStylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusDown">
          <apidata name="StylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusDown" />
          <remover name="remove_StylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusUp">
          <apidata name="PreviewStylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusUp" />
          <remover name="remove_PreviewStylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusUp">
          <apidata name="StylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusUp" />
          <remover name="remove_StylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusMove">
          <apidata name="PreviewStylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusMove" />
          <remover name="remove_PreviewStylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusMove">
          <apidata name="StylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusMove" />
          <remover name="remove_StylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInAirMove">
          <apidata name="PreviewStylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInAirMove" />
          <remover name="remove_PreviewStylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInAirMove">
          <apidata name="StylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInAirMove" />
          <remover name="remove_StylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusEnter">
          <apidata name="StylusEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusEnter" />
          <remover name="remove_StylusEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusLeave">
          <apidata name="StylusLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusLeave" />
          <remover name="remove_StylusLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInRange">
          <apidata name="PreviewStylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInRange" />
          <remover name="remove_PreviewStylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInRange">
          <apidata name="StylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInRange" />
          <remover name="remove_StylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusOutOfRange">
          <apidata name="PreviewStylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusOutOfRange" />
          <remover name="remove_PreviewStylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusOutOfRange">
          <apidata name="StylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusOutOfRange" />
          <remover name="remove_StylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusSystemGesture">
          <apidata name="PreviewStylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusSystemGesture" />
          <remover name="remove_PreviewStylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusSystemGesture">
          <apidata name="StylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusSystemGesture" />
          <remover name="remove_StylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotStylusCapture">
          <apidata name="GotStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotStylusCapture" />
          <remover name="remove_GotStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostStylusCapture">
          <apidata name="LostStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostStylusCapture" />
          <remover name="remove_LostStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonDown">
          <apidata name="StylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonDown" />
          <remover name="remove_StylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonUp">
          <apidata name="StylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonUp" />
          <remover name="remove_StylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonDown">
          <apidata name="PreviewStylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonDown" />
          <remover name="remove_PreviewStylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonUp">
          <apidata name="PreviewStylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonUp" />
          <remover name="remove_PreviewStylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyDown">
          <apidata name="PreviewKeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyDown" />
          <remover name="remove_PreviewKeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyUp">
          <apidata name="PreviewKeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyUp" />
          <remover name="remove_PreviewKeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGotKeyboardFocus">
          <apidata name="PreviewGotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGotKeyboardFocus" />
          <remover name="remove_PreviewGotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewGotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotKeyboardFocus">
          <apidata name="GotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotKeyboardFocus" />
          <remover name="remove_GotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewLostKeyboardFocus">
          <apidata name="PreviewLostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewLostKeyboardFocus" />
          <remover name="remove_PreviewLostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewLostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostKeyboardFocus">
          <apidata name="LostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostKeyboardFocus" />
          <remover name="remove_LostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTextInput">
          <apidata name="PreviewTextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTextInput" />
          <remover name="remove_PreviewTextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewTextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TextInput">
          <apidata name="TextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_TextInput" />
          <remover name="remove_TextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.TextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewQueryContinueDrag">
          <apidata name="PreviewQueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewQueryContinueDrag" />
          <remover name="remove_PreviewQueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryContinueDrag">
          <apidata name="QueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryContinueDrag" />
          <remover name="remove_QueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGiveFeedback">
          <apidata name="PreviewGiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGiveFeedback" />
          <remover name="remove_PreviewGiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GiveFeedback">
          <apidata name="GiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GiveFeedback" />
          <remover name="remove_GiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragEnter">
          <apidata name="PreviewDragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragEnter" />
          <remover name="remove_PreviewDragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragOver">
          <apidata name="PreviewDragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragOver" />
          <remover name="remove_PreviewDragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragLeave">
          <apidata name="PreviewDragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragLeave" />
          <remover name="remove_PreviewDragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDrop">
          <apidata name="PreviewDrop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDrop" />
          <remover name="remove_PreviewDrop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchDown">
          <apidata name="PreviewTouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchDown" />
          <remover name="remove_PreviewTouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchDown">
          <apidata name="TouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchDown" />
          <remover name="remove_TouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchMove">
          <apidata name="PreviewTouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchMove" />
          <remover name="remove_PreviewTouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchMove">
          <apidata name="TouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchMove" />
          <remover name="remove_TouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchUp">
          <apidata name="PreviewTouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchUp" />
          <remover name="remove_PreviewTouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchUp">
          <apidata name="TouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchUp" />
          <remover name="remove_TouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotTouchCapture">
          <apidata name="GotTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotTouchCapture" />
          <remover name="remove_GotTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostTouchCapture">
          <apidata name="LostTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostTouchCapture" />
          <remover name="remove_LostTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchEnter">
          <apidata name="TouchEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchEnter" />
          <remover name="remove_TouchEnter" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchLeave">
          <apidata name="TouchLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchLeave" />
          <remover name="remove_TouchLeave" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseDirectlyOverChanged">
          <apidata name="IsMouseDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseDirectlyOverChanged" />
          <remover name="remove_IsMouseDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged">
          <apidata name="IsKeyboardFocusWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusWithinChanged" />
          <remover name="remove_IsKeyboardFocusWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCapturedChanged">
          <apidata name="IsMouseCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCapturedChanged" />
          <remover name="remove_IsMouseCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCaptureWithinChanged">
          <apidata name="IsMouseCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCaptureWithinChanged" />
          <remover name="remove_IsMouseCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusDirectlyOverChanged">
          <apidata name="IsStylusDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusDirectlyOverChanged" />
          <remover name="remove_IsStylusDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCapturedChanged">
          <apidata name="IsStylusCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCapturedChanged" />
          <remover name="remove_IsStylusCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCaptureWithinChanged">
          <apidata name="IsStylusCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCaptureWithinChanged" />
          <remover name="remove_IsStylusCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusedChanged">
          <apidata name="IsKeyboardFocusedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusedChanged" />
          <remover name="remove_IsKeyboardFocusedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsHitTestVisibleChanged">
          <apidata name="IsHitTestVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsHitTestVisibleChanged" />
          <remover name="remove_IsHitTestVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsVisibleChanged">
          <apidata name="IsVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsVisibleChanged" />
          <remover name="remove_IsVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.FocusableChanged">
          <apidata name="FocusableChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_FocusableChanged" />
          <remover name="remove_FocusableChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationBoundaryFeedback">
          <apidata name="ManipulationBoundaryFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationBoundaryFeedback" />
          <remover name="remove_ManipulationBoundaryFeedback" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <apidata name="AddVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <apidata name="RemoveVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <apidata name="OnVisualChildrenChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="visualAdded">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
            <parameter name="visualRemoved">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)">
          <apidata name="IsAncestorOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)">
          <apidata name="IsDescendantOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
          <apidata name="FindCommonVisualAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="otherVisual">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Media3D.Visual3D" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Media3D.GeneralTransform2DTo3D" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <apidata name="TransformToDescendant" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="visual">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
          <apidata name="PointToScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
          <apidata name="PointFromScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualParent">
          <apidata name="VisualParent" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_VisualParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTransform">
          <apidata name="VisualTransform" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTransform" />
          <setter name="set_VisualTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEffect">
          <apidata name="VisualEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEffect" />
          <setter name="set_VisualEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffect">
          <apidata name="VisualBitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffect" />
          <setter name="set_VisualBitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffectInput">
          <apidata name="VisualBitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffectInput" />
          <setter name="set_VisualBitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualCacheMode">
          <apidata name="VisualCacheMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualCacheMode" />
          <setter name="set_VisualCacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <apidata name="VisualScrollableAreaClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualScrollableAreaClip" />
          <setter name="set_VisualScrollableAreaClip" />
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Windows.Rect" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClip">
          <apidata name="VisualClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClip" />
          <setter name="set_VisualClip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOffset">
          <apidata name="VisualOffset" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOffset" />
          <setter name="set_VisualOffset" />
          <returns>
            <type api="T:System.Windows.Vector" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacity">
          <apidata name="VisualOpacity" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacity" />
          <setter name="set_VisualOpacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEdgeMode">
          <apidata name="VisualEdgeMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEdgeMode" />
          <setter name="set_VisualEdgeMode" />
          <returns>
            <type api="T:System.Windows.Media.EdgeMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapScalingMode">
          <apidata name="VisualBitmapScalingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapScalingMode" />
          <setter name="set_VisualBitmapScalingMode" />
          <returns>
            <type api="T:System.Windows.Media.BitmapScalingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClearTypeHint">
          <apidata name="VisualClearTypeHint" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClearTypeHint" />
          <setter name="set_VisualClearTypeHint" />
          <returns>
            <type api="T:System.Windows.Media.ClearTypeHint" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextRenderingMode">
          <apidata name="VisualTextRenderingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextRenderingMode" />
          <setter name="set_VisualTextRenderingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextRenderingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextHintingMode">
          <apidata name="VisualTextHintingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextHintingMode" />
          <setter name="set_VisualTextHintingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextHintingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacityMask">
          <apidata name="VisualOpacityMask" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacityMask" />
          <setter name="set_VisualOpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <apidata name="VisualXSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualXSnappingGuidelines" />
          <setter name="set_VisualXSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <apidata name="VisualYSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualYSnappingGuidelines" />
          <setter name="set_VisualYSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetCurrentValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <apidata name="CoerceValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <apidata name="InvalidateProperty" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <apidata name="ShouldSerializeProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <apidata name="GetLocalValueEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Windows.LocalValueEnumerator" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType">
          <apidata name="DependencyObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DependencyObjectType" />
          <returns>
            <type api="T:System.Windows.DependencyObjectType" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.IsSealed">
          <apidata name="IsSealed" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsSealed" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <apidata name="CheckAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <apidata name="VerifyAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:System.Windows.Threading.Dispatcher" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard.Views" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MultiKeyBoard.Views.QwertySpanishMultiKeyboard.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard.Views" />
        <type api="T:TalkingKeyboard.Modules.MultiKeyBoard.Views.QwertySpanishMultiKeyboard" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.MultiKeyBoard.Views.QwertySpanishMultiKeyboard.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.MultiKeyBoard" module="TalkingKeyboard.Modules.MultiKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.MultiKeyBoard.Views" />
        <type api="T:TalkingKeyboard.Modules.MultiKeyBoard.Views.QwertySpanishMultiKeyboard" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.SingleKeyBoard">
      <apidata name="TalkingKeyboard.Modules.SingleKeyBoard" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.SingleKeyBoard.SingleKeyBoardModule" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.SingleKeyBoard.SingleKeyBoardModule">
      <apidata name="SingleKeyBoardModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Prism.Modularity.IModule" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SingleKeyBoard.SingleKeyBoardModule.#ctor(Prism.Regions.IRegionManager,Microsoft.Practices.Unity.IUnityContainer)" />
        <element api="M:TalkingKeyboard.Modules.SingleKeyBoard.SingleKeyBoardModule.Initialize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SingleKeyBoard.SingleKeyBoardModule.#ctor(Prism.Regions.IRegionManager,Microsoft.Practices.Unity.IUnityContainer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="regionManager">
          <type api="T:Prism.Regions.IRegionManager" ref="true" />
        </parameter>
        <parameter name="unityContainer">
          <type api="T:Microsoft.Practices.Unity.IUnityContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard" />
        <type api="T:TalkingKeyboard.Modules.SingleKeyBoard.SingleKeyBoardModule" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SingleKeyBoard.SingleKeyBoardModule.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Prism.Modularity.IModule.Initialize">
          <type api="T:Prism.Modularity.IModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard" />
        <type api="T:TalkingKeyboard.Modules.SingleKeyBoard.SingleKeyBoardModule" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels">
      <apidata name="TalkingKeyboard.Modules.SingleKeyBoard.ViewModels" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel">
      <apidata name="QwertySpanishSingleKeyboardViewModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel.#ctor" />
        <element api="M:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel.OnPropertyChanged(System.String)" />
        <element api="P:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel.IsShiftDown" />
        <element api="P:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel.SetShiftDownCommand" />
        <element api="P:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel.ToggleShiftDownCommand" />
        <element api="E:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel.PropertyChanged" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel.IsShiftDown">
      <apidata name="IsShiftDown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsShiftDown" />
      <setter name="set_IsShiftDown" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel.OnPropertyChanged(System.String)">
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="propertyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel" ref="true" />
      </containers>
    </api>
    <api id="E:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel.PropertyChanged">
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel.SetShiftDownCommand">
      <apidata name="SetShiftDownCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SetShiftDownCommand" />
      <setter name="set_SetShiftDownCommand" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel.ToggleShiftDownCommand">
      <apidata name="ToggleShiftDownCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ToggleShiftDownCommand" />
      <setter name="set_ToggleShiftDownCommand" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.SingleKeyBoard.ViewModels.QwertySpanishSingleKeyboardViewModel" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.SingleKeyBoard.Views">
      <apidata name="TalkingKeyboard.Modules.SingleKeyBoard.Views" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.SingleKeyBoard.Views.QwertySpanishSingleKeyboard" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.SingleKeyBoard.Views.QwertySpanishSingleKeyboard">
      <apidata name="QwertySpanishSingleKeyboard" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SingleKeyBoard.Views.QwertySpanishSingleKeyboard.#ctor" />
        <element api="M:TalkingKeyboard.Modules.SingleKeyBoard.Views.QwertySpanishSingleKeyboard.InitializeComponent" />
        <element api="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnCreateAutomationPeer">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.ShouldSerializeContent">
          <apidata name="ShouldSerializeContent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
          <apidata name="AddChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddText(System.String)">
          <apidata name="AddText" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="text">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
          <apidata name="OnContentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
          <apidata name="OnContentTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
            <parameter name="newContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
          <apidata name="OnContentTemplateSelectorChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
            <parameter name="newContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)">
          <apidata name="OnContentStringFormatChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="newContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.LogicalChildren">
          <apidata name="LogicalChildren" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.FrameworkElement.LogicalChildren">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_LogicalChildren" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.HasContent">
          <apidata name="HasContent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_HasContent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplate">
          <apidata name="ContentTemplate" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplate" />
          <setter name="set_ContentTemplate" />
          <returns>
            <type api="T:System.Windows.DataTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplateSelector">
          <apidata name="ContentTemplateSelector" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplateSelector" />
          <setter name="set_ContentTemplateSelector" />
          <returns>
            <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentStringFormat">
          <apidata name="ContentStringFormat" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentStringFormat" />
          <setter name="set_ContentStringFormat" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
          <apidata name="OnTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
            <parameter name="newTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="constraint">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="arrangeBounds">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:System.Windows.Media.FontFamily" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.FontSizeConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:System.Windows.FontStretch" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:System.Windows.FontStyle" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:System.Windows.FontWeight" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HandlesScrolling">
          <apidata name="HandlesScrolling" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HandlesScrolling" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.PreviewMouseDoubleClick">
          <apidata name="PreviewMouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDoubleClick" />
          <remover name="remove_PreviewMouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.MouseDoubleClick">
          <apidata name="MouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDoubleClick" />
          <remover name="remove_MouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
          <apidata name="ShouldSerializeStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <apidata name="OnStyleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
            <parameter name="newStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <apidata name="ParentLayoutInvalidated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
            <parameter name="isControllable">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
          <apidata name="ShouldSerializeTriggers" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <apidata name="GetVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeResources">
          <apidata name="ShouldSerializeResources" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="childName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <apidata name="FindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <apidata name="TryFindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetResourceReference" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <apidata name="OnVisualParentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="oldParent">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding">
              <type api="T:System.Windows.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="path">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetUIParentCore">
          <apidata name="GetUIParentCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetUIParentCore">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="targetRectangle">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <apidata name="MeasureCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
          <apidata name="ArrangeCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <apidata name="OnRenderSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="sizeInfo">
              <type api="T:System.Windows.SizeChangedInfo" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <apidata name="GetLayoutClip" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="layoutSlotSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <apidata name="MoveFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="request">
              <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <apidata name="PredictFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="direction">
              <type api="T:System.Windows.Input.FocusNavigationDirection" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginInit">
          <apidata name="BeginInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.EndInit">
          <apidata name="EndInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <apidata name="OnInitialized" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <apidata name="RegisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="scopedElement">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
          <apidata name="UnregisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UpdateDefaultStyle">
          <apidata name="UpdateDefaultStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <apidata name="AddLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <apidata name="RemoveLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <apidata name="OverridesDefaultStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OverridesDefaultStyle" />
          <setter name="set_OverridesDefaultStyle" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:System.Windows.TriggerCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.TemplatedParent">
          <apidata name="TemplatedParent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TemplatedParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <apidata name="VisualChildrenCount" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.Media.Visual.VisualChildrenCount">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_VisualChildrenCount" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:System.Windows.ResourceDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <apidata name="InheritanceBehavior" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InheritanceBehavior" />
          <setter name="set_InheritanceBehavior" />
          <returns>
            <type api="T:System.Windows.InheritanceBehavior" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.BindingGroup">
          <apidata name="BindingGroup" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BindingGroup" />
          <setter name="set_BindingGroup" />
          <returns>
            <type api="T:System.Windows.Data.BindingGroup" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.Windows.Markup.XmlLanguage" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Windows.IFrameworkInputElement.Name">
              <type api="T:System.Windows.IFrameworkInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InputScope">
          <apidata name="InputScope" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InputScope" />
          <setter name="set_InputScope" />
          <returns>
            <type api="T:System.Windows.Input.InputScope" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.LayoutTransform">
          <apidata name="LayoutTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_LayoutTransform" />
          <setter name="set_LayoutTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:System.Windows.FlowDirection" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <apidata name="FocusVisualStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FocusVisualStyle" />
          <setter name="set_FocusVisualStyle" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Cursor">
          <apidata name="Cursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Cursor" />
          <setter name="set_Cursor" />
          <returns>
            <type api="T:System.Windows.Input.Cursor" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ForceCursor">
          <apidata name="ForceCursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ForceCursor" />
          <setter name="set_ForceCursor" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsInitialized">
          <apidata name="IsInitialized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInitialized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsLoaded">
          <apidata name="IsLoaded" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsLoaded" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ToolTip">
          <apidata name="ToolTip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ToolTip" />
          <setter name="set_ToolTip" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ContextMenu">
          <apidata name="ContextMenu" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContextMenu" />
          <setter name="set_ContextMenu" />
          <returns>
            <type api="T:System.Windows.Controls.ContextMenu" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.TargetUpdated">
          <apidata name="TargetUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TargetUpdated" />
          <remover name="remove_TargetUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SourceUpdated">
          <apidata name="SourceUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SourceUpdated" />
          <remover name="remove_SourceUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <apidata name="RequestBringIntoView" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_RequestBringIntoView" />
          <remover name="remove_RequestBringIntoView" />
          <eventhandler>
            <type api="T:System.Windows.RequestBringIntoViewEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RequestBringIntoViewEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:System.Windows.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Initialized">
          <apidata name="Initialized" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Initialized" />
          <remover name="remove_Initialized" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipOpening">
          <apidata name="ToolTipOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipOpening" />
          <remover name="remove_ToolTipOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipClosing">
          <apidata name="ToolTipClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipClosing" />
          <remover name="remove_ToolTipClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <apidata name="ContextMenuOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuOpening" />
          <remover name="remove_ContextMenuOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <apidata name="ContextMenuClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuClosing" />
          <remover name="remove_ContextMenuClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeInputBindings">
          <apidata name="ShouldSerializeInputBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeCommandBindings">
          <apidata name="ShouldSerializeCommandBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)">
          <apidata name="RaiseEvent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
            <parameter name="handledEventsToo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
          <apidata name="AddToEventRoute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="route">
              <type api="T:System.Windows.EventRoute" ref="true" />
            </parameter>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnPreviewMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnPreviewMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnGotMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnLostMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
          <apidata name="OnQueryCursor" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnPreviewStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnPreviewStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnGotStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnLostStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnPreviewTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnPreviewQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnPreviewGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnGotTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnLostTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateVisual">
          <apidata name="InvalidateVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)">
          <apidata name="OnChildDesiredSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)">
          <apidata name="OnRender" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="drawingContext">
              <type api="T:System.Windows.Media.DrawingContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)">
          <apidata name="TranslatePoint" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
            <parameter name="relativeTo">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)">
          <apidata name="InputHitTest" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.IInputElement" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureMouse">
          <apidata name="CaptureMouse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureMouse">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture">
          <apidata name="ReleaseMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureStylus">
          <apidata name="CaptureStylus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureStylus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseStylusCapture">
          <apidata name="ReleaseStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Focus">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.Focus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <apidata name="OnAccessKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.AccessKeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.PointHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.HitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.GeometryHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeometryHitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <apidata name="OnManipulationBoundaryFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)">
          <apidata name="CaptureTouch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)">
          <apidata name="ReleaseTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseAllTouchCaptures">
          <apidata name="ReleaseAllTouchCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasAnimatedProperties">
          <apidata name="HasAnimatedProperties" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_HasAnimatedProperties" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.InputBindings">
          <apidata name="InputBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InputBindings" />
          <returns>
            <type api="T:System.Windows.Input.InputBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.CommandBindings">
          <apidata name="CommandBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_CommandBindings" />
          <returns>
            <type api="T:System.Windows.Input.CommandBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.StylusPlugIns">
          <apidata name="StylusPlugIns" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_StylusPlugIns" />
          <returns>
            <type api="T:System.Windows.Input.StylusPlugIns.StylusPlugInCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMeasureValid">
          <apidata name="IsMeasureValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMeasureValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsArrangeValid">
          <apidata name="IsArrangeValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsArrangeValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderSize" />
          <setter name="set_RenderSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseDirectlyOver">
          <apidata name="IsMouseDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseOver">
          <apidata name="IsMouseOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusOver">
          <apidata name="IsStylusOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocusWithin">
          <apidata name="IsKeyboardFocusWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocusWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocusWithin">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptured">
          <apidata name="IsMouseCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptureWithin">
          <apidata name="IsMouseCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusDirectlyOver">
          <apidata name="IsStylusDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptured">
          <apidata name="IsStylusCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptureWithin">
          <apidata name="IsStylusCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocused">
          <apidata name="IsKeyboardFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocused">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsInputMethodEnabled">
          <apidata name="IsInputMethodEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInputMethodEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.OpacityMask">
          <apidata name="OpacityMask" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OpacityMask" />
          <setter name="set_OpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffect">
          <apidata name="BitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffect" />
          <setter name="set_BitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.Effect">
          <apidata name="Effect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Effect" />
          <setter name="set_Effect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffectInput">
          <apidata name="BitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffectInput" />
          <setter name="set_BitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Uid">
          <apidata name="Uid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Uid" />
          <setter name="set_Uid" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:System.Windows.Visibility" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.ClipToBounds">
          <apidata name="ClipToBounds" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ClipToBounds" />
          <setter name="set_ClipToBounds" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.SnapsToDevicePixels">
          <apidata name="SnapsToDevicePixels" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SnapsToDevicePixels" />
          <setter name="set_SnapsToDevicePixels" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasEffectiveKeyboardFocus">
          <apidata name="HasEffectiveKeyboardFocus" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HasEffectiveKeyboardFocus" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsFocused">
          <apidata name="IsFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsEnabled">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabledCore">
          <apidata name="IsEnabledCore" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsEnabledCore" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsVisible">
          <apidata name="IsVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Focusable">
          <apidata name="Focusable" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Focusable" />
          <setter name="set_Focusable" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.Focusable">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.PersistId">
          <apidata name="PersistId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_PersistId" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.IsManipulationEnabled">
          <apidata name="IsManipulationEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsManipulationEnabled" />
          <setter name="set_IsManipulationEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesOver">
          <apidata name="AreAnyTouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver">
          <apidata name="AreAnyTouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin">
          <apidata name="AreAnyTouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCapturedWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCaptured">
          <apidata name="AreAnyTouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCaptured">
          <apidata name="TouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCaptured" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCapturedWithin">
          <apidata name="TouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCapturedWithin" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesOver">
          <apidata name="TouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesDirectlyOver">
          <apidata name="TouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesDirectlyOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseDown">
          <apidata name="PreviewMouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDown" />
          <remover name="remove_PreviewMouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseDown">
          <apidata name="MouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDown" />
          <remover name="remove_MouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseUp">
          <apidata name="PreviewMouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseUp" />
          <remover name="remove_PreviewMouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseUp">
          <apidata name="MouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseUp" />
          <remover name="remove_MouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonDown">
          <apidata name="PreviewMouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonDown" />
          <remover name="remove_PreviewMouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown">
          <apidata name="MouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonDown" />
          <remover name="remove_MouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonUp">
          <apidata name="PreviewMouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonUp" />
          <remover name="remove_PreviewMouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp">
          <apidata name="MouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonUp" />
          <remover name="remove_MouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonDown">
          <apidata name="PreviewMouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonDown" />
          <remover name="remove_PreviewMouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonDown">
          <apidata name="MouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonDown" />
          <remover name="remove_MouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonUp">
          <apidata name="PreviewMouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonUp" />
          <remover name="remove_PreviewMouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonUp">
          <apidata name="MouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonUp" />
          <remover name="remove_MouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseMove">
          <apidata name="PreviewMouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseMove" />
          <remover name="remove_PreviewMouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseMove">
          <apidata name="MouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseMove" />
          <remover name="remove_MouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseWheel">
          <apidata name="PreviewMouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseWheel" />
          <remover name="remove_PreviewMouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseWheel">
          <apidata name="MouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseWheel" />
          <remover name="remove_MouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseEnter">
          <apidata name="MouseEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseEnter" />
          <remover name="remove_MouseEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeave">
          <apidata name="MouseLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeave" />
          <remover name="remove_MouseLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotMouseCapture">
          <apidata name="GotMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotMouseCapture" />
          <remover name="remove_GotMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostMouseCapture">
          <apidata name="LostMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostMouseCapture" />
          <remover name="remove_LostMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryCursor">
          <apidata name="QueryCursor" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryCursor" />
          <remover name="remove_QueryCursor" />
          <eventhandler>
            <type api="T:System.Windows.Input.QueryCursorEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusDown">
          <apidata name="PreviewStylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusDown" />
          <remover name="remove_PreviewStylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusDown">
          <apidata name="StylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusDown" />
          <remover name="remove_StylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusUp">
          <apidata name="PreviewStylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusUp" />
          <remover name="remove_PreviewStylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusUp">
          <apidata name="StylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusUp" />
          <remover name="remove_StylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusMove">
          <apidata name="PreviewStylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusMove" />
          <remover name="remove_PreviewStylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusMove">
          <apidata name="StylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusMove" />
          <remover name="remove_StylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInAirMove">
          <apidata name="PreviewStylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInAirMove" />
          <remover name="remove_PreviewStylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInAirMove">
          <apidata name="StylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInAirMove" />
          <remover name="remove_StylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusEnter">
          <apidata name="StylusEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusEnter" />
          <remover name="remove_StylusEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusLeave">
          <apidata name="StylusLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusLeave" />
          <remover name="remove_StylusLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInRange">
          <apidata name="PreviewStylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInRange" />
          <remover name="remove_PreviewStylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInRange">
          <apidata name="StylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInRange" />
          <remover name="remove_StylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusOutOfRange">
          <apidata name="PreviewStylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusOutOfRange" />
          <remover name="remove_PreviewStylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusOutOfRange">
          <apidata name="StylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusOutOfRange" />
          <remover name="remove_StylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusSystemGesture">
          <apidata name="PreviewStylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusSystemGesture" />
          <remover name="remove_PreviewStylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusSystemGesture">
          <apidata name="StylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusSystemGesture" />
          <remover name="remove_StylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotStylusCapture">
          <apidata name="GotStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotStylusCapture" />
          <remover name="remove_GotStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostStylusCapture">
          <apidata name="LostStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostStylusCapture" />
          <remover name="remove_LostStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonDown">
          <apidata name="StylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonDown" />
          <remover name="remove_StylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonUp">
          <apidata name="StylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonUp" />
          <remover name="remove_StylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonDown">
          <apidata name="PreviewStylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonDown" />
          <remover name="remove_PreviewStylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonUp">
          <apidata name="PreviewStylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonUp" />
          <remover name="remove_PreviewStylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyDown">
          <apidata name="PreviewKeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyDown" />
          <remover name="remove_PreviewKeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyUp">
          <apidata name="PreviewKeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyUp" />
          <remover name="remove_PreviewKeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGotKeyboardFocus">
          <apidata name="PreviewGotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGotKeyboardFocus" />
          <remover name="remove_PreviewGotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewGotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotKeyboardFocus">
          <apidata name="GotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotKeyboardFocus" />
          <remover name="remove_GotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewLostKeyboardFocus">
          <apidata name="PreviewLostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewLostKeyboardFocus" />
          <remover name="remove_PreviewLostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewLostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostKeyboardFocus">
          <apidata name="LostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostKeyboardFocus" />
          <remover name="remove_LostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTextInput">
          <apidata name="PreviewTextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTextInput" />
          <remover name="remove_PreviewTextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewTextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TextInput">
          <apidata name="TextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_TextInput" />
          <remover name="remove_TextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.TextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewQueryContinueDrag">
          <apidata name="PreviewQueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewQueryContinueDrag" />
          <remover name="remove_PreviewQueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryContinueDrag">
          <apidata name="QueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryContinueDrag" />
          <remover name="remove_QueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGiveFeedback">
          <apidata name="PreviewGiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGiveFeedback" />
          <remover name="remove_PreviewGiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GiveFeedback">
          <apidata name="GiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GiveFeedback" />
          <remover name="remove_GiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragEnter">
          <apidata name="PreviewDragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragEnter" />
          <remover name="remove_PreviewDragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragOver">
          <apidata name="PreviewDragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragOver" />
          <remover name="remove_PreviewDragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragLeave">
          <apidata name="PreviewDragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragLeave" />
          <remover name="remove_PreviewDragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDrop">
          <apidata name="PreviewDrop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDrop" />
          <remover name="remove_PreviewDrop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchDown">
          <apidata name="PreviewTouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchDown" />
          <remover name="remove_PreviewTouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchDown">
          <apidata name="TouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchDown" />
          <remover name="remove_TouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchMove">
          <apidata name="PreviewTouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchMove" />
          <remover name="remove_PreviewTouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchMove">
          <apidata name="TouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchMove" />
          <remover name="remove_TouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchUp">
          <apidata name="PreviewTouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchUp" />
          <remover name="remove_PreviewTouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchUp">
          <apidata name="TouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchUp" />
          <remover name="remove_TouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotTouchCapture">
          <apidata name="GotTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotTouchCapture" />
          <remover name="remove_GotTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostTouchCapture">
          <apidata name="LostTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostTouchCapture" />
          <remover name="remove_LostTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchEnter">
          <apidata name="TouchEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchEnter" />
          <remover name="remove_TouchEnter" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchLeave">
          <apidata name="TouchLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchLeave" />
          <remover name="remove_TouchLeave" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseDirectlyOverChanged">
          <apidata name="IsMouseDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseDirectlyOverChanged" />
          <remover name="remove_IsMouseDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged">
          <apidata name="IsKeyboardFocusWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusWithinChanged" />
          <remover name="remove_IsKeyboardFocusWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCapturedChanged">
          <apidata name="IsMouseCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCapturedChanged" />
          <remover name="remove_IsMouseCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCaptureWithinChanged">
          <apidata name="IsMouseCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCaptureWithinChanged" />
          <remover name="remove_IsMouseCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusDirectlyOverChanged">
          <apidata name="IsStylusDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusDirectlyOverChanged" />
          <remover name="remove_IsStylusDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCapturedChanged">
          <apidata name="IsStylusCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCapturedChanged" />
          <remover name="remove_IsStylusCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCaptureWithinChanged">
          <apidata name="IsStylusCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCaptureWithinChanged" />
          <remover name="remove_IsStylusCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusedChanged">
          <apidata name="IsKeyboardFocusedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusedChanged" />
          <remover name="remove_IsKeyboardFocusedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsHitTestVisibleChanged">
          <apidata name="IsHitTestVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsHitTestVisibleChanged" />
          <remover name="remove_IsHitTestVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsVisibleChanged">
          <apidata name="IsVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsVisibleChanged" />
          <remover name="remove_IsVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.FocusableChanged">
          <apidata name="FocusableChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_FocusableChanged" />
          <remover name="remove_FocusableChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationBoundaryFeedback">
          <apidata name="ManipulationBoundaryFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationBoundaryFeedback" />
          <remover name="remove_ManipulationBoundaryFeedback" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <apidata name="AddVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <apidata name="RemoveVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <apidata name="OnVisualChildrenChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="visualAdded">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
            <parameter name="visualRemoved">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)">
          <apidata name="IsAncestorOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)">
          <apidata name="IsDescendantOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
          <apidata name="FindCommonVisualAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="otherVisual">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Media3D.Visual3D" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Media3D.GeneralTransform2DTo3D" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <apidata name="TransformToDescendant" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="visual">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
          <apidata name="PointToScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
          <apidata name="PointFromScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualParent">
          <apidata name="VisualParent" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_VisualParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTransform">
          <apidata name="VisualTransform" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTransform" />
          <setter name="set_VisualTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEffect">
          <apidata name="VisualEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEffect" />
          <setter name="set_VisualEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffect">
          <apidata name="VisualBitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffect" />
          <setter name="set_VisualBitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffectInput">
          <apidata name="VisualBitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffectInput" />
          <setter name="set_VisualBitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualCacheMode">
          <apidata name="VisualCacheMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualCacheMode" />
          <setter name="set_VisualCacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <apidata name="VisualScrollableAreaClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualScrollableAreaClip" />
          <setter name="set_VisualScrollableAreaClip" />
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Windows.Rect" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClip">
          <apidata name="VisualClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClip" />
          <setter name="set_VisualClip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOffset">
          <apidata name="VisualOffset" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOffset" />
          <setter name="set_VisualOffset" />
          <returns>
            <type api="T:System.Windows.Vector" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacity">
          <apidata name="VisualOpacity" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacity" />
          <setter name="set_VisualOpacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEdgeMode">
          <apidata name="VisualEdgeMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEdgeMode" />
          <setter name="set_VisualEdgeMode" />
          <returns>
            <type api="T:System.Windows.Media.EdgeMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapScalingMode">
          <apidata name="VisualBitmapScalingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapScalingMode" />
          <setter name="set_VisualBitmapScalingMode" />
          <returns>
            <type api="T:System.Windows.Media.BitmapScalingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClearTypeHint">
          <apidata name="VisualClearTypeHint" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClearTypeHint" />
          <setter name="set_VisualClearTypeHint" />
          <returns>
            <type api="T:System.Windows.Media.ClearTypeHint" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextRenderingMode">
          <apidata name="VisualTextRenderingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextRenderingMode" />
          <setter name="set_VisualTextRenderingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextRenderingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextHintingMode">
          <apidata name="VisualTextHintingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextHintingMode" />
          <setter name="set_VisualTextHintingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextHintingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacityMask">
          <apidata name="VisualOpacityMask" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacityMask" />
          <setter name="set_VisualOpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <apidata name="VisualXSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualXSnappingGuidelines" />
          <setter name="set_VisualXSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <apidata name="VisualYSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualYSnappingGuidelines" />
          <setter name="set_VisualYSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetCurrentValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <apidata name="CoerceValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <apidata name="InvalidateProperty" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <apidata name="ShouldSerializeProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <apidata name="GetLocalValueEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Windows.LocalValueEnumerator" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType">
          <apidata name="DependencyObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DependencyObjectType" />
          <returns>
            <type api="T:System.Windows.DependencyObjectType" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.IsSealed">
          <apidata name="IsSealed" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsSealed" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <apidata name="CheckAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <apidata name="VerifyAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:System.Windows.Threading.Dispatcher" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard.Views" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SingleKeyBoard.Views.QwertySpanishSingleKeyboard.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard.Views" />
        <type api="T:TalkingKeyboard.Modules.SingleKeyBoard.Views.QwertySpanishSingleKeyboard" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SingleKeyBoard.Views.QwertySpanishSingleKeyboard.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SingleKeyBoard.Views" />
        <type api="T:TalkingKeyboard.Modules.SingleKeyBoard.Views.QwertySpanishSingleKeyboard" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.SuggestionBoard">
      <apidata name="TalkingKeyboard.Modules.SuggestionBoard" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.SuggestionBoard.SuggestionBoardModule" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.SuggestionBoard.SuggestionBoardModule">
      <apidata name="SuggestionBoardModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Prism.Modularity.IModule" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SuggestionBoard.SuggestionBoardModule.#ctor(Prism.Regions.IRegionManager,Microsoft.Practices.Unity.IUnityContainer)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionBoard.SuggestionBoardModule.Initialize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionBoard" module="TalkingKeyboard.Modules.SuggestionBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionBoard" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionBoard.SuggestionBoardModule.#ctor(Prism.Regions.IRegionManager,Microsoft.Practices.Unity.IUnityContainer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="regionManager">
          <type api="T:Prism.Regions.IRegionManager" ref="true" />
        </parameter>
        <parameter name="unityContainer">
          <type api="T:Microsoft.Practices.Unity.IUnityContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionBoard" module="TalkingKeyboard.Modules.SuggestionBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionBoard" />
        <type api="T:TalkingKeyboard.Modules.SuggestionBoard.SuggestionBoardModule" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionBoard.SuggestionBoardModule.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Prism.Modularity.IModule.Initialize">
          <type api="T:Prism.Modularity.IModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionBoard" module="TalkingKeyboard.Modules.SuggestionBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionBoard" />
        <type api="T:TalkingKeyboard.Modules.SuggestionBoard.SuggestionBoardModule" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.SuggestionBoard.ViewModels">
      <apidata name="TalkingKeyboard.Modules.SuggestionBoard.ViewModels" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.SuggestionBoard.ViewModels.FourSuggestionsBoardViewModel" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.SuggestionBoard.ViewModels.FourSuggestionsBoardViewModel">
      <apidata name="FourSuggestionsBoardViewModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SuggestionBoard.ViewModels.FourSuggestionsBoardViewModel.#ctor(TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService,Prism.Events.IEventAggregator)" />
        <element api="P:TalkingKeyboard.Modules.SuggestionBoard.ViewModels.FourSuggestionsBoardViewModel.Suggestions" />
        <element api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)">
          <apidata name="SetProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="storage">
              <referenceTo>
                <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)" />
              </referenceTo>
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)" />
            </parameter>
            <parameter name="propertyName" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Mvvm.BindableBase.OnPropertyChanged(System.String)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="propertyName" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Mvvm.BindableBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="propertyExpression">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="E:Prism.Mvvm.BindableBase.PropertyChanged">
          <apidata name="PropertyChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PropertyChanged" />
          <remover name="remove_PropertyChanged" />
          <eventhandler>
            <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
              <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionBoard" module="TalkingKeyboard.Modules.SuggestionBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionBoard.ViewModels" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionBoard.ViewModels.FourSuggestionsBoardViewModel.#ctor(TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService,Prism.Events.IEventAggregator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="suggestionService">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
        </parameter>
        <parameter name="eventAggregator">
          <type api="T:Prism.Events.IEventAggregator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionBoard" module="TalkingKeyboard.Modules.SuggestionBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionBoard.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.SuggestionBoard.ViewModels.FourSuggestionsBoardViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.SuggestionBoard.ViewModels.FourSuggestionsBoardViewModel.Suggestions">
      <apidata name="Suggestions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Suggestions" />
      <setter name="set_Suggestions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionBoard" module="TalkingKeyboard.Modules.SuggestionBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionBoard.ViewModels" />
        <type api="T:TalkingKeyboard.Modules.SuggestionBoard.ViewModels.FourSuggestionsBoardViewModel" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.SuggestionBoard.Views">
      <apidata name="TalkingKeyboard.Modules.SuggestionBoard.Views" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.SuggestionBoard.Views.FourSuggestionsBoard" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.SuggestionBoard.Views.FourSuggestionsBoard">
      <apidata name="FourSuggestionsBoard" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SuggestionBoard.Views.FourSuggestionsBoard.#ctor" />
        <element api="M:TalkingKeyboard.Modules.SuggestionBoard.Views.FourSuggestionsBoard.InitializeComponent" />
        <element api="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnCreateAutomationPeer">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.ShouldSerializeContent">
          <apidata name="ShouldSerializeContent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
          <apidata name="AddChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddText(System.String)">
          <apidata name="AddText" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="text">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
          <apidata name="OnContentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
          <apidata name="OnContentTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
            <parameter name="newContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
          <apidata name="OnContentTemplateSelectorChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
            <parameter name="newContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)">
          <apidata name="OnContentStringFormatChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="newContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.LogicalChildren">
          <apidata name="LogicalChildren" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.FrameworkElement.LogicalChildren">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_LogicalChildren" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.HasContent">
          <apidata name="HasContent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_HasContent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplate">
          <apidata name="ContentTemplate" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplate" />
          <setter name="set_ContentTemplate" />
          <returns>
            <type api="T:System.Windows.DataTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplateSelector">
          <apidata name="ContentTemplateSelector" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplateSelector" />
          <setter name="set_ContentTemplateSelector" />
          <returns>
            <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentStringFormat">
          <apidata name="ContentStringFormat" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentStringFormat" />
          <setter name="set_ContentStringFormat" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
          <apidata name="OnTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
            <parameter name="newTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="constraint">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="arrangeBounds">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:System.Windows.Media.FontFamily" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.FontSizeConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:System.Windows.FontStretch" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:System.Windows.FontStyle" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:System.Windows.FontWeight" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HandlesScrolling">
          <apidata name="HandlesScrolling" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HandlesScrolling" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.PreviewMouseDoubleClick">
          <apidata name="PreviewMouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDoubleClick" />
          <remover name="remove_PreviewMouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.MouseDoubleClick">
          <apidata name="MouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDoubleClick" />
          <remover name="remove_MouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
          <apidata name="ShouldSerializeStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <apidata name="OnStyleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
            <parameter name="newStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <apidata name="ParentLayoutInvalidated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
            <parameter name="isControllable">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
          <apidata name="ShouldSerializeTriggers" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <apidata name="GetVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeResources">
          <apidata name="ShouldSerializeResources" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="childName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <apidata name="FindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <apidata name="TryFindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetResourceReference" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <apidata name="OnVisualParentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="oldParent">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding">
              <type api="T:System.Windows.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="path">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetUIParentCore">
          <apidata name="GetUIParentCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetUIParentCore">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="targetRectangle">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <apidata name="MeasureCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
          <apidata name="ArrangeCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <apidata name="OnRenderSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="sizeInfo">
              <type api="T:System.Windows.SizeChangedInfo" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <apidata name="GetLayoutClip" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="layoutSlotSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <apidata name="MoveFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="request">
              <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <apidata name="PredictFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="direction">
              <type api="T:System.Windows.Input.FocusNavigationDirection" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginInit">
          <apidata name="BeginInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.EndInit">
          <apidata name="EndInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <apidata name="OnInitialized" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <apidata name="RegisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="scopedElement">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
          <apidata name="UnregisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UpdateDefaultStyle">
          <apidata name="UpdateDefaultStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <apidata name="AddLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <apidata name="RemoveLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <apidata name="OverridesDefaultStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OverridesDefaultStyle" />
          <setter name="set_OverridesDefaultStyle" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:System.Windows.TriggerCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.TemplatedParent">
          <apidata name="TemplatedParent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TemplatedParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <apidata name="VisualChildrenCount" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.Media.Visual.VisualChildrenCount">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_VisualChildrenCount" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:System.Windows.ResourceDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <apidata name="InheritanceBehavior" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InheritanceBehavior" />
          <setter name="set_InheritanceBehavior" />
          <returns>
            <type api="T:System.Windows.InheritanceBehavior" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.BindingGroup">
          <apidata name="BindingGroup" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BindingGroup" />
          <setter name="set_BindingGroup" />
          <returns>
            <type api="T:System.Windows.Data.BindingGroup" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.Windows.Markup.XmlLanguage" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Windows.IFrameworkInputElement.Name">
              <type api="T:System.Windows.IFrameworkInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InputScope">
          <apidata name="InputScope" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InputScope" />
          <setter name="set_InputScope" />
          <returns>
            <type api="T:System.Windows.Input.InputScope" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.LayoutTransform">
          <apidata name="LayoutTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_LayoutTransform" />
          <setter name="set_LayoutTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:System.Windows.FlowDirection" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <apidata name="FocusVisualStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FocusVisualStyle" />
          <setter name="set_FocusVisualStyle" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Cursor">
          <apidata name="Cursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Cursor" />
          <setter name="set_Cursor" />
          <returns>
            <type api="T:System.Windows.Input.Cursor" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ForceCursor">
          <apidata name="ForceCursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ForceCursor" />
          <setter name="set_ForceCursor" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsInitialized">
          <apidata name="IsInitialized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInitialized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsLoaded">
          <apidata name="IsLoaded" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsLoaded" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ToolTip">
          <apidata name="ToolTip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ToolTip" />
          <setter name="set_ToolTip" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ContextMenu">
          <apidata name="ContextMenu" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContextMenu" />
          <setter name="set_ContextMenu" />
          <returns>
            <type api="T:System.Windows.Controls.ContextMenu" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.TargetUpdated">
          <apidata name="TargetUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TargetUpdated" />
          <remover name="remove_TargetUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SourceUpdated">
          <apidata name="SourceUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SourceUpdated" />
          <remover name="remove_SourceUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <apidata name="RequestBringIntoView" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_RequestBringIntoView" />
          <remover name="remove_RequestBringIntoView" />
          <eventhandler>
            <type api="T:System.Windows.RequestBringIntoViewEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RequestBringIntoViewEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:System.Windows.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Initialized">
          <apidata name="Initialized" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Initialized" />
          <remover name="remove_Initialized" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipOpening">
          <apidata name="ToolTipOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipOpening" />
          <remover name="remove_ToolTipOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipClosing">
          <apidata name="ToolTipClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipClosing" />
          <remover name="remove_ToolTipClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <apidata name="ContextMenuOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuOpening" />
          <remover name="remove_ContextMenuOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <apidata name="ContextMenuClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuClosing" />
          <remover name="remove_ContextMenuClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeInputBindings">
          <apidata name="ShouldSerializeInputBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeCommandBindings">
          <apidata name="ShouldSerializeCommandBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)">
          <apidata name="RaiseEvent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
            <parameter name="handledEventsToo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
          <apidata name="AddToEventRoute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="route">
              <type api="T:System.Windows.EventRoute" ref="true" />
            </parameter>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnPreviewMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnPreviewMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnGotMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnLostMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
          <apidata name="OnQueryCursor" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnPreviewStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnPreviewStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnGotStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnLostStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnPreviewTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnPreviewQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnPreviewGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnGotTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnLostTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateVisual">
          <apidata name="InvalidateVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)">
          <apidata name="OnChildDesiredSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)">
          <apidata name="OnRender" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="drawingContext">
              <type api="T:System.Windows.Media.DrawingContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)">
          <apidata name="TranslatePoint" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
            <parameter name="relativeTo">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)">
          <apidata name="InputHitTest" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.IInputElement" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureMouse">
          <apidata name="CaptureMouse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureMouse">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture">
          <apidata name="ReleaseMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureStylus">
          <apidata name="CaptureStylus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureStylus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseStylusCapture">
          <apidata name="ReleaseStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Focus">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.Focus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <apidata name="OnAccessKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.AccessKeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.PointHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.HitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.GeometryHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeometryHitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <apidata name="OnManipulationBoundaryFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)">
          <apidata name="CaptureTouch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)">
          <apidata name="ReleaseTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseAllTouchCaptures">
          <apidata name="ReleaseAllTouchCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasAnimatedProperties">
          <apidata name="HasAnimatedProperties" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_HasAnimatedProperties" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.InputBindings">
          <apidata name="InputBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InputBindings" />
          <returns>
            <type api="T:System.Windows.Input.InputBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.CommandBindings">
          <apidata name="CommandBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_CommandBindings" />
          <returns>
            <type api="T:System.Windows.Input.CommandBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.StylusPlugIns">
          <apidata name="StylusPlugIns" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_StylusPlugIns" />
          <returns>
            <type api="T:System.Windows.Input.StylusPlugIns.StylusPlugInCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMeasureValid">
          <apidata name="IsMeasureValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMeasureValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsArrangeValid">
          <apidata name="IsArrangeValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsArrangeValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderSize" />
          <setter name="set_RenderSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseDirectlyOver">
          <apidata name="IsMouseDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseOver">
          <apidata name="IsMouseOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusOver">
          <apidata name="IsStylusOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocusWithin">
          <apidata name="IsKeyboardFocusWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocusWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocusWithin">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptured">
          <apidata name="IsMouseCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptureWithin">
          <apidata name="IsMouseCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusDirectlyOver">
          <apidata name="IsStylusDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptured">
          <apidata name="IsStylusCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptureWithin">
          <apidata name="IsStylusCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocused">
          <apidata name="IsKeyboardFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocused">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsInputMethodEnabled">
          <apidata name="IsInputMethodEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInputMethodEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.OpacityMask">
          <apidata name="OpacityMask" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OpacityMask" />
          <setter name="set_OpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffect">
          <apidata name="BitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffect" />
          <setter name="set_BitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.Effect">
          <apidata name="Effect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Effect" />
          <setter name="set_Effect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffectInput">
          <apidata name="BitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffectInput" />
          <setter name="set_BitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Uid">
          <apidata name="Uid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Uid" />
          <setter name="set_Uid" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:System.Windows.Visibility" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.ClipToBounds">
          <apidata name="ClipToBounds" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ClipToBounds" />
          <setter name="set_ClipToBounds" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.SnapsToDevicePixels">
          <apidata name="SnapsToDevicePixels" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SnapsToDevicePixels" />
          <setter name="set_SnapsToDevicePixels" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasEffectiveKeyboardFocus">
          <apidata name="HasEffectiveKeyboardFocus" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HasEffectiveKeyboardFocus" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsFocused">
          <apidata name="IsFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsEnabled">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabledCore">
          <apidata name="IsEnabledCore" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsEnabledCore" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsVisible">
          <apidata name="IsVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Focusable">
          <apidata name="Focusable" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Focusable" />
          <setter name="set_Focusable" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.Focusable">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.PersistId">
          <apidata name="PersistId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_PersistId" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.IsManipulationEnabled">
          <apidata name="IsManipulationEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsManipulationEnabled" />
          <setter name="set_IsManipulationEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesOver">
          <apidata name="AreAnyTouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver">
          <apidata name="AreAnyTouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin">
          <apidata name="AreAnyTouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCapturedWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCaptured">
          <apidata name="AreAnyTouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCaptured">
          <apidata name="TouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCaptured" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCapturedWithin">
          <apidata name="TouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCapturedWithin" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesOver">
          <apidata name="TouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesDirectlyOver">
          <apidata name="TouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesDirectlyOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseDown">
          <apidata name="PreviewMouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDown" />
          <remover name="remove_PreviewMouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseDown">
          <apidata name="MouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDown" />
          <remover name="remove_MouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseUp">
          <apidata name="PreviewMouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseUp" />
          <remover name="remove_PreviewMouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseUp">
          <apidata name="MouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseUp" />
          <remover name="remove_MouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonDown">
          <apidata name="PreviewMouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonDown" />
          <remover name="remove_PreviewMouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown">
          <apidata name="MouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonDown" />
          <remover name="remove_MouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonUp">
          <apidata name="PreviewMouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonUp" />
          <remover name="remove_PreviewMouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp">
          <apidata name="MouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonUp" />
          <remover name="remove_MouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonDown">
          <apidata name="PreviewMouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonDown" />
          <remover name="remove_PreviewMouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonDown">
          <apidata name="MouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonDown" />
          <remover name="remove_MouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonUp">
          <apidata name="PreviewMouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonUp" />
          <remover name="remove_PreviewMouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonUp">
          <apidata name="MouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonUp" />
          <remover name="remove_MouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseMove">
          <apidata name="PreviewMouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseMove" />
          <remover name="remove_PreviewMouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseMove">
          <apidata name="MouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseMove" />
          <remover name="remove_MouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseWheel">
          <apidata name="PreviewMouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseWheel" />
          <remover name="remove_PreviewMouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseWheel">
          <apidata name="MouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseWheel" />
          <remover name="remove_MouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseEnter">
          <apidata name="MouseEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseEnter" />
          <remover name="remove_MouseEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeave">
          <apidata name="MouseLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeave" />
          <remover name="remove_MouseLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotMouseCapture">
          <apidata name="GotMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotMouseCapture" />
          <remover name="remove_GotMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostMouseCapture">
          <apidata name="LostMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostMouseCapture" />
          <remover name="remove_LostMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryCursor">
          <apidata name="QueryCursor" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryCursor" />
          <remover name="remove_QueryCursor" />
          <eventhandler>
            <type api="T:System.Windows.Input.QueryCursorEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusDown">
          <apidata name="PreviewStylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusDown" />
          <remover name="remove_PreviewStylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusDown">
          <apidata name="StylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusDown" />
          <remover name="remove_StylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusUp">
          <apidata name="PreviewStylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusUp" />
          <remover name="remove_PreviewStylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusUp">
          <apidata name="StylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusUp" />
          <remover name="remove_StylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusMove">
          <apidata name="PreviewStylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusMove" />
          <remover name="remove_PreviewStylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusMove">
          <apidata name="StylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusMove" />
          <remover name="remove_StylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInAirMove">
          <apidata name="PreviewStylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInAirMove" />
          <remover name="remove_PreviewStylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInAirMove">
          <apidata name="StylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInAirMove" />
          <remover name="remove_StylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusEnter">
          <apidata name="StylusEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusEnter" />
          <remover name="remove_StylusEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusLeave">
          <apidata name="StylusLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusLeave" />
          <remover name="remove_StylusLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInRange">
          <apidata name="PreviewStylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInRange" />
          <remover name="remove_PreviewStylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInRange">
          <apidata name="StylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInRange" />
          <remover name="remove_StylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusOutOfRange">
          <apidata name="PreviewStylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusOutOfRange" />
          <remover name="remove_PreviewStylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusOutOfRange">
          <apidata name="StylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusOutOfRange" />
          <remover name="remove_StylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusSystemGesture">
          <apidata name="PreviewStylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusSystemGesture" />
          <remover name="remove_PreviewStylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusSystemGesture">
          <apidata name="StylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusSystemGesture" />
          <remover name="remove_StylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotStylusCapture">
          <apidata name="GotStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotStylusCapture" />
          <remover name="remove_GotStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostStylusCapture">
          <apidata name="LostStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostStylusCapture" />
          <remover name="remove_LostStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonDown">
          <apidata name="StylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonDown" />
          <remover name="remove_StylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonUp">
          <apidata name="StylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonUp" />
          <remover name="remove_StylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonDown">
          <apidata name="PreviewStylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonDown" />
          <remover name="remove_PreviewStylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonUp">
          <apidata name="PreviewStylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonUp" />
          <remover name="remove_PreviewStylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyDown">
          <apidata name="PreviewKeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyDown" />
          <remover name="remove_PreviewKeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyUp">
          <apidata name="PreviewKeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyUp" />
          <remover name="remove_PreviewKeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGotKeyboardFocus">
          <apidata name="PreviewGotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGotKeyboardFocus" />
          <remover name="remove_PreviewGotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewGotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotKeyboardFocus">
          <apidata name="GotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotKeyboardFocus" />
          <remover name="remove_GotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewLostKeyboardFocus">
          <apidata name="PreviewLostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewLostKeyboardFocus" />
          <remover name="remove_PreviewLostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewLostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostKeyboardFocus">
          <apidata name="LostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostKeyboardFocus" />
          <remover name="remove_LostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTextInput">
          <apidata name="PreviewTextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTextInput" />
          <remover name="remove_PreviewTextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewTextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TextInput">
          <apidata name="TextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_TextInput" />
          <remover name="remove_TextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.TextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewQueryContinueDrag">
          <apidata name="PreviewQueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewQueryContinueDrag" />
          <remover name="remove_PreviewQueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryContinueDrag">
          <apidata name="QueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryContinueDrag" />
          <remover name="remove_QueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGiveFeedback">
          <apidata name="PreviewGiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGiveFeedback" />
          <remover name="remove_PreviewGiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GiveFeedback">
          <apidata name="GiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GiveFeedback" />
          <remover name="remove_GiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragEnter">
          <apidata name="PreviewDragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragEnter" />
          <remover name="remove_PreviewDragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragOver">
          <apidata name="PreviewDragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragOver" />
          <remover name="remove_PreviewDragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragLeave">
          <apidata name="PreviewDragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragLeave" />
          <remover name="remove_PreviewDragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDrop">
          <apidata name="PreviewDrop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDrop" />
          <remover name="remove_PreviewDrop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchDown">
          <apidata name="PreviewTouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchDown" />
          <remover name="remove_PreviewTouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchDown">
          <apidata name="TouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchDown" />
          <remover name="remove_TouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchMove">
          <apidata name="PreviewTouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchMove" />
          <remover name="remove_PreviewTouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchMove">
          <apidata name="TouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchMove" />
          <remover name="remove_TouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchUp">
          <apidata name="PreviewTouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchUp" />
          <remover name="remove_PreviewTouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchUp">
          <apidata name="TouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchUp" />
          <remover name="remove_TouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotTouchCapture">
          <apidata name="GotTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotTouchCapture" />
          <remover name="remove_GotTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostTouchCapture">
          <apidata name="LostTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostTouchCapture" />
          <remover name="remove_LostTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchEnter">
          <apidata name="TouchEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchEnter" />
          <remover name="remove_TouchEnter" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchLeave">
          <apidata name="TouchLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchLeave" />
          <remover name="remove_TouchLeave" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseDirectlyOverChanged">
          <apidata name="IsMouseDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseDirectlyOverChanged" />
          <remover name="remove_IsMouseDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged">
          <apidata name="IsKeyboardFocusWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusWithinChanged" />
          <remover name="remove_IsKeyboardFocusWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCapturedChanged">
          <apidata name="IsMouseCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCapturedChanged" />
          <remover name="remove_IsMouseCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCaptureWithinChanged">
          <apidata name="IsMouseCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCaptureWithinChanged" />
          <remover name="remove_IsMouseCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusDirectlyOverChanged">
          <apidata name="IsStylusDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusDirectlyOverChanged" />
          <remover name="remove_IsStylusDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCapturedChanged">
          <apidata name="IsStylusCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCapturedChanged" />
          <remover name="remove_IsStylusCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCaptureWithinChanged">
          <apidata name="IsStylusCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCaptureWithinChanged" />
          <remover name="remove_IsStylusCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusedChanged">
          <apidata name="IsKeyboardFocusedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusedChanged" />
          <remover name="remove_IsKeyboardFocusedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsHitTestVisibleChanged">
          <apidata name="IsHitTestVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsHitTestVisibleChanged" />
          <remover name="remove_IsHitTestVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsVisibleChanged">
          <apidata name="IsVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsVisibleChanged" />
          <remover name="remove_IsVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.FocusableChanged">
          <apidata name="FocusableChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_FocusableChanged" />
          <remover name="remove_FocusableChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationBoundaryFeedback">
          <apidata name="ManipulationBoundaryFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationBoundaryFeedback" />
          <remover name="remove_ManipulationBoundaryFeedback" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <apidata name="AddVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <apidata name="RemoveVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <apidata name="OnVisualChildrenChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="visualAdded">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
            <parameter name="visualRemoved">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)">
          <apidata name="IsAncestorOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)">
          <apidata name="IsDescendantOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
          <apidata name="FindCommonVisualAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="otherVisual">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Media3D.Visual3D" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Media3D.GeneralTransform2DTo3D" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <apidata name="TransformToDescendant" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="visual">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
          <apidata name="PointToScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
          <apidata name="PointFromScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualParent">
          <apidata name="VisualParent" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_VisualParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTransform">
          <apidata name="VisualTransform" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTransform" />
          <setter name="set_VisualTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEffect">
          <apidata name="VisualEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEffect" />
          <setter name="set_VisualEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffect">
          <apidata name="VisualBitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffect" />
          <setter name="set_VisualBitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffectInput">
          <apidata name="VisualBitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffectInput" />
          <setter name="set_VisualBitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualCacheMode">
          <apidata name="VisualCacheMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualCacheMode" />
          <setter name="set_VisualCacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <apidata name="VisualScrollableAreaClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualScrollableAreaClip" />
          <setter name="set_VisualScrollableAreaClip" />
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Windows.Rect" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClip">
          <apidata name="VisualClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClip" />
          <setter name="set_VisualClip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOffset">
          <apidata name="VisualOffset" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOffset" />
          <setter name="set_VisualOffset" />
          <returns>
            <type api="T:System.Windows.Vector" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacity">
          <apidata name="VisualOpacity" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacity" />
          <setter name="set_VisualOpacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEdgeMode">
          <apidata name="VisualEdgeMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEdgeMode" />
          <setter name="set_VisualEdgeMode" />
          <returns>
            <type api="T:System.Windows.Media.EdgeMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapScalingMode">
          <apidata name="VisualBitmapScalingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapScalingMode" />
          <setter name="set_VisualBitmapScalingMode" />
          <returns>
            <type api="T:System.Windows.Media.BitmapScalingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClearTypeHint">
          <apidata name="VisualClearTypeHint" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClearTypeHint" />
          <setter name="set_VisualClearTypeHint" />
          <returns>
            <type api="T:System.Windows.Media.ClearTypeHint" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextRenderingMode">
          <apidata name="VisualTextRenderingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextRenderingMode" />
          <setter name="set_VisualTextRenderingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextRenderingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextHintingMode">
          <apidata name="VisualTextHintingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextHintingMode" />
          <setter name="set_VisualTextHintingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextHintingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacityMask">
          <apidata name="VisualOpacityMask" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacityMask" />
          <setter name="set_VisualOpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <apidata name="VisualXSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualXSnappingGuidelines" />
          <setter name="set_VisualXSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <apidata name="VisualYSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualYSnappingGuidelines" />
          <setter name="set_VisualYSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetCurrentValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <apidata name="CoerceValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <apidata name="InvalidateProperty" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <apidata name="ShouldSerializeProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <apidata name="GetLocalValueEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Windows.LocalValueEnumerator" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType">
          <apidata name="DependencyObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DependencyObjectType" />
          <returns>
            <type api="T:System.Windows.DependencyObjectType" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.IsSealed">
          <apidata name="IsSealed" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsSealed" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <apidata name="CheckAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <apidata name="VerifyAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:System.Windows.Threading.Dispatcher" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionBoard" module="TalkingKeyboard.Modules.SuggestionBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionBoard.Views" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionBoard.Views.FourSuggestionsBoard.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionBoard" module="TalkingKeyboard.Modules.SuggestionBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionBoard.Views" />
        <type api="T:TalkingKeyboard.Modules.SuggestionBoard.Views.FourSuggestionsBoard" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionBoard.Views.FourSuggestionsBoard.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionBoard" module="TalkingKeyboard.Modules.SuggestionBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionBoard.Views" />
        <type api="T:TalkingKeyboard.Modules.SuggestionBoard.Views.FourSuggestionsBoard" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.SuggestionsProvider">
      <apidata name="TalkingKeyboard.Modules.SuggestionsProvider" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionsProviderModule" />
        <element api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService">
      <apidata name="SuggestionService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.#ctor(TalkingKeyboard.Infrastructure.Controls.ITextModel)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.AddMultiCharacterText(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.ClearMultiCharacterBuffer" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.ProvideMultiCharacterSuggestions" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.ProvideSuggestions" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.RemoveLastMultiCharacter" />
        <element api="P:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.WriteSuggestionCommand" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.#ctor(TalkingKeyboard.Infrastructure.Controls.ITextModel)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="textModel">
          <type api="T:TalkingKeyboard.Infrastructure.Controls.ITextModel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.AddMultiCharacterText(System.String)">
      <apidata name="AddMultiCharacterText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.AddMultiCharacterText(System.String)">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.ClearMultiCharacterBuffer">
      <apidata name="ClearMultiCharacterBuffer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.ClearMultiCharacterBuffer">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.ProvideMultiCharacterSuggestions">
      <apidata name="ProvideMultiCharacterSuggestions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.ProvideMultiCharacterSuggestions">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.ProvideSuggestions">
      <apidata name="ProvideSuggestions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.ProvideSuggestions">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.RemoveLastMultiCharacter">
      <apidata name="RemoveLastMultiCharacter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService.RemoveLastMultiCharacter">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService.WriteSuggestionCommand">
      <apidata name="WriteSuggestionCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WriteSuggestionCommand" />
      <setter name="set_WriteSuggestionCommand" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionService" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionsProviderModule">
      <apidata name="SuggestionsProviderModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Prism.Modularity.IModule" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionsProviderModule.#ctor(Microsoft.Practices.Unity.IUnityContainer)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionsProviderModule.Initialize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionsProviderModule.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="unityContainer">
          <type api="T:Microsoft.Practices.Unity.IUnityContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionsProviderModule" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionsProviderModule.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Prism.Modularity.IModule.Initialize">
          <type api="T:Prism.Modularity.IModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionsProviderModule" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService">
      <apidata name="TalkingKeyboard.Modules.SuggestionsProvider.PresageService" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" />
        <element api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageChannel" />
        <element api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage">
      <apidata name="Presage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageChannel" ref="true" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </implementors>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.predict(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.predictAsync(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.context" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.contextAsync" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.context_change" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.context_changeAsync" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.prefix" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.prefixAsync" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.learn(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.learnAsync(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.completion(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.completionAsync(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.get_config(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.get_configAsync(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.set_config(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.set_configAsync(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.save_config" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.save_configAsync" />
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.completion(System.String)">
      <apidata name="completion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.completionAsync(System.String)">
      <apidata name="completionAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.context">
      <apidata name="context" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.context_change">
      <apidata name="context_change" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.context_changeAsync">
      <apidata name="context_changeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.contextAsync">
      <apidata name="contextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.get_config(System.String)">
      <apidata name="get_config" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.get_configAsync(System.String)">
      <apidata name="get_configAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.learn(System.String)">
      <apidata name="learn" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.learnAsync(System.String)">
      <apidata name="learnAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.predict(System.String,System.String)">
      <apidata name="predict" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="previous_words">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="current_word">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.predictAsync(System.String,System.String)">
      <apidata name="predictAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="previous_words">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="current_word">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.prefix">
      <apidata name="prefix" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.prefixAsync">
      <apidata name="prefixAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.save_config">
      <apidata name="save_config" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.save_configAsync">
      <apidata name="save_configAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.set_config(System.String,System.String)">
      <apidata name="set_config" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.set_configAsync(System.String,System.String)">
      <apidata name="set_configAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageChannel">
      <apidata name="PresageChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.predict(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.predictAsync(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.context" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.contextAsync" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.context_change" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.context_changeAsync" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.prefix" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.prefixAsync" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.learn(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.learnAsync(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.completion(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.completionAsync(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.get_config(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.get_configAsync(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.set_config(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.set_configAsync(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.save_config" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.save_configAsync" />
        <element api="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <apidata name="DisplayInitializationUI" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IClientChannel" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <apidata name="BeginDisplayInitializationUI" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IClientChannel" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
          <apidata name="EndDisplayInitializationUI" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="result">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IClientChannel" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <apidata name="AllowInitializationUI" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowInitializationUI" />
          <setter name="set_AllowInitializationUI" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IClientChannel" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
          <apidata name="DidInteractiveInitialization" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_DidInteractiveInitialization" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IClientChannel" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.IClientChannel.Via">
          <apidata name="Via" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_Via" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IClientChannel" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
          <apidata name="UnknownMessageReceived" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_UnknownMessageReceived" />
          <remover name="remove_UnknownMessageReceived" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IClientChannel" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
          <apidata name="AllowOutputBatching" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowOutputBatching" />
          <setter name="set_AllowOutputBatching" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.IContextChannel.InputSession">
          <apidata name="InputSession" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_InputSession" />
          <returns>
            <type api="T:System.ServiceModel.Channels.IInputSession" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress">
          <apidata name="LocalAddress" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_LocalAddress" />
          <returns>
            <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout">
          <apidata name="OperationTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_OperationTimeout" />
          <setter name="set_OperationTimeout" />
          <returns>
            <type api="T:System.TimeSpan" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.IContextChannel.OutputSession">
          <apidata name="OutputSession" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_OutputSession" />
          <returns>
            <type api="T:System.ServiceModel.Channels.IOutputSession" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress">
          <apidata name="RemoteAddress" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_RemoteAddress" />
          <returns>
            <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.IContextChannel.SessionId">
          <apidata name="SessionId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_SessionId" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <apidata name="GetProperty" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <templates>
            <template name="T">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="T" index="0" api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort">
          <apidata name="Abort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.Close">
          <apidata name="Close" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <apidata name="Close" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <apidata name="BeginClose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <apidata name="BeginClose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
          <apidata name="EndClose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="result">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.Open">
          <apidata name="Open" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <apidata name="Open" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <apidata name="BeginOpen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <apidata name="BeginOpen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
          <apidata name="EndOpen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="result">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ICommunicationObject.State">
          <apidata name="State" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_State" />
          <returns>
            <type api="T:System.ServiceModel.CommunicationState" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed">
          <apidata name="Closed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Closed" />
          <remover name="remove_Closed" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Closing">
          <apidata name="Closing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Closing" />
          <remover name="remove_Closing" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted">
          <apidata name="Faulted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Faulted" />
          <remover name="remove_Faulted" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Opened">
          <apidata name="Opened" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Opened" />
          <remover name="remove_Opened" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Opening">
          <apidata name="Opening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Opening" />
          <remover name="remove_Opening" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions">
          <apidata name="Extensions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_Extensions" />
          <returns>
            <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IContextChannel" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IContextChannel" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.IDisposable.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.IDisposable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient">
      <apidata name="PresageClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ClientBase`1" ref="true">
            <specialization>
              <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.#ctor" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.#ctor(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.#ctor(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.predict(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.predictAsync(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.context" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.contextAsync" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.context_change" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.context_changeAsync" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.prefix" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.prefixAsync" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.learn(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.learnAsync(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.completion(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.completionAsync(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.get_config(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.get_configAsync(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.set_config(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.set_configAsync(System.String,System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.save_config" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.save_configAsync" />
        <element api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
          <apidata name="GetDefaultValueForInitialization" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <returns>
            <template name="T" index="0" api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.Open">
          <apidata name="Open" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.ServiceModel.ICommunicationObject.Open">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.Abort">
          <apidata name="Abort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.ServiceModel.ICommunicationObject.Abort">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.Close">
          <apidata name="Close" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.ServiceModel.ICommunicationObject.Close">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI">
          <apidata name="DisplayInitializationUI" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.CreateChannel">
          <apidata name="CreateChannel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
          <apidata name="InvokeAsync" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginOperationDelegate">
              <type api="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" ref="true">
                <type api="T:System.ServiceModel.ClientBase`1" ref="true">
                  <specialization>
                    <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
                  </specialization>
                </type>
              </type>
            </parameter>
            <parameter name="inValues">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
            <parameter name="endOperationDelegate">
              <type api="T:System.ServiceModel.ClientBase`1.EndOperationDelegate" ref="true">
                <type api="T:System.ServiceModel.ClientBase`1" ref="true">
                  <specialization>
                    <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
                  </specialization>
                </type>
              </type>
            </parameter>
            <parameter name="operationCompletedCallback">
              <type api="T:System.Threading.SendOrPostCallback" ref="true" />
            </parameter>
            <parameter name="userState">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.ServiceModel.ClientBase`1.Channel">
          <apidata name="Channel" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Channel" />
          <returns>
            <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.ServiceModel.ClientBase`1.ChannelFactory">
          <apidata name="ChannelFactory" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ChannelFactory" />
          <returns>
            <type api="T:System.ServiceModel.ChannelFactory`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.ServiceModel.ClientBase`1.ClientCredentials">
          <apidata name="ClientCredentials" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ClientCredentials" />
          <returns>
            <type api="T:System.ServiceModel.Description.ClientCredentials" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.ServiceModel.ClientBase`1.State">
          <apidata name="State" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_State" />
          <returns>
            <type api="T:System.ServiceModel.CommunicationState" ref="false" />
          </returns>
          <implements>
            <member api="P:System.ServiceModel.ICommunicationObject.State">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.ServiceModel.ClientBase`1.InnerChannel">
          <apidata name="InnerChannel" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerChannel" />
          <returns>
            <type api="T:System.ServiceModel.IClientChannel" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.ServiceModel.ClientBase`1.Endpoint">
          <apidata name="Endpoint" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Endpoint" />
          <returns>
            <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.completion(System.String)">
      <apidata name="completion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.completion(System.String)">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.completionAsync(System.String)">
      <apidata name="completionAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.completionAsync(System.String)">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.context">
      <apidata name="context" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.context">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.context_change">
      <apidata name="context_change" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.context_change">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.context_changeAsync">
      <apidata name="context_changeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.context_changeAsync">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.contextAsync">
      <apidata name="contextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.contextAsync">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.get_config(System.String)">
      <apidata name="get_config" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.get_config(System.String)">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.get_configAsync(System.String)">
      <apidata name="get_configAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.get_configAsync(System.String)">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.learn(System.String)">
      <apidata name="learn" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.learn(System.String)">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.learnAsync(System.String)">
      <apidata name="learnAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.learnAsync(System.String)">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.predict(System.String,System.String)">
      <apidata name="predict" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="previous_words">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="current_word">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.predict(System.String,System.String)">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.predictAsync(System.String,System.String)">
      <apidata name="predictAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="previous_words">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="current_word">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.predictAsync(System.String,System.String)">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.prefix">
      <apidata name="prefix" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.prefix">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.prefixAsync">
      <apidata name="prefixAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.prefixAsync">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.save_config">
      <apidata name="save_config" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.save_config">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.save_configAsync">
      <apidata name="save_configAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.save_configAsync">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.set_config(System.String,System.String)">
      <apidata name="set_config" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.set_config(System.String,System.String)">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient.set_configAsync(System.String,System.String)">
      <apidata name="set_configAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage.set_configAsync(System.String,System.String)">
          <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.Presage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.PresageService" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.PresageService.PresageClient" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources">
      <apidata name="TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource" />
        <element api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.PresageSuggestionSource" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource">
      <apidata name="MultiCharacterSuggestionSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionSource" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource.#ctor" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource.Add(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource.ClearMultiCharacterBuffer" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource.GetSuggestions(System.Object)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource.LoadDictionarySortedByFrequency(System.String)" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource.RemoveLastMultiCharacter" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource.Add(System.String)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource.ClearMultiCharacterBuffer">
      <apidata name="ClearMultiCharacterBuffer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource.GetSuggestions(System.Object)">
      <apidata name="GetSuggestions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="basedOn" optional="true">
          <type api="T:System.Object" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionSource.GetSuggestions(System.Object)">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource.LoadDictionarySortedByFrequency(System.String)">
      <apidata name="LoadDictionarySortedByFrequency" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource.RemoveLastMultiCharacter">
      <apidata name="RemoveLastMultiCharacter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.MultiCharacterSuggestionSource" ref="true" />
      </containers>
    </api>
    <api id="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.PresageSuggestionSource">
      <apidata name="PresageSuggestionSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionSource" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.PresageSuggestionSource.#ctor" />
        <element api="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.PresageSuggestionSource.GetSuggestions(System.Object)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.PresageSuggestionSource.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.PresageSuggestionSource" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.PresageSuggestionSource.GetSuggestions(System.Object)">
      <apidata name="GetSuggestions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="basedOn">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionSource.GetSuggestions(System.Object)">
          <type api="T:TalkingKeyboard.Infrastructure.ServiceInterfaces.ISuggestionSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SuggestionsProvider" module="TalkingKeyboard.Modules.SuggestionsProvider" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources" />
        <type api="T:TalkingKeyboard.Modules.SuggestionsProvider.SuggestionSources.PresageSuggestionSource" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Shell">
      <apidata name="TalkingKeyboard.Shell" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Shell.App" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Shell.App">
      <apidata name="App" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Application" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Shell.App.OnStartup(System.Windows.StartupEventArgs)" />
        <element api="M:TalkingKeyboard.Shell.App.InitializeComponent" />
        <element api="M:TalkingKeyboard.Shell.App.Main" />
        <element api="M:TalkingKeyboard.Shell.App.#ctor" />
        <element api="M:System.Windows.Application.Run">
          <apidata name="Run" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.Run(System.Windows.Window)">
          <apidata name="Run" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="window">
              <type api="T:System.Windows.Window" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.Shutdown">
          <apidata name="Shutdown" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.Shutdown(System.Int32)">
          <apidata name="Shutdown" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="exitCode">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.FindResource(System.Object)">
          <apidata name="FindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.TryFindResource(System.Object)">
          <apidata name="TryFindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)">
          <apidata name="OnExit" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.ExitEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.OnActivated(System.EventArgs)">
          <apidata name="OnActivated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.OnDeactivated(System.EventArgs)">
          <apidata name="OnDeactivated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)">
          <apidata name="OnSessionEnding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.SessionEndingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigating" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)">
          <apidata name="OnNavigated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Navigation.NavigationEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)">
          <apidata name="OnNavigationProgress" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Navigation.NavigationProgressEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)">
          <apidata name="OnNavigationFailed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Navigation.NavigationFailedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)">
          <apidata name="OnLoadCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Navigation.NavigationEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)">
          <apidata name="OnNavigationStopped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Navigation.NavigationEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
          <apidata name="OnFragmentNavigation" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Navigation.FragmentNavigationEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Application.Windows">
          <apidata name="Windows" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Windows" />
          <returns>
            <type api="T:System.Windows.WindowCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Application.MainWindow">
          <apidata name="MainWindow" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MainWindow" />
          <setter name="set_MainWindow" />
          <returns>
            <type api="T:System.Windows.Window" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Application.ShutdownMode">
          <apidata name="ShutdownMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ShutdownMode" />
          <setter name="set_ShutdownMode" />
          <returns>
            <type api="T:System.Windows.ShutdownMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Application.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:System.Windows.ResourceDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Application.StartupUri">
          <apidata name="StartupUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_StartupUri" />
          <setter name="set_StartupUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Application.Properties">
          <apidata name="Properties" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Properties" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.Startup">
          <apidata name="Startup" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Startup" />
          <remover name="remove_Startup" />
          <eventhandler>
            <type api="T:System.Windows.StartupEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.StartupEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.Exit">
          <apidata name="Exit" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Exit" />
          <remover name="remove_Exit" />
          <eventhandler>
            <type api="T:System.Windows.ExitEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.ExitEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.Activated">
          <apidata name="Activated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Activated" />
          <remover name="remove_Activated" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.Deactivated">
          <apidata name="Deactivated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Deactivated" />
          <remover name="remove_Deactivated" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.SessionEnding">
          <apidata name="SessionEnding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SessionEnding" />
          <remover name="remove_SessionEnding" />
          <eventhandler>
            <type api="T:System.Windows.SessionEndingCancelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.SessionEndingCancelEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.DispatcherUnhandledException">
          <apidata name="DispatcherUnhandledException" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DispatcherUnhandledException" />
          <remover name="remove_DispatcherUnhandledException" />
          <eventhandler>
            <type api="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.Navigating">
          <apidata name="Navigating" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Navigating" />
          <remover name="remove_Navigating" />
          <eventhandler>
            <type api="T:System.Windows.Navigation.NavigatingCancelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Navigation.NavigatingCancelEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.Navigated">
          <apidata name="Navigated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Navigated" />
          <remover name="remove_Navigated" />
          <eventhandler>
            <type api="T:System.Windows.Navigation.NavigatedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Navigation.NavigationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.NavigationProgress">
          <apidata name="NavigationProgress" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_NavigationProgress" />
          <remover name="remove_NavigationProgress" />
          <eventhandler>
            <type api="T:System.Windows.Navigation.NavigationProgressEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Navigation.NavigationProgressEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.NavigationFailed">
          <apidata name="NavigationFailed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_NavigationFailed" />
          <remover name="remove_NavigationFailed" />
          <eventhandler>
            <type api="T:System.Windows.Navigation.NavigationFailedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Navigation.NavigationFailedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.LoadCompleted">
          <apidata name="LoadCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LoadCompleted" />
          <remover name="remove_LoadCompleted" />
          <eventhandler>
            <type api="T:System.Windows.Navigation.LoadCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Navigation.NavigationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.NavigationStopped">
          <apidata name="NavigationStopped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_NavigationStopped" />
          <remover name="remove_NavigationStopped" />
          <eventhandler>
            <type api="T:System.Windows.Navigation.NavigationStoppedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Navigation.NavigationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Application.FragmentNavigation">
          <apidata name="FragmentNavigation" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_FragmentNavigation" />
          <remover name="remove_FragmentNavigation" />
          <eventhandler>
            <type api="T:System.Windows.Navigation.FragmentNavigationEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Navigation.FragmentNavigationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <apidata name="CheckAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <apidata name="VerifyAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:System.Windows.Threading.Dispatcher" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Shell.App.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell" />
        <type api="T:TalkingKeyboard.Shell.App" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Shell.App.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell" />
        <type api="T:TalkingKeyboard.Shell.App" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Shell.App.Main">
      <apidata name="Main" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell" />
        <type api="T:TalkingKeyboard.Shell.App" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Shell.App.OnStartup(System.Windows.StartupEventArgs)">
      <apidata name="OnStartup" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)">
          <type api="T:System.Windows.Application" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Windows.StartupEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell" />
        <type api="T:TalkingKeyboard.Shell.App" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Shell.Logging">
      <apidata name="TalkingKeyboard.Shell.Logging" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Shell.Logging.NLogLogger" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Shell.Logging.NLogLogger">
      <apidata name="NLogLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Prism.Logging.ILoggerFacade" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Shell.Logging.NLogLogger.Log(System.String,Prism.Logging.Category,Prism.Logging.Priority)" />
        <element api="M:TalkingKeyboard.Shell.Logging.NLogLogger.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell.Logging" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Shell.Logging.NLogLogger.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell.Logging" />
        <type api="T:TalkingKeyboard.Shell.Logging.NLogLogger" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Shell.Logging.NLogLogger.Log(System.String,Prism.Logging.Category,Prism.Logging.Priority)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:Prism.Logging.Category" ref="false" />
        </parameter>
        <parameter name="priority">
          <type api="T:Prism.Logging.Priority" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Prism.Logging.ILoggerFacade.Log(System.String,Prism.Logging.Category,Prism.Logging.Priority)">
          <type api="T:Prism.Logging.ILoggerFacade" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell.Logging" />
        <type api="T:TalkingKeyboard.Shell.Logging.NLogLogger" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Shell.ViewModels">
      <apidata name="TalkingKeyboard.Shell.ViewModels" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel">
      <apidata name="MainWindowViewModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel.#ctor(Prism.Regions.IRegionManager)" />
        <element api="P:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel.ChangeViewToLeftCommand" />
        <element api="P:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel.ChangeViewToRightCommand" />
        <element api="P:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel.Title" />
        <element api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)">
          <apidata name="SetProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="storage">
              <referenceTo>
                <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)" />
              </referenceTo>
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)" />
            </parameter>
            <parameter name="propertyName" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Mvvm.BindableBase.OnPropertyChanged(System.String)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="propertyName" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:Prism.Mvvm.BindableBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="propertyExpression">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="M:Prism.Mvvm.BindableBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="E:Prism.Mvvm.BindableBase.PropertyChanged">
          <apidata name="PropertyChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PropertyChanged" />
          <remover name="remove_PropertyChanged" />
          <eventhandler>
            <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
              <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Prism" module="Prism" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Prism.Mvvm" />
            <type api="T:Prism.Mvvm.BindableBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell.ViewModels" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel.#ctor(Prism.Regions.IRegionManager)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="regionManager">
          <type api="T:Prism.Regions.IRegionManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell.ViewModels" />
        <type api="T:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel.ChangeViewToLeftCommand">
      <apidata name="ChangeViewToLeftCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ChangeViewToLeftCommand" />
      <setter name="set_ChangeViewToLeftCommand" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell.ViewModels" />
        <type api="T:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel.ChangeViewToRightCommand">
      <apidata name="ChangeViewToRightCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ChangeViewToRightCommand" />
      <setter name="set_ChangeViewToRightCommand" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell.ViewModels" />
        <type api="T:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel.Title">
      <apidata name="Title" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Title" />
      <setter name="set_Title" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell.ViewModels" />
        <type api="T:TalkingKeyboard.Shell.ViewModels.MainWindowViewModel" ref="true" />
      </containers>
    </api>
    <api id="N:TalkingKeyboard.Shell.Views">
      <apidata name="TalkingKeyboard.Shell.Views" group="namespace" />
      <elements>
        <element api="T:TalkingKeyboard.Shell.Views.MainWindow" />
      </elements>
    </api>
    <api id="T:TalkingKeyboard.Shell.Views.MainWindow">
      <apidata name="MainWindow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:TalkingKeyboard.Shell.Views.MainWindow.#ctor" />
        <element api="M:TalkingKeyboard.Shell.Views.MainWindow.InitializeComponent" />
        <element api="M:MahApps.Metro.Controls.MetroWindow.GetWindowPlacementSettings">
          <apidata name="GetWindowPlacementSettings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:MahApps.Metro.Controls.IWindowPlacementSettings" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="M:MahApps.Metro.Controls.MetroWindow.ShowOverlayAsync">
          <apidata name="ShowOverlayAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="M:MahApps.Metro.Controls.MetroWindow.HideOverlayAsync">
          <apidata name="HideOverlayAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="M:MahApps.Metro.Controls.MetroWindow.IsOverlayVisible">
          <apidata name="IsOverlayVisible" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="M:MahApps.Metro.Controls.MetroWindow.ShowOverlay">
          <apidata name="ShowOverlay" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="M:MahApps.Metro.Controls.MetroWindow.HideOverlay">
          <apidata name="HideOverlay" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="M:MahApps.Metro.Controls.MetroWindow.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.OnApplyTemplate">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.OverrideDefaultWindowCommandsBrush">
          <apidata name="OverrideDefaultWindowCommandsBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OverrideDefaultWindowCommandsBrush" />
          <setter name="set_OverrideDefaultWindowCommandsBrush" />
          <returns>
            <type api="T:System.Windows.Media.SolidColorBrush" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.MetroDialogOptions">
          <apidata name="MetroDialogOptions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MetroDialogOptions" />
          <setter name="set_MetroDialogOptions" />
          <returns>
            <type api="T:MahApps.Metro.Controls.Dialogs.MetroDialogSettings" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.EnableDWMDropShadow">
          <apidata name="EnableDWMDropShadow" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_EnableDWMDropShadow" />
          <setter name="set_EnableDWMDropShadow" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>This property will be deleted in the next release. You should use BorderThickness="0" and a GlowBrush="Black" to get a drop shadow around the Window.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.IsWindowDraggable">
          <apidata name="IsWindowDraggable" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsWindowDraggable" />
          <setter name="set_IsWindowDraggable" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.LeftWindowCommandsOverlayBehavior">
          <apidata name="LeftWindowCommandsOverlayBehavior" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_LeftWindowCommandsOverlayBehavior" />
          <setter name="set_LeftWindowCommandsOverlayBehavior" />
          <returns>
            <type api="T:MahApps.Metro.Controls.WindowCommandsOverlayBehavior" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.RightWindowCommandsOverlayBehavior">
          <apidata name="RightWindowCommandsOverlayBehavior" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RightWindowCommandsOverlayBehavior" />
          <setter name="set_RightWindowCommandsOverlayBehavior" />
          <returns>
            <type api="T:MahApps.Metro.Controls.WindowCommandsOverlayBehavior" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.WindowButtonCommandsOverlayBehavior">
          <apidata name="WindowButtonCommandsOverlayBehavior" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_WindowButtonCommandsOverlayBehavior" />
          <setter name="set_WindowButtonCommandsOverlayBehavior" />
          <returns>
            <type api="T:MahApps.Metro.Controls.WindowCommandsOverlayBehavior" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.IconOverlayBehavior">
          <apidata name="IconOverlayBehavior" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IconOverlayBehavior" />
          <setter name="set_IconOverlayBehavior" />
          <returns>
            <type api="T:MahApps.Metro.Controls.WindowCommandsOverlayBehavior" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.WindowMinButtonStyle">
          <apidata name="WindowMinButtonStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_WindowMinButtonStyle" />
          <setter name="set_WindowMinButtonStyle" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>This property will be deleted in the next release. You should use LightMinButtonStyle or DarkMinButtonStyle in WindowButtonCommands to override the style.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.WindowMaxButtonStyle">
          <apidata name="WindowMaxButtonStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_WindowMaxButtonStyle" />
          <setter name="set_WindowMaxButtonStyle" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>This property will be deleted in the next release. You should use LightMaxButtonStyle or DarkMaxButtonStyle in WindowButtonCommands to override the style.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.WindowCloseButtonStyle">
          <apidata name="WindowCloseButtonStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_WindowCloseButtonStyle" />
          <setter name="set_WindowCloseButtonStyle" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>This property will be deleted in the next release. You should use LightCloseButtonStyle or DarkCloseButtonStyle in WindowButtonCommands to override the style.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.WindowTransitionsEnabled">
          <apidata name="WindowTransitionsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_WindowTransitionsEnabled" />
          <setter name="set_WindowTransitionsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.Flyouts">
          <apidata name="Flyouts" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Flyouts" />
          <setter name="set_Flyouts" />
          <returns>
            <type api="T:MahApps.Metro.Controls.FlyoutsControl" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.IconTemplate">
          <apidata name="IconTemplate" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IconTemplate" />
          <setter name="set_IconTemplate" />
          <returns>
            <type api="T:System.Windows.DataTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.TitleTemplate">
          <apidata name="TitleTemplate" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TitleTemplate" />
          <setter name="set_TitleTemplate" />
          <returns>
            <type api="T:System.Windows.DataTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.LeftWindowCommands">
          <apidata name="LeftWindowCommands" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_LeftWindowCommands" />
          <setter name="set_LeftWindowCommands" />
          <returns>
            <type api="T:MahApps.Metro.Controls.WindowCommands" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.RightWindowCommands">
          <apidata name="RightWindowCommands" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RightWindowCommands" />
          <setter name="set_RightWindowCommands" />
          <returns>
            <type api="T:MahApps.Metro.Controls.WindowCommands" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.IgnoreTaskbarOnMaximize">
          <apidata name="IgnoreTaskbarOnMaximize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IgnoreTaskbarOnMaximize" />
          <setter name="set_IgnoreTaskbarOnMaximize" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.TitleForeground">
          <apidata name="TitleForeground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TitleForeground" />
          <setter name="set_TitleForeground" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.SaveWindowPosition">
          <apidata name="SaveWindowPosition" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SaveWindowPosition" />
          <setter name="set_SaveWindowPosition" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.WindowPlacementSettings">
          <apidata name="WindowPlacementSettings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_WindowPlacementSettings" />
          <setter name="set_WindowPlacementSettings" />
          <returns>
            <type api="T:MahApps.Metro.Controls.IWindowPlacementSettings" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.ShowIconOnTitleBar">
          <apidata name="ShowIconOnTitleBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ShowIconOnTitleBar" />
          <setter name="set_ShowIconOnTitleBar" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.IconEdgeMode">
          <apidata name="IconEdgeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IconEdgeMode" />
          <setter name="set_IconEdgeMode" />
          <returns>
            <type api="T:System.Windows.Media.EdgeMode" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.IconBitmapScalingMode">
          <apidata name="IconBitmapScalingMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IconBitmapScalingMode" />
          <setter name="set_IconBitmapScalingMode" />
          <returns>
            <type api="T:System.Windows.Media.BitmapScalingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.ShowTitleBar">
          <apidata name="ShowTitleBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ShowTitleBar" />
          <setter name="set_ShowTitleBar" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.UseNoneWindowStyle">
          <apidata name="UseNoneWindowStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_UseNoneWindowStyle" />
          <setter name="set_UseNoneWindowStyle" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.ShowMinButton">
          <apidata name="ShowMinButton" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ShowMinButton" />
          <setter name="set_ShowMinButton" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.ShowMaxRestoreButton">
          <apidata name="ShowMaxRestoreButton" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ShowMaxRestoreButton" />
          <setter name="set_ShowMaxRestoreButton" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.ShowCloseButton">
          <apidata name="ShowCloseButton" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ShowCloseButton" />
          <setter name="set_ShowCloseButton" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.IsMinButtonEnabled">
          <apidata name="IsMinButtonEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsMinButtonEnabled" />
          <setter name="set_IsMinButtonEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.IsMaxRestoreButtonEnabled">
          <apidata name="IsMaxRestoreButtonEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsMaxRestoreButtonEnabled" />
          <setter name="set_IsMaxRestoreButtonEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.IsCloseButtonEnabled">
          <apidata name="IsCloseButtonEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsCloseButtonEnabled" />
          <setter name="set_IsCloseButtonEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.ShowSystemMenuOnRightClick">
          <apidata name="ShowSystemMenuOnRightClick" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ShowSystemMenuOnRightClick" />
          <setter name="set_ShowSystemMenuOnRightClick" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.TitlebarHeight">
          <apidata name="TitlebarHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TitlebarHeight" />
          <setter name="set_TitlebarHeight" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.TitleCaps">
          <apidata name="TitleCaps" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TitleCaps" />
          <setter name="set_TitleCaps" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.TitleAlignment">
          <apidata name="TitleAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TitleAlignment" />
          <setter name="set_TitleAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.WindowTitleBrush">
          <apidata name="WindowTitleBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_WindowTitleBrush" />
          <setter name="set_WindowTitleBrush" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.GlowBrush">
          <apidata name="GlowBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_GlowBrush" />
          <setter name="set_GlowBrush" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.NonActiveGlowBrush">
          <apidata name="NonActiveGlowBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_NonActiveGlowBrush" />
          <setter name="set_NonActiveGlowBrush" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.NonActiveBorderBrush">
          <apidata name="NonActiveBorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_NonActiveBorderBrush" />
          <setter name="set_NonActiveBorderBrush" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.NonActiveWindowTitleBrush">
          <apidata name="NonActiveWindowTitleBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_NonActiveWindowTitleBrush" />
          <setter name="set_NonActiveWindowTitleBrush" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.WindowTitle">
          <apidata name="WindowTitle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_WindowTitle" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="P:MahApps.Metro.Controls.MetroWindow.CriticalHandle">
          <apidata name="CriticalHandle" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_CriticalHandle" />
          <returns>
            <type api="T:System.IntPtr" ref="false" />
          </returns>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="E:MahApps.Metro.Controls.MetroWindow.FlyoutsStatusChanged">
          <apidata name="FlyoutsStatusChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_FlyoutsStatusChanged" />
          <remover name="remove_FlyoutsStatusChanged" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="MahApps.Metro" module="MahApps.Metro" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:MahApps.Metro.Controls" />
            <type api="T:MahApps.Metro.Controls.MetroWindow" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.Show">
          <apidata name="Show" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.Hide">
          <apidata name="Hide" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.Close">
          <apidata name="Close" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.DragMove">
          <apidata name="DragMove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.ShowDialog">
          <apidata name="ShowDialog" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.Activate">
          <apidata name="Activate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnCreateAutomationPeer">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)">
          <apidata name="OnVisualParentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="oldParent">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)">
              <type api="T:System.Windows.Controls.Control" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)">
              <type api="T:System.Windows.Controls.Control" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="arrangeBounds">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)">
          <apidata name="OnContentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
              <type api="T:System.Windows.Controls.ContentControl" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="oldContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="newContent">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)">
          <apidata name="OnSourceInitialized" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.OnActivated(System.EventArgs)">
          <apidata name="OnActivated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.OnDeactivated(System.EventArgs)">
          <apidata name="OnDeactivated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.OnStateChanged(System.EventArgs)">
          <apidata name="OnStateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.OnLocationChanged(System.EventArgs)">
          <apidata name="OnLocationChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)">
          <apidata name="OnClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.OnClosed(System.EventArgs)">
          <apidata name="OnClosed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.OnContentRendered(System.EventArgs)">
          <apidata name="OnContentRendered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <apidata name="OnManipulationBoundaryFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.LogicalChildren">
          <apidata name="LogicalChildren" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.Controls.ContentControl.LogicalChildren">
              <type api="T:System.Windows.Controls.ContentControl" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_LogicalChildren" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.TaskbarItemInfo">
          <apidata name="TaskbarItemInfo" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TaskbarItemInfo" />
          <setter name="set_TaskbarItemInfo" />
          <returns>
            <type api="T:System.Windows.Shell.TaskbarItemInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.AllowsTransparency">
          <apidata name="AllowsTransparency" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowsTransparency" />
          <setter name="set_AllowsTransparency" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.Title">
          <apidata name="Title" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Title" />
          <setter name="set_Title" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.Icon">
          <apidata name="Icon" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Icon" />
          <setter name="set_Icon" />
          <returns>
            <type api="T:System.Windows.Media.ImageSource" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.SizeToContent">
          <apidata name="SizeToContent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SizeToContent" />
          <setter name="set_SizeToContent" />
          <returns>
            <type api="T:System.Windows.SizeToContent" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.Top">
          <apidata name="Top" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Top" />
          <setter name="set_Top" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Window.Left">
          <apidata name="Left" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Left" />
          <setter name="set_Left" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Window.RestoreBounds">
          <apidata name="RestoreBounds" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_RestoreBounds" />
          <returns>
            <type api="T:System.Windows.Rect" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.WindowStartupLocation">
          <apidata name="WindowStartupLocation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_WindowStartupLocation" />
          <setter name="set_WindowStartupLocation" />
          <returns>
            <type api="T:System.Windows.WindowStartupLocation" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.ShowInTaskbar">
          <apidata name="ShowInTaskbar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ShowInTaskbar" />
          <setter name="set_ShowInTaskbar" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.IsActive">
          <apidata name="IsActive" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsActive" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.Owner">
          <apidata name="Owner" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Owner" />
          <setter name="set_Owner" />
          <returns>
            <type api="T:System.Windows.Window" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.OwnedWindows">
          <apidata name="OwnedWindows" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_OwnedWindows" />
          <returns>
            <type api="T:System.Windows.WindowCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.DialogResult">
          <apidata name="DialogResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DialogResult" />
          <setter name="set_DialogResult" />
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.DialogResultConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Window.WindowStyle">
          <apidata name="WindowStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_WindowStyle" />
          <setter name="set_WindowStyle" />
          <returns>
            <type api="T:System.Windows.WindowStyle" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.WindowState">
          <apidata name="WindowState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_WindowState" />
          <setter name="set_WindowState" />
          <returns>
            <type api="T:System.Windows.WindowState" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.ResizeMode">
          <apidata name="ResizeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ResizeMode" />
          <setter name="set_ResizeMode" />
          <returns>
            <type api="T:System.Windows.ResizeMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.Topmost">
          <apidata name="Topmost" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Topmost" />
          <setter name="set_Topmost" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Window.ShowActivated">
          <apidata name="ShowActivated" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ShowActivated" />
          <setter name="set_ShowActivated" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Window.SourceInitialized">
          <apidata name="SourceInitialized" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SourceInitialized" />
          <remover name="remove_SourceInitialized" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Window.Activated">
          <apidata name="Activated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Activated" />
          <remover name="remove_Activated" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Window.Deactivated">
          <apidata name="Deactivated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Deactivated" />
          <remover name="remove_Deactivated" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Window.StateChanged">
          <apidata name="StateChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_StateChanged" />
          <remover name="remove_StateChanged" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Window.LocationChanged">
          <apidata name="LocationChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LocationChanged" />
          <remover name="remove_LocationChanged" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Window.Closing">
          <apidata name="Closing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Closing" />
          <remover name="remove_Closing" />
          <eventhandler>
            <type api="T:System.ComponentModel.CancelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Window.Closed">
          <apidata name="Closed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Closed" />
          <remover name="remove_Closed" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Window.ContentRendered">
          <apidata name="ContentRendered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContentRendered" />
          <remover name="remove_ContentRendered" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.Window" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.ShouldSerializeContent">
          <apidata name="ShouldSerializeContent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
          <apidata name="AddChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.AddText(System.String)">
          <apidata name="AddText" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="text">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
          <apidata name="OnContentTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
            <parameter name="newContentTemplate">
              <type api="T:System.Windows.DataTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
          <apidata name="OnContentTemplateSelectorChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
            <parameter name="newContentTemplateSelector">
              <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)">
          <apidata name="OnContentStringFormatChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="newContentStringFormat">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.HasContent">
          <apidata name="HasContent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_HasContent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplate">
          <apidata name="ContentTemplate" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplate" />
          <setter name="set_ContentTemplate" />
          <returns>
            <type api="T:System.Windows.DataTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentTemplateSelector">
          <apidata name="ContentTemplateSelector" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentTemplateSelector" />
          <setter name="set_ContentTemplateSelector" />
          <returns>
            <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.ContentControl.ContentStringFormat">
          <apidata name="ContentStringFormat" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContentStringFormat" />
          <setter name="set_ContentStringFormat" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
          <apidata name="OnTemplateChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
            <parameter name="newTemplate">
              <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDoubleClick" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:System.Windows.Media.FontFamily" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.FontSizeConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:System.Windows.FontStretch" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:System.Windows.FontStyle" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:System.Windows.FontWeight" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Control.HandlesScrolling">
          <apidata name="HandlesScrolling" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HandlesScrolling" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.PreviewMouseDoubleClick">
          <apidata name="PreviewMouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDoubleClick" />
          <remover name="remove_PreviewMouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Controls.Control.MouseDoubleClick">
          <apidata name="MouseDoubleClick" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDoubleClick" />
          <remover name="remove_MouseDoubleClick" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
          <apidata name="ShouldSerializeStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <apidata name="OnStyleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
            <parameter name="newStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <apidata name="ParentLayoutInvalidated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
            <parameter name="isControllable">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
          <apidata name="ShouldSerializeTriggers" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <apidata name="GetVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ShouldSerializeResources">
          <apidata name="ShouldSerializeResources" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="childName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <apidata name="FindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <apidata name="TryFindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetResourceReference" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding">
              <type api="T:System.Windows.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="path">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetUIParentCore">
          <apidata name="GetUIParentCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetUIParentCore">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="targetRectangle">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <apidata name="MeasureCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
          <apidata name="ArrangeCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <apidata name="OnRenderSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="sizeInfo">
              <type api="T:System.Windows.SizeChangedInfo" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <apidata name="GetLayoutClip" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="layoutSlotSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <apidata name="MoveFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="request">
              <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <apidata name="PredictFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="direction">
              <type api="T:System.Windows.Input.FocusNavigationDirection" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginInit">
          <apidata name="BeginInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.EndInit">
          <apidata name="EndInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <apidata name="OnInitialized" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <apidata name="RegisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="scopedElement">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
          <apidata name="UnregisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UpdateDefaultStyle">
          <apidata name="UpdateDefaultStyle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <apidata name="AddLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <apidata name="RemoveLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <apidata name="OverridesDefaultStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OverridesDefaultStyle" />
          <setter name="set_OverridesDefaultStyle" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:System.Windows.TriggerCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.TemplatedParent">
          <apidata name="TemplatedParent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TemplatedParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <apidata name="VisualChildrenCount" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.Media.Visual.VisualChildrenCount">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_VisualChildrenCount" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:System.Windows.ResourceDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <apidata name="InheritanceBehavior" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InheritanceBehavior" />
          <setter name="set_InheritanceBehavior" />
          <returns>
            <type api="T:System.Windows.InheritanceBehavior" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.BindingGroup">
          <apidata name="BindingGroup" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BindingGroup" />
          <setter name="set_BindingGroup" />
          <returns>
            <type api="T:System.Windows.Data.BindingGroup" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.Windows.Markup.XmlLanguage" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Windows.IFrameworkInputElement.Name">
              <type api="T:System.Windows.IFrameworkInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InputScope">
          <apidata name="InputScope" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InputScope" />
          <setter name="set_InputScope" />
          <returns>
            <type api="T:System.Windows.Input.InputScope" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.LayoutTransform">
          <apidata name="LayoutTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_LayoutTransform" />
          <setter name="set_LayoutTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:System.Windows.FlowDirection" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <apidata name="FocusVisualStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FocusVisualStyle" />
          <setter name="set_FocusVisualStyle" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Cursor">
          <apidata name="Cursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Cursor" />
          <setter name="set_Cursor" />
          <returns>
            <type api="T:System.Windows.Input.Cursor" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ForceCursor">
          <apidata name="ForceCursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ForceCursor" />
          <setter name="set_ForceCursor" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsInitialized">
          <apidata name="IsInitialized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInitialized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsLoaded">
          <apidata name="IsLoaded" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsLoaded" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ToolTip">
          <apidata name="ToolTip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ToolTip" />
          <setter name="set_ToolTip" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ContextMenu">
          <apidata name="ContextMenu" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContextMenu" />
          <setter name="set_ContextMenu" />
          <returns>
            <type api="T:System.Windows.Controls.ContextMenu" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.TargetUpdated">
          <apidata name="TargetUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TargetUpdated" />
          <remover name="remove_TargetUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SourceUpdated">
          <apidata name="SourceUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SourceUpdated" />
          <remover name="remove_SourceUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <apidata name="RequestBringIntoView" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_RequestBringIntoView" />
          <remover name="remove_RequestBringIntoView" />
          <eventhandler>
            <type api="T:System.Windows.RequestBringIntoViewEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RequestBringIntoViewEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:System.Windows.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Initialized">
          <apidata name="Initialized" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Initialized" />
          <remover name="remove_Initialized" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipOpening">
          <apidata name="ToolTipOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipOpening" />
          <remover name="remove_ToolTipOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipClosing">
          <apidata name="ToolTipClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipClosing" />
          <remover name="remove_ToolTipClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <apidata name="ContextMenuOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuOpening" />
          <remover name="remove_ContextMenuOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <apidata name="ContextMenuClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuClosing" />
          <remover name="remove_ContextMenuClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeInputBindings">
          <apidata name="ShouldSerializeInputBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ShouldSerializeCommandBindings">
          <apidata name="ShouldSerializeCommandBindings" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)">
          <apidata name="RaiseEvent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
            <parameter name="handledEventsToo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
          <apidata name="AddToEventRoute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="route">
              <type api="T:System.Windows.EventRoute" ref="true" />
            </parameter>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnPreviewMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnPreviewMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnGotMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnLostMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
          <apidata name="OnQueryCursor" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnPreviewStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnPreviewStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnGotStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnLostStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnPreviewTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnPreviewQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnPreviewGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnGotTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnLostTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateVisual">
          <apidata name="InvalidateVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)">
          <apidata name="OnChildDesiredSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)">
          <apidata name="OnRender" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="drawingContext">
              <type api="T:System.Windows.Media.DrawingContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)">
          <apidata name="TranslatePoint" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
            <parameter name="relativeTo">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)">
          <apidata name="InputHitTest" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.IInputElement" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureMouse">
          <apidata name="CaptureMouse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureMouse">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture">
          <apidata name="ReleaseMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureStylus">
          <apidata name="CaptureStylus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureStylus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseStylusCapture">
          <apidata name="ReleaseStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Focus">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.Focus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <apidata name="OnAccessKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.AccessKeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.PointHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.HitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.GeometryHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeometryHitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)">
          <apidata name="CaptureTouch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)">
          <apidata name="ReleaseTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseAllTouchCaptures">
          <apidata name="ReleaseAllTouchCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasAnimatedProperties">
          <apidata name="HasAnimatedProperties" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_HasAnimatedProperties" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.InputBindings">
          <apidata name="InputBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InputBindings" />
          <returns>
            <type api="T:System.Windows.Input.InputBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.CommandBindings">
          <apidata name="CommandBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_CommandBindings" />
          <returns>
            <type api="T:System.Windows.Input.CommandBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.StylusPlugIns">
          <apidata name="StylusPlugIns" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_StylusPlugIns" />
          <returns>
            <type api="T:System.Windows.Input.StylusPlugIns.StylusPlugInCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMeasureValid">
          <apidata name="IsMeasureValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMeasureValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsArrangeValid">
          <apidata name="IsArrangeValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsArrangeValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderSize" />
          <setter name="set_RenderSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseDirectlyOver">
          <apidata name="IsMouseDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseOver">
          <apidata name="IsMouseOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusOver">
          <apidata name="IsStylusOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocusWithin">
          <apidata name="IsKeyboardFocusWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocusWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocusWithin">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptured">
          <apidata name="IsMouseCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptureWithin">
          <apidata name="IsMouseCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusDirectlyOver">
          <apidata name="IsStylusDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptured">
          <apidata name="IsStylusCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptureWithin">
          <apidata name="IsStylusCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocused">
          <apidata name="IsKeyboardFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocused">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsInputMethodEnabled">
          <apidata name="IsInputMethodEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInputMethodEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.OpacityMask">
          <apidata name="OpacityMask" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OpacityMask" />
          <setter name="set_OpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffect">
          <apidata name="BitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffect" />
          <setter name="set_BitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.Effect">
          <apidata name="Effect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Effect" />
          <setter name="set_Effect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffectInput">
          <apidata name="BitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffectInput" />
          <setter name="set_BitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Uid">
          <apidata name="Uid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Uid" />
          <setter name="set_Uid" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:System.Windows.Visibility" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.ClipToBounds">
          <apidata name="ClipToBounds" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ClipToBounds" />
          <setter name="set_ClipToBounds" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.SnapsToDevicePixels">
          <apidata name="SnapsToDevicePixels" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SnapsToDevicePixels" />
          <setter name="set_SnapsToDevicePixels" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasEffectiveKeyboardFocus">
          <apidata name="HasEffectiveKeyboardFocus" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HasEffectiveKeyboardFocus" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsFocused">
          <apidata name="IsFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsEnabled">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabledCore">
          <apidata name="IsEnabledCore" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsEnabledCore" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsVisible">
          <apidata name="IsVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Focusable">
          <apidata name="Focusable" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Focusable" />
          <setter name="set_Focusable" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.Focusable">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.PersistId">
          <apidata name="PersistId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_PersistId" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.IsManipulationEnabled">
          <apidata name="IsManipulationEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsManipulationEnabled" />
          <setter name="set_IsManipulationEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesOver">
          <apidata name="AreAnyTouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver">
          <apidata name="AreAnyTouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin">
          <apidata name="AreAnyTouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCapturedWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCaptured">
          <apidata name="AreAnyTouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCaptured">
          <apidata name="TouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCaptured" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCapturedWithin">
          <apidata name="TouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCapturedWithin" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesOver">
          <apidata name="TouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesDirectlyOver">
          <apidata name="TouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesDirectlyOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseDown">
          <apidata name="PreviewMouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDown" />
          <remover name="remove_PreviewMouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseDown">
          <apidata name="MouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDown" />
          <remover name="remove_MouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseUp">
          <apidata name="PreviewMouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseUp" />
          <remover name="remove_PreviewMouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseUp">
          <apidata name="MouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseUp" />
          <remover name="remove_MouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonDown">
          <apidata name="PreviewMouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonDown" />
          <remover name="remove_PreviewMouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown">
          <apidata name="MouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonDown" />
          <remover name="remove_MouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonUp">
          <apidata name="PreviewMouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonUp" />
          <remover name="remove_PreviewMouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp">
          <apidata name="MouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonUp" />
          <remover name="remove_MouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonDown">
          <apidata name="PreviewMouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonDown" />
          <remover name="remove_PreviewMouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonDown">
          <apidata name="MouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonDown" />
          <remover name="remove_MouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonUp">
          <apidata name="PreviewMouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonUp" />
          <remover name="remove_PreviewMouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonUp">
          <apidata name="MouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonUp" />
          <remover name="remove_MouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseMove">
          <apidata name="PreviewMouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseMove" />
          <remover name="remove_PreviewMouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseMove">
          <apidata name="MouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseMove" />
          <remover name="remove_MouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseWheel">
          <apidata name="PreviewMouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseWheel" />
          <remover name="remove_PreviewMouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseWheel">
          <apidata name="MouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseWheel" />
          <remover name="remove_MouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseEnter">
          <apidata name="MouseEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseEnter" />
          <remover name="remove_MouseEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeave">
          <apidata name="MouseLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeave" />
          <remover name="remove_MouseLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotMouseCapture">
          <apidata name="GotMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotMouseCapture" />
          <remover name="remove_GotMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostMouseCapture">
          <apidata name="LostMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostMouseCapture" />
          <remover name="remove_LostMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryCursor">
          <apidata name="QueryCursor" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryCursor" />
          <remover name="remove_QueryCursor" />
          <eventhandler>
            <type api="T:System.Windows.Input.QueryCursorEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusDown">
          <apidata name="PreviewStylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusDown" />
          <remover name="remove_PreviewStylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusDown">
          <apidata name="StylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusDown" />
          <remover name="remove_StylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusUp">
          <apidata name="PreviewStylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusUp" />
          <remover name="remove_PreviewStylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusUp">
          <apidata name="StylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusUp" />
          <remover name="remove_StylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusMove">
          <apidata name="PreviewStylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusMove" />
          <remover name="remove_PreviewStylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusMove">
          <apidata name="StylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusMove" />
          <remover name="remove_StylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInAirMove">
          <apidata name="PreviewStylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInAirMove" />
          <remover name="remove_PreviewStylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInAirMove">
          <apidata name="StylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInAirMove" />
          <remover name="remove_StylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusEnter">
          <apidata name="StylusEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusEnter" />
          <remover name="remove_StylusEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusLeave">
          <apidata name="StylusLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusLeave" />
          <remover name="remove_StylusLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInRange">
          <apidata name="PreviewStylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInRange" />
          <remover name="remove_PreviewStylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInRange">
          <apidata name="StylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInRange" />
          <remover name="remove_StylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusOutOfRange">
          <apidata name="PreviewStylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusOutOfRange" />
          <remover name="remove_PreviewStylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusOutOfRange">
          <apidata name="StylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusOutOfRange" />
          <remover name="remove_StylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusSystemGesture">
          <apidata name="PreviewStylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusSystemGesture" />
          <remover name="remove_PreviewStylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusSystemGesture">
          <apidata name="StylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusSystemGesture" />
          <remover name="remove_StylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotStylusCapture">
          <apidata name="GotStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotStylusCapture" />
          <remover name="remove_GotStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostStylusCapture">
          <apidata name="LostStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostStylusCapture" />
          <remover name="remove_LostStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonDown">
          <apidata name="StylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonDown" />
          <remover name="remove_StylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonUp">
          <apidata name="StylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonUp" />
          <remover name="remove_StylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonDown">
          <apidata name="PreviewStylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonDown" />
          <remover name="remove_PreviewStylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonUp">
          <apidata name="PreviewStylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonUp" />
          <remover name="remove_PreviewStylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyDown">
          <apidata name="PreviewKeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyDown" />
          <remover name="remove_PreviewKeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyUp">
          <apidata name="PreviewKeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyUp" />
          <remover name="remove_PreviewKeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGotKeyboardFocus">
          <apidata name="PreviewGotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGotKeyboardFocus" />
          <remover name="remove_PreviewGotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewGotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotKeyboardFocus">
          <apidata name="GotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotKeyboardFocus" />
          <remover name="remove_GotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewLostKeyboardFocus">
          <apidata name="PreviewLostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewLostKeyboardFocus" />
          <remover name="remove_PreviewLostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewLostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostKeyboardFocus">
          <apidata name="LostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostKeyboardFocus" />
          <remover name="remove_LostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTextInput">
          <apidata name="PreviewTextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTextInput" />
          <remover name="remove_PreviewTextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewTextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TextInput">
          <apidata name="TextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_TextInput" />
          <remover name="remove_TextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.TextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewQueryContinueDrag">
          <apidata name="PreviewQueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewQueryContinueDrag" />
          <remover name="remove_PreviewQueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryContinueDrag">
          <apidata name="QueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryContinueDrag" />
          <remover name="remove_QueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGiveFeedback">
          <apidata name="PreviewGiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGiveFeedback" />
          <remover name="remove_PreviewGiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GiveFeedback">
          <apidata name="GiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GiveFeedback" />
          <remover name="remove_GiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragEnter">
          <apidata name="PreviewDragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragEnter" />
          <remover name="remove_PreviewDragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragOver">
          <apidata name="PreviewDragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragOver" />
          <remover name="remove_PreviewDragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragLeave">
          <apidata name="PreviewDragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragLeave" />
          <remover name="remove_PreviewDragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDrop">
          <apidata name="PreviewDrop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDrop" />
          <remover name="remove_PreviewDrop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchDown">
          <apidata name="PreviewTouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchDown" />
          <remover name="remove_PreviewTouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchDown">
          <apidata name="TouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchDown" />
          <remover name="remove_TouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchMove">
          <apidata name="PreviewTouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchMove" />
          <remover name="remove_PreviewTouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchMove">
          <apidata name="TouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchMove" />
          <remover name="remove_TouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchUp">
          <apidata name="PreviewTouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchUp" />
          <remover name="remove_PreviewTouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchUp">
          <apidata name="TouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchUp" />
          <remover name="remove_TouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotTouchCapture">
          <apidata name="GotTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotTouchCapture" />
          <remover name="remove_GotTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostTouchCapture">
          <apidata name="LostTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostTouchCapture" />
          <remover name="remove_LostTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchEnter">
          <apidata name="TouchEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchEnter" />
          <remover name="remove_TouchEnter" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchLeave">
          <apidata name="TouchLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchLeave" />
          <remover name="remove_TouchLeave" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseDirectlyOverChanged">
          <apidata name="IsMouseDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseDirectlyOverChanged" />
          <remover name="remove_IsMouseDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged">
          <apidata name="IsKeyboardFocusWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusWithinChanged" />
          <remover name="remove_IsKeyboardFocusWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCapturedChanged">
          <apidata name="IsMouseCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCapturedChanged" />
          <remover name="remove_IsMouseCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCaptureWithinChanged">
          <apidata name="IsMouseCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCaptureWithinChanged" />
          <remover name="remove_IsMouseCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusDirectlyOverChanged">
          <apidata name="IsStylusDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusDirectlyOverChanged" />
          <remover name="remove_IsStylusDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCapturedChanged">
          <apidata name="IsStylusCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCapturedChanged" />
          <remover name="remove_IsStylusCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCaptureWithinChanged">
          <apidata name="IsStylusCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCaptureWithinChanged" />
          <remover name="remove_IsStylusCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusedChanged">
          <apidata name="IsKeyboardFocusedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusedChanged" />
          <remover name="remove_IsKeyboardFocusedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsHitTestVisibleChanged">
          <apidata name="IsHitTestVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsHitTestVisibleChanged" />
          <remover name="remove_IsHitTestVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsVisibleChanged">
          <apidata name="IsVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsVisibleChanged" />
          <remover name="remove_IsVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.FocusableChanged">
          <apidata name="FocusableChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_FocusableChanged" />
          <remover name="remove_FocusableChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationBoundaryFeedback">
          <apidata name="ManipulationBoundaryFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationBoundaryFeedback" />
          <remover name="remove_ManipulationBoundaryFeedback" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <apidata name="AddVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <apidata name="RemoveVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <apidata name="OnVisualChildrenChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="visualAdded">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
            <parameter name="visualRemoved">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)">
          <apidata name="IsAncestorOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)">
          <apidata name="IsDescendantOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
          <apidata name="FindCommonVisualAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="otherVisual">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Media3D.Visual3D" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Media3D.GeneralTransform2DTo3D" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <apidata name="TransformToDescendant" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="visual">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
          <apidata name="PointToScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
          <apidata name="PointFromScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualParent">
          <apidata name="VisualParent" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_VisualParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTransform">
          <apidata name="VisualTransform" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTransform" />
          <setter name="set_VisualTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEffect">
          <apidata name="VisualEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEffect" />
          <setter name="set_VisualEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffect">
          <apidata name="VisualBitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffect" />
          <setter name="set_VisualBitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffectInput">
          <apidata name="VisualBitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffectInput" />
          <setter name="set_VisualBitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualCacheMode">
          <apidata name="VisualCacheMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualCacheMode" />
          <setter name="set_VisualCacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <apidata name="VisualScrollableAreaClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualScrollableAreaClip" />
          <setter name="set_VisualScrollableAreaClip" />
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Windows.Rect" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClip">
          <apidata name="VisualClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClip" />
          <setter name="set_VisualClip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOffset">
          <apidata name="VisualOffset" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOffset" />
          <setter name="set_VisualOffset" />
          <returns>
            <type api="T:System.Windows.Vector" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacity">
          <apidata name="VisualOpacity" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacity" />
          <setter name="set_VisualOpacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEdgeMode">
          <apidata name="VisualEdgeMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEdgeMode" />
          <setter name="set_VisualEdgeMode" />
          <returns>
            <type api="T:System.Windows.Media.EdgeMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapScalingMode">
          <apidata name="VisualBitmapScalingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapScalingMode" />
          <setter name="set_VisualBitmapScalingMode" />
          <returns>
            <type api="T:System.Windows.Media.BitmapScalingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClearTypeHint">
          <apidata name="VisualClearTypeHint" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClearTypeHint" />
          <setter name="set_VisualClearTypeHint" />
          <returns>
            <type api="T:System.Windows.Media.ClearTypeHint" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextRenderingMode">
          <apidata name="VisualTextRenderingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextRenderingMode" />
          <setter name="set_VisualTextRenderingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextRenderingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextHintingMode">
          <apidata name="VisualTextHintingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextHintingMode" />
          <setter name="set_VisualTextHintingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextHintingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacityMask">
          <apidata name="VisualOpacityMask" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacityMask" />
          <setter name="set_VisualOpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <apidata name="VisualXSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualXSnappingGuidelines" />
          <setter name="set_VisualXSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <apidata name="VisualYSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualYSnappingGuidelines" />
          <setter name="set_VisualYSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetCurrentValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <apidata name="CoerceValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <apidata name="InvalidateProperty" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <apidata name="ShouldSerializeProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <apidata name="GetLocalValueEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Windows.LocalValueEnumerator" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType">
          <apidata name="DependencyObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DependencyObjectType" />
          <returns>
            <type api="T:System.Windows.DependencyObjectType" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.IsSealed">
          <apidata name="IsSealed" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsSealed" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <apidata name="CheckAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <apidata name="VerifyAccess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:System.Windows.Threading.Dispatcher" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell.Views" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Shell.Views.MainWindow.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell.Views" />
        <type api="T:TalkingKeyboard.Shell.Views.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:TalkingKeyboard.Shell.Views.MainWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="TalkingKeyboard.Shell" module="TalkingKeyboard.Shell" kind="WindowsApplication" />
        <namespace api="N:TalkingKeyboard.Shell.Views" />
        <type api="T:TalkingKeyboard.Shell.Views.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="N:XamlGeneratedNamespace">
      <apidata name="XamlGeneratedNamespace" group="namespace" />
      <elements>
        <element api="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper" />
        <element api="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper" />
      </elements>
    </api>
    <api id="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
      <apidata name="GeneratedInternalTypeHelper" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Markup.InternalTypeHelper" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:XamlGeneratedNamespace" />
      </containers>
    </api>
    <api id="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Infrastructure" module="TalkingKeyboard.Infrastructure" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:XamlGeneratedNamespace" />
        <type api="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper" ref="true" />
      </containers>
    </api>
    <api id="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
      <apidata name="GeneratedInternalTypeHelper" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Markup.InternalTypeHelper" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:XamlGeneratedNamespace" />
      </containers>
    </api>
    <api id="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="TalkingKeyboard.Modules.SingleKeyBoard" module="TalkingKeyboard.Modules.SingleKeyBoard" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:XamlGeneratedNamespace" />
        <type api="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>